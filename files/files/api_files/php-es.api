self
parent
$this
$GLOBALS
$_SERVER
$_GET
$_POST
$_FILES
$_REQUEST
$_SESSION
$_ENV
$_COOKIE
$php_errormsg
$http_response_header
$argc
$argv
abstract
and
as
break
callable
case
catch
class
clone
const
continue
declare
default
do
echo
else
elseif
enddeclare
endfor
endforeach
endif
endswitch
endwhile
extends
final
finally
fn
for
foreach
function
global
goto
if
implements
include
include_once
instanceof
insteadof
interface
match
namespace
new
or
print
private
protected
public
readonly
require
require_once
return
static
switch
throw
trait
try
use
var
while
xor
yield
from
__CLASS__
__DIR__
__FILE__
__FUNCTION__
__LINE__
__METHOD__
__PROPERTY__
__NAMESPACE__
__TRAIT__
PHP_VERSION
PHP_MAJOR_VERSION
PHP_MINOR_VERSION
PHP_RELEASE_VERSION
PHP_VERSION_ID
PHP_EXTRA_VERSION
ZEND_THREAD_SAFE
ZEND_DEBUG_BUILD
PHP_ZTS
PHP_DEBUG
DEBUG_BACKTRACE_PROVIDE_OBJECT
DEBUG_BACKTRACE_IGNORE_ARGS
PHP_MAXPATHLEN
PHP_OS
PHP_OS_FAMILY
PHP_SAPI
PHP_EOL
PHP_INT_MAX
PHP_INT_MIN
PHP_INT_SIZE
PHP_FLOAT_DIG
PHP_FLOAT_EPSILON
PHP_FLOAT_MIN
PHP_FLOAT_MAX
DEFAULT_INCLUDE_PATH
PHP_PREFIX
PHP_BINDIR
PHP_SBINDIR
PHP_BINARY
PHP_MANDIR
PHP_LIBDIR
PHP_DATADIR
PHP_SYSCONFDIR
PHP_LOCALSTATEDIR
PHP_CONFIG_FILE_PATH
PHP_CONFIG_FILE_SCAN_DIR
PHP_SHLIB_SUFFIX
PHP_FD_SETSIZE
PHP_WINDOWS_EVENT_CTRL_C
PHP_WINDOWS_EVENT_CTRL_BREAK
PHP_CLI_PROCESS_TITLE
STDERR
STDIN
STDOUT
int
float
bool
string
true
false
null
void
iterable
object
mixed
never
enum
resource
numeric
__construct(mixed ...$values)	Object constructor
__destruct()	Object destructor
__call(string $name, array $arguments): mixed	Triggered when invoking inaccessible methods in an object context
__callStatic(string $name, array $arguments): mixed	Triggered when invoking inaccessible methods in a static context
__get(string $name): mixed	Utilized for reading data from inaccessible properties
__set(string $name, mixed $value): void	Run when writing data to inaccessible properties
__isset(string $name): bool	Triggered by calling isset() or empty() on inaccessible properties
__unset(string $name): void	Invoked when unset() is used on inaccessible properties
__sleep(): array	Called by serialize()
__wakeup(): void	Called by unserialize()
__serialize(): array	Called by serialize()
__unserialize(array $data): void	Called by unserialize()
__toString(): string	Decide how to react when object is converted to a string
__invoke(mixed ...$values): mixed	Called when a script tries to call an object as a function
__set_state(array $properties): object	Called by var_export() result
__clone(): void	Called after cloning
__debugInfo(): array	Called by var_dump()
AllowDynamicProperties()	(new) Construct a new AllowDynamicProperties attribute instance
>offsetExists(mixed $offset): bool	(ArrayAccess) Comprobar si existe un índice
>offsetGet(mixed $offset): mixed	(ArrayAccess) Offset para recuperar
>offsetSet(mixed $offset, mixed $value): void	(ArrayAccess) Asignar un valor al índice esepecificado
>offsetUnset(mixed $offset): void	(ArrayAccess) Destruye un offset
Attribute(int $flags = Attribute::TARGET_ALL)	(new) Construct a new Attribute instance
Deprecated(string|null $message = null, string|null $since = null)	(new) Construct a new Deprecated attribute instance
Override()	(new) Construct a new Override attribute instance
BackedEnum::from(int|string $value): static	Maps a scalar to an enum instance
BackedEnum::tryFrom(int|string $value): static|null	Maps a scalar to an enum instance or null
Closure::bind(Closure $closure, object|null $newThis, object|string|null $newScope = "static"): Closure|null	Duplicar un cierre con un objeto vinculado y ámbito de clase especificados
>bindTo(object|null $newThis, object|string|null $newScope = "static"): Closure|null	(Closure) Duplicar el cierre con un objeto vinculado y ámbito de clase nuevos
>call(object $newThis, mixed ...$args): mixed	(Closure) Vincula y llama al cierre
Closure()	(new) Constructor que anula la instanciación
Closure::fromCallable(callable $callback): Closure	Convierte un 'callable' en un cierre
>count(): int	(Countable) Count elements of an object
>__clone(): void	(Error) Clonar el error
Error(string $message = "", int $code = ?, Throwable|null $previous = null)	(new) Construir el objeto error
>getCode(): int	(Error) Obtener el código de error
>getFile(): string	(Error) Obtener el fichero en el que ocurrío el error
>getLine(): int	(Error) Obtener la línea en la que ocurrió el error
>getMessage(): string	(Error) Obtener el mensaje de error
>getPrevious(): Throwable|null	(Error) Devuelve el objeto Throwable anterior
>getTrace(): array	(Error) Obtener la traza de la pila
>getTraceAsString(): string	(Error) Obtener la traza de la pila como un string
>__toString(): string	(Error) Representación de string del error
ErrorException(string $message = "", int $code = ?, int $severity = E_ERROR, string|null $filename = null, int|null $line = null, Throwable|null $previous = null)	(new) Constructor de la excepción
>getSeverity(): int	(ErrorException) Obtiene la severidad de la excepción
>__clone(): void	(Exception) Clona la excepción
Exception(string $message = "", int $code = ?, Throwable|null $previous = null)	(new) Constructor de la excepción
>getCode(): int	(Exception) Obtiene el código de una excepción
>getFile(): string	(Exception) Obtiene el fichero en el que se creó la excepción
>getLine(): int	(Exception) Obtiene la línea en el que se creó la excepción
>getMessage(): string	(Exception) Obtiene el mensaje de Excepción
>getPrevious(): Throwable|null	(Exception) Devuelve la Throwable anterior
>getTrace(): array	(Exception) Obtiene la traza de la pila
>getTraceAsString(): string	(Exception) Obtiene la traza de la pila como una cadena de caracteres
>__toString(): string	(Exception) Representación de la excepción en formato cadena
Fiber(callable $callback)	(new) Creates a new Fiber instance
Fiber::getCurrent(): Fiber|null	Gets the currently executing Fiber instance
>getReturn(): mixed	(Fiber) Gets the value returned by the Fiber
>isRunning(): bool	(Fiber) Determines if the fiber is running
>isStarted(): bool	(Fiber) Determines if the fiber has started
>isSuspended(): bool	(Fiber) Determines if the fiber is suspended
>isTerminated(): bool	(Fiber) Determines if the fiber has terminated
>resume(mixed $value = null): mixed	(Fiber) Resumes execution of the fiber with a value
>start(mixed ...$args): mixed	(Fiber) Start execution of the fiber
Fiber::suspend(mixed $value = null): mixed	Suspends execution of the current fiber
>throw(Throwable $exception): mixed	(Fiber) Resumes execution of the fiber with an exception
FiberError()	(new) Constructor to disallow direct instantiation
>current(): mixed	(Generator) Obtener el valor producido
>getReturn(): mixed	(Generator) Obtener el valor devuelto de un generador
>key(): mixed	(Generator) Obtener la clave generada
>next(): void	(Generator) Continua la ejecución del generador
>rewind(): void	(Generator) Rebobina el iterador
>send(mixed $value): mixed	(Generator) Enviar un valor al generador
>throw(Throwable $exception): mixed	(Generator) Lanzar una excepción dentro generador
>valid(): bool	(Generator) Verificar si el iterador ha sido cerrado
>__wakeup(): void	(Generator) Serialize callback
InternalIterator()	(new) Private constructor to disallow direct instantiation
>current(): mixed	(InternalIterator) Return the current element
>key(): mixed	(InternalIterator) Return the key of the current element
>next(): void	(InternalIterator) Move forward to next element
>rewind(): void	(InternalIterator) Rewind the Iterator to the first element
>valid(): bool	(InternalIterator) Check if current position is valid
>current(): mixed	(Iterator) Devuelve el elemento actual
>key(): mixed	(Iterator) Devuelve la clave del elemento actual
>next(): void	(Iterator) Avanza al siguiente elemento
>rewind(): void	(Iterator) Rebobine la Iterator al primer elemento
>valid(): bool	(Iterator) Comprueba si la posición actual es válido
>getIterator(): Traversable	(IteratorAggregate) Recuperar un Iterator o traversable externo
ReturnTypeWillChange()	(new) Construct a new ReturnTypeWillChange attribute instance
SensitiveParameter()	(new) Construct a new SensitiveParameter attribute instance
SensitiveParameterValue(mixed $value)	(new) Constructs a new SensitiveParameterValue object
>__debugInfo(): array	(SensitiveParameterValue) Protects the sensitive value against accidental exposure
>getValue(): mixed	(SensitiveParameterValue) Returns the sensitive value
>serialize(): string|null	(Serializable) Representación en formato cadena de un objeto
>unserialize(string $data): void	(Serializable) Construye el objeto
>__toString(): string	(Stringable) Gets a string representation of the object
>getCode(): int	(Throwable) Obtener el código de la excepción
>getFile(): string	(Throwable) Obtiene el fichero en el que se creó el objeto
>getLine(): int	(Throwable) Obtiene la línea en la que el objeto fue instanciado
>getMessage(): string	(Throwable) Obtiene el mensaje
>getPrevious(): Throwable|null	(Throwable) Devuelve el objeto Throwable previo
>getTrace(): array	(Throwable) Obtener la traza de la pila
>getTraceAsString(): string	(Throwable) Obtener la traza de la pila como un string
>__toString(): string	(Throwable) Obtiene un representación de string del objeto lanzado
UnitEnum::cases(): array	Generates a list of cases on an enum
>count(): int	(WeakMap) Counts the number of live entries in the map
>getIterator(): Iterator	(WeakMap) Retrieve an external iterator
>offsetExists(object $object): bool	(WeakMap) Checks whether a certain object is in the map
>offsetGet(object $object): mixed	(WeakMap) Returns the value pointed to by a certain object
>offsetSet(object $object, mixed $value): void	(WeakMap) Updates the map with a new key-value pair
>offsetUnset(object $object): void	(WeakMap) Removes an entry from the map
WeakReference()	(new) Constructor que no permite la instanciación
WeakReference::create(object $object): WeakReference	Crea una nueva referencia débil
>get(): object|null	(WeakReference) Obtiene un objeto débilmente referenciado
ArgumentCountError()	(new) ArgumentCountError es lanzado cuando muy pocos argumentos son pasados a una funcion o método definido por el usuario
ArithmeticError()	(new) Un ArithmeticError es lanzado cuando ocurre un error durante la realización de operaciones matemáticas
ArrayAccess()	(new) Interfaz para proporcionar acceso a objetos como arrays
AssertionError()	(new) Un AssertionError se lanza cuando falla una afirmación realizada mediante assert
BackedEnum()	(new) The BackedEnum interface is automatically applied to backed enumerations by the engine
ClosedGeneratorException()	(new) A ClosedGeneratorException is thrown when trying to retrieve a value from a closed Generator
CompileError()	(new) CompileError es lanzado por algunos errores de compilación, que anteriormente emitió un error fatal
Countable()	(new) Classes implementing Countable can be used with the count function
DivisionByZeroError()	(new) Un DivisionByZeroError se lanza al intentar dividir un número por cero
Generator()	(new) Los objetos Generator son devueltos desde generadores
Iterator()	(new) Interfaz para iteradores externos u objetos que pueden ser iterados internamente por sí mismos
IteratorAggregate()	(new) Para crear una interfaz externa Iterator
ParseError()	(new) Un ParseError se lanza cuando ocurre un error al analizar código de PHP, tal como cuando se llama a eval
__PHP_Incomplete_Class()	(new) Created by unserialize when trying to unserialize an undefined class or a class that is not listed in the allowed_classes of unserialize's $options array
RequestParseBodyException()	(new) A RequestParseBodyException is thrown in request_parse_body when the request body is invalid, according to the Content-Type header
Serializable()	(new) Interfaz para personalizar la serialización
stdClass()	(new) A generic empty class with dynamic properties
Stringable()	(new) The Stringable interface denotes a class as having a __toString() method
Throwable()	(new) Throwable es la interfaz base para cualquier objeto que pueda ser lanzado mediante una sentencia throw, incluyendo Error y Exception
Traversable()	(new) Interfaz para detectar si una clase puede recorrerse mediante foreach
TypeError()	(new) Un TypeError puede ser lanzado cuando: El valor que se está estableciendo para una propiedad de clase no coincide con el tipo declarado correspondiente de la propiedad
UnhandledMatchError()	(new) An UnhandledMatchError is thrown when the subject passed to a match expression is not handled by any arm of the match expression
UnitEnum()	(new) The UnitEnum interface is automatically applied to all enumerations by the engine
ValueError()	(new) A ValueError is thrown when the type of an argument is correct but the value of it is incorrect
WeakMap()	(new) A WeakMap is map (or dictionary) that accepts objects as keys
array_all(array $array, callable $callback): bool	Checks if all array elements satisfy a callback function
array_any(array $array, callable $callback): bool	Checks if at least one array element satisfies a callback function
array_change_key_case(array $array, int $case = CASE_LOWER): array	Cambia a mayúsculas o minúsculas todas las claves en un array
array_chunk(array $array, int $length, bool $preserve_keys = false): array	Divide un array en fragmentos
array_column(array $array, int|string|null $column_key, int|string|null $index_key = null): array	Devuelve los valores de una sola columna del array de entrada
array_combine(array $keys, array $values): array	Crea un nuevo array, usando una matriz para las claves y otra para sus valores
array_count_values(array $array): array	Cuenta todos los valores de un array
array_diff_assoc(array $array, array ...$arrays): array	Calcula la diferencia entre arrays con un chequeo adicional de índices
array_diff_key(array $array, array ...$arrays): array	Calcula la diferencia entre arrays empleando las claves para la comparación
array_diff_uassoc(array $array, array ...$arrays, callable $key_compare_func): array	Calcula la diferencia entre arrays con un chequeo adicional de índices que se realiza por una función de devolución de llamada suministrada por el usuario
array_diff_ukey(array $array, array ...$arrays, callable $key_compare_func): array	Calcula la diferencia entre arrays usando una función de devolución de llamada en las keys para comparación
array_diff(array $array, array ...$arrays): array	Calcula la diferencia entre arrays
array_fill_keys(array $keys, mixed $value): array	Llena un array con valores, especificando las keys
array_fill(int $start_index, int $count, mixed $value): array	Llena un array con valores
array_filter(array $array, callable|null $callback = null, int $mode = ?): array	Filtra elementos de un array usando una función de devolución de llamada
array_find_key(array $array, callable $callback): mixed	Returns the key of the first element satisfying a callback function
array_find(array $array, callable $callback): mixed	Returns the first element satisfying a callback function
array_flip(array $array): array	Intercambia todas las claves de un array con sus valores asociados
array_intersect_assoc(array $array, array ...$arrays): array	Calcula la intersección de arrays con un chequeo adicional de índices
array_intersect_key(array $array, array ...$arrays): array	Calcula la intersección de arrays usando sus claves para la comparación
array_intersect_uassoc(array $array, array ...$arrays, callable $key_compare_func): array	Calcula la intersección de arrays con una comprobación adicional de índices, los cuales se comparan con una función de retrollamada
array_intersect_ukey(array $array, array ...$arrays, callable $key_compare_func): array	Calcula la intersección de arrays usando una función de devolución de llamada en las claves para la comparación
array_intersect(array $array, array ...$arrays): array	Calcula la intersección de arrays
array_is_list(array $array): bool	Checks whether a given $array is a list
array_key_exists(string|int|float|bool|resource|null $key, array $array): bool	Verifica si el índice o clave dada existe en el array
array_key_first(array $array): int|string|null	Obtiene la primera clave de un array
array_key_last(array $array): int|string|null	Obtiene la última clave de un array
array_keys(array $array): array	Devuelve todas las claves de un array o un subconjunto de claves de un array
array_keys(array $array, mixed $filter_value, bool $strict = false): array	Devuelve todas las claves de un array o un subconjunto de claves de un array
array_map(callable|null $callback, array $array, array ...$arrays): array	Aplica la retrollamada a los elementos de los arrays dados
array_merge_recursive(array ...$arrays): array	Une dos o más arrays recursivamente
array_merge(array ...$arrays): array	Combina dos o más arrays
array_multisort(array $array1, mixed $array1_sort_order = SORT_ASC, mixed $array1_sort_flags = SORT_REGULAR, mixed ...$rest): bool	Ordena varios arrays, o arrays multidimensionales
array_pad(array $array, int $length, mixed $value): array	Rellena un array a la longitud especificada con un valor
array_pop(array $array): mixed	Extrae el último elemento del final del array
array_product(array $array): int|float	Calcula el producto de los valores de un array
array_push(array $array, mixed ...$values): int	Inserta uno o más elementos al final de un array
array_rand(array $array, int $num = 1): int|string|array	Seleccionar una o más claves aleatorias de un array
array_reduce(array $array, callable $callback, mixed $initial = null): mixed	Reduce iterativamente un array a un solo valor usando una función llamada de retorno
array_replace_recursive(array $array, array ...$replacements): array	Reemplaza los elementos de los arrays pasados al primer array de forma recursiva
array_replace(array $array, array ...$replacements): array	Reemplaza los elementos del array original con elementos de array adicionales
array_reverse(array $array, bool $preserve_keys = false): array	Devuelve un array con los elementos en orden inverso
array_search(mixed $needle, array $haystack, bool $strict = false): int|string|false	Busca un valor determinado en un array y devuelve la primera clave correspondiente en caso de éxito
array_shift(array $array): mixed	Quita un elemento del principio del array
array_slice(array $array, int $offset, int|null $length = null, bool $preserve_keys = false): array	Extraer una parte de un array
array_splice(array $array, int $offset, int|null $length = null, mixed $replacement = []): array	Elimina una porción del array y la reemplaza con otra cosa
array_sum(array $array): int|float	Calcular la suma de los valores de un array
array_udiff_assoc(array $array, array ...$arrays, callable $value_compare_func): array	Computa la diferencia entre arrays con una comprobación de indices adicional, compara la información mediante una función de llamada de retorno
array_udiff_uassoc(array $array, array ...$arrays, callable $value_compare_func, callable $key_compare_func): array	Computa la diferencia entre arrays con una verificación de índices adicional, compara la información y los índices mediante una función de llamada de retorno
array_udiff(array $array, array ...$arrays, callable $value_compare_func): array	Computa la diferencia entre arrays, usando una llamada de retorno para la comparación de datos
array_uintersect_assoc(array $array, array ...$arrays, callable $value_compare_func): array	Calcula la intersección de arrays con una comprobación de índices adicional, compara la información mediante una función de retrollamada
array_uintersect_uassoc(array $array1, array ...$arrays, callable $value_compare_func, callable $key_compare_func): array	Calcula la intersección de arrays con una comprobación de índices adicional, compara la información y los índices mediante funciones de retrollamada por separado
array_uintersect(array $array, array ...$arrays, callable $value_compare_func): array	Computa una intersección de arrays, compara la información mediante una función de llamada de retorno
array_unique(array $array, int $flags = SORT_STRING): array	Elimina valores duplicados de un array
array_unshift(array $array, mixed ...$values): int	Añadir al inicio de un array uno a más elementos
array_values(array $array): array	Devuelve todos los valores de un array
array_walk_recursive(array|object $array, callable $callback, mixed $arg = null): true	Aplicar una función de usuario recursivamente a cada miembro de un array
array_walk(array|object $array, callable $callback, mixed $arg = null): true	Aplicar una función proporcionada por el usuario a cada miembro de un array
array(mixed ...$values): array	Crea un array
arsort(array $array, int $flags = SORT_REGULAR): true	Ordena un array en orden inverso y mantiene la asociación de índices
asort(array $array, int $flags = SORT_REGULAR): true	Ordena un array y mantiene la asociación de índices
compact(array|string $var_name, array|string ...$var_names): array	Crear un array que contiene variables y sus valores
count(Countable|array $value, int $mode = COUNT_NORMAL): int	Cuenta todos los elementos de un array o algo de un objeto
current(array|object $array): mixed	Devuelve el elemento actual en un array
each(array|object $array): array	Devolver el par clave/valor actual de un array y avanzar el cursor del array
end(array|object $array): mixed	Establece el puntero interno de un array a su último elemento
extract(array $array, int $flags = EXTR_OVERWRITE, string $prefix = ""): int	Importar variables a la tabla de símbolos actual desde un array
in_array(mixed $needle, array $haystack, bool $strict = false): bool	Comprueba si un valor existe en un array
key_exists()	Alias of array_key_exists
key(array|object $array): int|string|null	Obtiene una clave de un array
krsort(array $array, int $flags = SORT_REGULAR): true	Ordena un array por clave en orden inverso
ksort(array $array, int $flags = SORT_REGULAR): true	Ordena un array por clave
list(mixed $var, mixed ...$vars = ?): array	Asignar variables como si fueran un array
natcasesort(array $array): true	Ordenar un array usando un algoritmo de "orden natural" insensible a mayúsculas-minúsculas
natsort(array $array): true	Ordena un array usando un algoritmo de "orden natural"
next(array|object $array): mixed	Avanza el puntero interno de un array
pos()	Alias of current
prev(array|object $array): mixed	Rebobina el puntero interno del array
range(string|int|float $start, string|int|float $end, int|float $step = 1): array	Crear un array que contiene un rango de elementos
reset(array|object $array): mixed	Establece el puntero interno de un array a su primer elemento
rsort(array $array, int $flags = SORT_REGULAR): true	Ordena un array en orden inverso
shuffle(array $array): true	Mezcla un array
sizeof()	Alias of count
sort(array $array, int $flags = SORT_REGULAR): true	Ordena un array
uasort(array $array, callable $callback): true	Ordena un array con una función de comparación definida por el usuario y mantiene la asociación de índices
uksort(array $array, callable $callback): true	Ordena un array según sus claves usando una función de comparación definida por el usuario
usort(array $array, callable $callback): true	Ordena un array según sus valores usando una función de comparación definida por el usuario
__autoload(string $class): void	Intenta cargar una clase sin definir
class_alias(string $class, string $alias, bool $autoload = true): bool	Crea un alias para una clase
class_exists(string $class, bool $autoload = true): bool	Verifica si la clase ha sido definida
enum_exists(string $enum, bool $autoload = true): bool	Checks if the enum has been defined
get_called_class(): string	El nombre de la clase enlazada estáticamente en tiempo de ejecución ("late static binding")
get_class_methods(object|string $object_or_class): array	Obtiene los nombres de los métodos de una clase
get_class_vars(string $class): array	Obtener las propiedades predeterminadas de una clase
get_class(object $object = ?): string	Devuelve el nombre de la clase de un objeto
get_declared_classes(): array	Devuelve una matriz con los nombres de las clases definidas
get_declared_interfaces(): array	Devuelve un array con todas las interfaces declaradas
get_declared_traits(): array	Devuelve un array de todos los traits declarados
get_mangled_object_vars(object $object): array	Returns an array of mangled object properties
get_object_vars(object $object): array	Obtiene las propiedades del objeto dado
get_parent_class(object|string $object_or_class = ?): string|false	Recupera el nombre de la clase padre de un objeto o clase
interface_exists(string $interface, bool $autoload = true): bool	Comprueba si una interfaz ha sido definida
is_a(mixed $object_or_class, string $class, bool $allow_string = false): bool	Comprueba si un objeto es de una clase o tiene esta clase como una de sus madres
is_subclass_of(mixed $object_or_class, string $class, bool $allow_string = true): bool	Comprueba si el objeto tiene esta clase como uno de sus padres o si la implementa
method_exists(object|string $object_or_class, string $method): bool	Comprueba si existe un método de una clase
property_exists(object|string $object_or_class, string $property): bool	Comprueba si el objeto o la clase tienen una propiedad
trait_exists(string $trait, bool $autoload = true): bool	Comprobar si el trait existe
DateInterval(string $duration)	(new) Crea un nuevo objeto DateInterval
DateInterval::createFromDateString(string $datetime): DateInterval	Establece un objeto DateInterval desde las partes relativas de una cadena
date_interval_create_from_date_string(string $datetime): DateInterval|false	Establece un objeto DateInterval desde las partes relativas de una cadena
>format(string $format): string	(DateInterval) Formatea el intervalo
DatePeriod(DateTimeInterface $start, DateInterval $interval, int $recurrences, int $options = ?)	(new) Crea un nuevo objeto DatePeriod
DatePeriod(DateTimeInterface $start, DateInterval $interval, DateTimeInterface $end, int $options = ?)	(new) Crea un nuevo objeto DatePeriod
DatePeriod::createFromISO8601String(string $specification, int $options = ?): static	Creates a new DatePeriod object from an ISO8601 string
>getDateInterval(): DateInterval	(DatePeriod) Obtener el intervalo
>getEndDate(): DateTimeInterface|null	(DatePeriod) Obtener la fecha final
>getRecurrences(): int|null	(DatePeriod) Gets the number of recurrences
>getStartDate(): DateTimeInterface	(DatePeriod) Obtener la fecha inicial
>add(DateInterval $interval): DateTime	(DateTime) Modifica un objeto DateTime, añadiendo una cantidad de días, meses, años, horas, minutos y segundos
date_add(DateTime $object, DateInterval $interval): DateTime	Modifica un objeto DateTime, añadiendo una cantidad de días, meses, años, horas, minutos y segundos
DateTime(string $datetime = "now", DateTimeZone|null $timezone = null)	(new) Devuelve un nuevo objeto DateTime
DateTime::createFromFormat(string $format, string $datetime, DateTimeZone|null $timezone = null): DateTime|false	Analiza una cadena con un instante según un formato especificado
date_create_from_format(string $format, string $datetime, DateTimeZone|null $timezone = null): DateTime|false	Analiza una cadena con un instante según un formato especificado
DateTime::createFromImmutable(DateTimeImmutable $object): static	Devuelve una nueva instancia de DateTime encapsulando el objeto DateTimeImmutable dado
DateTime::createFromInterface(DateTimeInterface $object): DateTime	RDevuelve un nuevo objeto DateTime que encapsula el objeto DateTimeInterface dado
>getLastErrors()	(DateTime) Alias of DateTimeImmutable::getLastErrors
>modify(string $modifier): DateTime	(DateTime) Altera la marca temporal
date_modify(DateTime $object, string $modifier): DateTime|false	Altera la marca temporal
DateTime::__set_state(array $array): DateTime	El gestor __set_state
>setDate(int $year, int $month, int $day): DateTime	(DateTime) Establece la fecha
date_date_set(DateTime $object, int $year, int $month, int $day): DateTime	Establece la fecha
>setISODate(int $year, int $week, int $dayOfWeek = 1): DateTime	(DateTime) Establece la fecha ISO
date_isodate_set(DateTime $object, int $year, int $week, int $dayOfWeek = 1): DateTime	Establece la fecha ISO
>setTime(int $hour, int $minute, int $second = ?, int $microsecond = ?): DateTime	(DateTime) Establece la hora
date_time_set(DateTime $object, int $hour, int $minute, int $second = ?, int $microsecond = ?): DateTime	Establece la hora
>setTimestamp(int $timestamp): DateTime	(DateTime) Establece la fecha y la hora basándose en una marca temporal de Unix
date_timestamp_set(DateTime $object, int $timestamp): DateTime	Establece la fecha y la hora basándose en una marca temporal de Unix
>setTimezone(DateTimeZone $timezone): DateTime	(DateTime) Establece la zona horaria para el objeto DateTime
date_timezone_set(DateTime $object, DateTimeZone $timezone): DateTime	Establece la zona horaria para el objeto DateTime
>sub(DateInterval $interval): DateTime	(DateTime) Sustrae una cantidad de días, meses, años, horas, minutos y segundos de un objeto DateTime
date_sub(DateTime $object, DateInterval $interval): DateTime	Sustrae una cantidad de días, meses, años, horas, minutos y segundos de un objeto DateTime
>add(DateInterval $interval): DateTimeImmutable	(DateTimeImmutable) Devuelve un nuevo objeto, con una cantidad añadida de días, meses, años, horas, minutos y segundos
date_create_immutable(string $datetime = "now", DateTimeZone|null $timezone = null): DateTimeImmutable|false	Devuelve un nuevo objeto DateTimeImmutable
DateTimeImmutable::createFromFormat(string $format, string $datetime, DateTimeZone|null $timezone = null): DateTimeImmutable|false	Analiza un string de tiempo según el formato especificado
date_create_immutable_from_format(string $format, string $datetime, DateTimeZone|null $timezone = null): DateTimeImmutable|false	Analiza un string de tiempo según el formato especificado
DateTimeImmutable::createFromInterface(DateTimeInterface $object): DateTimeImmutable	Devuelve un nuevo objeto DateTimeImmutable que encapsula el objeto DateTimeInterface dado
DateTimeImmutable::createFromMutable(DateTime $object): static	Devuelve un nuevo objeto DateTimeImmutable que encapsula el objeto DateTime dado
DateTimeImmutable::getLastErrors(): array|false	Devuelve las advertencias y errores
>modify(string $modifier): DateTimeImmutable	(DateTimeImmutable) Crea un nuevo objeto con la marca de tiempo modificada
DateTimeImmutable::__set_state(array $array): DateTimeImmutable	El gestor __set_state
>setDate(int $year, int $month, int $day): DateTimeImmutable	(DateTimeImmutable) Establece la fecha
>setISODate(int $year, int $week, int $dayOfWeek = 1): DateTimeImmutable	(DateTimeImmutable) Establece la fecha ISO
>setTime(int $hour, int $minute, int $second = ?, int $microsecond = ?): DateTimeImmutable	(DateTimeImmutable) Establece la hora
>setTimestamp(int $timestamp): DateTimeImmutable	(DateTimeImmutable) Establece la fecha y hora basadas en una marca de tiempo Unix (Unix timestamp)
>setTimezone(DateTimeZone $timezone): DateTimeImmutable	(DateTimeImmutable) Establece la zona horaria
>sub(DateInterval $interval): DateTimeImmutable	(DateTimeImmutable) Sustrae una cantidad de días, meses, años, horas, minutos y segundos
>diff(DateTimeInterface $targetObject, bool $absolute = false): DateInterval	(DateTimeInterface) Devuelve la diferencia entre dos objetos DateTime
>diff(DateTimeInterface $targetObject, bool $absolute = false): DateInterval	(DateTimeImmutable) Devuelve la diferencia entre dos objetos DateTime
>diff(DateTimeInterface $targetObject, bool $absolute = false): DateInterval	(DateTime) Devuelve la diferencia entre dos objetos DateTime
date_diff(DateTimeInterface $baseObject, DateTimeInterface $targetObject, bool $absolute = false): DateInterval	Devuelve la diferencia entre dos objetos DateTime
>format(string $format): string	(DateTimeInterface) Devuelve la fecha formateada según el formato dado
>format(string $format): string	(DateTimeImmutable) Devuelve la fecha formateada según el formato dado
>format(string $format): string	(DateTime) Devuelve la fecha formateada según el formato dado
date_format(DateTimeInterface $object, string $format): string	Devuelve la fecha formateada según el formato dado
>getOffset(): int	(DateTimeInterface) Devuelve el índice de la zona horaria
>getOffset(): int	(DateTimeImmutable) Devuelve el índice de la zona horaria
>getOffset(): int	(DateTime) Devuelve el índice de la zona horaria
date_offset_get(DateTimeInterface $object): int	Devuelve el índice de la zona horaria
>getTimestamp(): int	(DateTimeInterface) Obtiene la marca de tiempo Unix
>getTimestamp(): int	(DateTimeImmutable) Obtiene la marca de tiempo Unix
>getTimestamp(): int	(DateTime) Obtiene la marca de tiempo Unix
date_timestamp_get(DateTimeInterface $object): int	Obtiene la marca de tiempo Unix
>getTimezone(): DateTimeZone|false	(DateTimeInterface) Develve la zona horaria relativa al objeto DateTime dado
>getTimezone(): DateTimeZone|false	(DateTimeImmutable) Develve la zona horaria relativa al objeto DateTime dado
>getTimezone(): DateTimeZone|false	(DateTime) Develve la zona horaria relativa al objeto DateTime dado
date_timezone_get(DateTimeInterface $object): DateTimeZone|false	Develve la zona horaria relativa al objeto DateTime dado
>__wakeup(): void	(DateTime) El gestor __wakeup
>__wakeup(): void	(DateTimeImmutable) El gestor __wakeup
>__wakeup(): void	(DateTimeInterface) El gestor __wakeup
timezone_open(string $timezone): DateTimeZone|false	Crea un nuevo objeto DateTimeZone
>getLocation(): array|false	(DateTimeZone) Devuelve la información de la ubicación para una zona horaria
timezone_location_get(DateTimeZone $object): array|false	Devuelve la información de la ubicación para una zona horaria
>getName(): string	(DateTimeZone) Devuelve el nombre de la zona horaria
timezone_name_get(DateTimeZone $object): string	Devuelve el nombre de la zona horaria
>getOffset(DateTimeInterface $datetime): int	(DateTimeZone) Devuelve el índice de la zona horaria de GMT
timezone_offset_get(DateTimeZone $object, DateTimeInterface $datetime): int	Devuelve el índice de la zona horaria de GMT
>getTransitions(int $timestampBegin = PHP_INT_MIN, int $timestampEnd = PHP_INT_MAX): array|false	(DateTimeZone) Devuelve todas las transiciones para una zona horaria
timezone_transitions_get(DateTimeZone $object, int $timestampBegin = PHP_INT_MIN, int $timestampEnd = PHP_INT_MAX): array|false	Devuelve todas las transiciones para una zona horaria
DateTimeZone::listAbbreviations(): array	Devuelve una matriz asociativa que contiene el horario de verano (dst), el índice y el nombre de la zona horaria
timezone_abbreviations_list(): array	Devuelve una matriz asociativa que contiene el horario de verano (dst), el índice y el nombre de la zona horaria
DateTimeZone::listIdentifiers(int $timezoneGroup = DateTimeZone::ALL, string|null $countryCode = null): array	Devuelve un array indexado numéricamente que contiene todos los identificadores de zonas horarias definidos
timezone_identifiers_list(int $timezoneGroup = DateTimeZone::ALL, string|null $countryCode = null): array	Devuelve un array indexado numéricamente que contiene todos los identificadores de zonas horarias definidos
checkdate(int $month, int $day, int $year): bool	Valida una fecha gregoriana
date_add()	Alias of DateTime::add
date_create_from_format()	Alias of DateTime::createFromFormat
date_create_immutable_from_format()	Alias of DateTimeImmutable::createFromFormat
date_create_immutable(string $datetime = "now", DateTimeZone|null $timezone = null): DateTimeImmutable|false	Alias DateTimeImmutable::__construct
date_create(string $datetime = "now", DateTimeZone|null $timezone = null): DateTime|false	Alias DateTime::__construct
date_date_set()	Alias of DateTime::setDate
date_default_timezone_get(): string	Obtiene la zona horaria predeterminada usada por todas las funciones de fecha/hora en un script
date_default_timezone_set(string $timezoneId): bool	Establece la zona horaria predeterminada usada por todas las funciones de fecha/hora en un script
date_diff()	Alias of DateTime::diff
date_format()	Alias of DateTime::format
date_get_last_errors()	Alias of DateTimeImmutable::getLastErrors
date_interval_create_from_date_string()	Alias of DateInterval::createFromDateString
date_interval_format()	Alias of DateInterval::format
date_isodate_set()	Alias of DateTime::setISODate
date_modify()	Alias of DateTime::modify
date_offset_get()	Alias of DateTime::getOffset
date_parse_from_format(string $format, string $datetime): array	Obtiene información de una fecha dada formateada de acuerdo al formato especificado
date_parse(string $datetime): array	Devuelve un array asociativo con información detallada acerca de una fecha dada
date_sub()	Alias of DateTime::sub
date_sun_info(int $timestamp, float $latitude, float $longitude): array	Devuelve una matriz con información sobre la puesta/salida del sol y el comienzo/final del crepúsculo
date_sunrise(int $timestamp, int $returnFormat = SUNFUNCS_RET_STRING, float|null $latitude = null, float|null $longitude = null, float|null $zenith = null, float|null $utcOffset = null): string|int|float|false	Devuelve la hora de la salida del sol de un día y ubicación dados
date_sunset(int $timestamp, int $returnFormat = SUNFUNCS_RET_STRING, float|null $latitude = null, float|null $longitude = null, float|null $zenith = null, float|null $utcOffset = null): string|int|float|false	Devuelve la hora de la puesta de sol de un día y ubicación dados
date_time_set()	Alias of DateTime::setTime
date_timestamp_get()	Alias of DateTime::getTimestamp
date_timestamp_set()	Alias of DateTime::setTimestamp
date_timezone_get()	Alias of DateTime::getTimezone
date_timezone_set()	Alias of DateTime::setTimezone
date(string $format, int|null $timestamp = null): string	Da formato a una marca de tiempo de Unix (Unix timestamp)
getdate(int|null $timestamp = null): array	Obtener información de la fecha/hora
gettimeofday(bool $as_float = false): array|float	Obtener la hora actual
gmdate(string $format, int|null $timestamp = null): string	Formatea una fecha/hora GMT/UTC
gmmktime(int $hour, int|null $minute = null, int|null $second = null, int|null $month = null, int|null $day = null, int|null $year = null): int|false	Obtener la marca temporal de Unix para una fecha GMT
gmstrftime(string $format, int|null $timestamp = null): string|false	Formatear una fecha/hora GMT/UTC según la configuración local
idate(string $format, int|null $timestamp = null): int|false	Formatea una fecha/hora local como un entero
localtime(int|null $timestamp = null, bool $associative = false): array	Obtiene fecha y hora local
microtime(bool $as_float = false): string|float	Devuelve la fecha Unix actual con microsegundos
mktime(int $hour, int|null $minute = null, int|null $second = null, int|null $month = null, int|null $day = null, int|null $year = null): int|false	Obtener la marca de tiempo Unix de una fecha
strftime(string $format, int|null $timestamp = null): string|false	Formatea una fecha/hora local según una configuración local
strptime(string $timestamp, string $format): array|false	Analiza una fecha/hora generada con strftime
strtotime(string $datetime, int|null $baseTimestamp = null): int|false	Convierte una descripción de fecha/hora textual en Inglés a una fecha Unix
time(): int	Devuelve la fecha Unix actual
timezone_abbreviations_list()	Alias of DateTimeZone::listAbbreviations
timezone_identifiers_list()	Alias of DateTimeZone::listIdentifiers
timezone_location_get()	Alias of DateTimeZone::getLocation
timezone_name_from_abbr(string $abbr, int $utcOffset = -1, int $isDST = -1): string|false	Devuelve el nombre de la zona horaria desde su abreviatura
timezone_name_get()	Alias of DateTimeZone::getName
timezone_offset_get()	Alias of DateTimeZone::getOffset
timezone_open()	Alias of DateTimeZone::__construct
timezone_transitions_get()	Alias of DateTimeZone::getTransitions
timezone_version_get(): string	Obtiene la versión de la base de datos timezonedb
DateError()	(new) Thrown when the timezone database is not found, or contains invalid data
DateException()	(new) Parent class of Date/Time exceptions, for issues that come to light due to user input, or free form text arguments that need to be parsed
DateInvalidOperationException()	(new) Thrown by DateTimeImmutable::sub and DateTime::sub when an unsupported operation is attempted
DateInvalidTimeZoneException()	(new) Thrown when an incorrect value is passed to DateTimeZone::__construct
DateMalformedIntervalStringException()	(new) Thrown when an invalid $duration argument is passed to DateInterval::__construct
DateMalformedPeriodStringException()	(new) Thrown when an invalid $isostr argument is passed to DatePeriod::__construct
DateMalformedStringException()	(new) Thrown when an invalid Date/Time string is detected
DateObjectError()	(new) Thrown when one of the Date/Time classes has not been correctly initialised
DateRangeError()	(new) Thrown by DateTime::getTimestamp, DateTimeImmutable::getTimestamp, and date_timestamp_get, on 32-bit platforms if the date object represents a date outside of the 32-bit signed range
DateTimeImmutable()	(new) Representación de fecha y hora
DateTimeInterface()	(new) DateTimeInterface fue creada tanto como parametro de retorno, como para las declaraciones de tipo de propiedad puedan aceptar tanto DateTimeImmutable o DateTime como valor
DateTimeZone()	(new) Representación de la zona horaria
>close(): void	(Directory) Cierra un gestor de directorio
>read(): string|false	(Directory) Lee una entrada desde el controlador de directorio
>rewind(): void	(Directory) Rebobina el manejador de directorio
chdir(string $directory): bool	Cambia de directorio
chroot(string $directory): bool	Cambia el directorio raíz
closedir(resource|null $dir_handle = null): void	Cierra un gestor de directorio
dir(string $directory, resource|null $context = null): Directory|false	Devuelve una instancia de la clase Directory
getcwd(): string|false	Obtiene el directorio actual en donde se esta trabajando
opendir(string $directory, resource|null $context = null): resource|false	Abre un gestor de directorio
readdir(resource|null $dir_handle = null): string|false	Lee una entrada desde un gestor de directorio
rewinddir(resource|null $dir_handle = null): void	Regresar el gestor de directorio
scandir(string $directory, int $sorting_order = SCANDIR_SORT_ASCENDING, resource|null $context = null): array|false	Enumera los ficheros y directorios ubicados en la ruta especificada
Directory()	(new) Las instancias de la clase Directory se crean llamando a la función dir, sin utilizar el operador new
debug_backtrace(int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT, int $limit = ?): array	Genera un rastreo
debug_print_backtrace(int $options = ?, int $limit = ?): void	Muestra un rastreo
error_clear_last(): void	Limpiar el error más reciente
error_get_last(): array|null	Obtener el último error que ocurrió
error_log(string $message, int $message_type = ?, string|null $destination = null, string|null $additional_headers = null): bool	Enviar un mensaje de error a las rutinas de manejo de errores definidas
error_reporting(int|null $error_level = null): int	Establece cuáles errores de PHP son notificados
restore_error_handler(): true	Recupera la función de gestión de errores previa
restore_exception_handler(): true	Restaura la función de gestión de excepciones previamente definida
set_error_handler(callable|null $callback, int $error_levels = E_ALL): callable|null	Establecer una función de gestión de errores definida por el usuario
set_exception_handler(callable|null $callback): callable|null	Establece una función de gestión de excepciones definida por el usuario
trigger_error(string $message, int $error_level = E_USER_NOTICE): true	Generar un mensaje de error/advertencia/aviso de nivel de usuario
user_error()	Alias of trigger_error
escapeshellarg(string $arg): string	Escapar una cadena a ser usada como argumento del intérprete de comandos
escapeshellcmd(string $command): string	Escapar meta-caracteres del intérprete de comandos
exec(string $command, array $output = null, int $result_code = null): string|false	Ejecutar un programa externo
passthru(string $command, int $result_code = null): false|null	Ejecuta un programa externo y muestra la salida en bruto
proc_close(resource $process): int	Cierra un proceso abierto mediante proc_open y devuelve el códido de salida de tal proceso
proc_get_status(resource $process): array	Obtiene información sobre un proceso abierto por proc_open
proc_nice(int $priority): bool	Modificar la prioridad del proceso actual
proc_open(array|string $command, array $descriptor_spec, array $pipes, string|null $cwd = null, array|null $env_vars = null, array|null $options = null): resource|false	Ejecuta un comando y abre un puntero de fichero para entrada/salida
proc_terminate(resource $process, int $signal = 15): bool	Mata un proceso abierto mediante proc_open
shell_exec(string $command): string|false|null	Ejecutar un comando mediante el intérprete de comandos y devolver la salida completa como una cadena
system(string $command, int $result_code = null): string|false	Ejecutar un programa externo y mostrar su salida
basename(string $path, string $suffix = ""): string	Devuelve el último componente de nombre de una ruta
chgrp(string $filename, string|int $group): bool	Cambia el grupo del archivo
chmod(string $filename, int $permissions): bool	Cambia el modo de un fichero
chown(string $filename, string|int $user): bool	Cambia el propietario del fichero
clearstatcache(bool $clear_realpath_cache = false, string $filename = ""): void	Limpia la caché de estado de un archivo
copy(string $from, string $to, resource|null $context = null): bool	Copia un fichero
dirname(string $path, int $levels = 1): string	Devuelve la ruta de un directorio padre
disk_free_space(string $directory): float|false	Devuelve el espacio disponible de un sistema de archivos o partición de disco
disk_total_space(string $directory): float|false	Devuelve el tamaño total de un sistema de archivos o partición de disco
diskfreespace()	Alias of disk_free_space
fclose(resource $stream): bool	Cierra un puntero a un archivo abierto
fdatasync(resource $stream): bool	Synchronizes data (but not meta-data) to the file
feof(resource $stream): bool	Comprueba si el puntero a un archivo está al final del archivo
fflush(resource $stream): bool	Vuelca la salida a un archivo
fgetc(resource $stream): string|false	Obtiene un carácter de un puntero a un archivo
fgetcsv(resource $stream, int|null $length = null, string $separator = ",", string $enclosure = "\"", string $escape = "\\"): array|false	Obtiene una línea de un puntero a un fichero y la analiza en busca de campos CSV
fgets(resource $stream, int|null $length = null): string|false	Obtiene una línea desde el puntero a un fichero
fgetss(resource $handle, int $length = ?, string $allowable_tags = ?): string	Obtiene un línea desde un puntero a un archivo y elimina las etiquetas HTML
file_exists(string $filename): bool	Comprueba si existe un fichero o directorio
file_get_contents(string $filename, bool $use_include_path = false, resource|null $context = null, int $offset = ?, int|null $length = null): string|false	Transmite un fichero completo a una cadena
file_put_contents(string $filename, mixed $data, int $flags = ?, resource|null $context = null): int|false	Escribir datos en un fichero
file(string $filename, int $flags = ?, resource|null $context = null): array|false	Transfiere un fichero completo a un array
fileatime(string $filename): int|false	Obtiene el momento del último acceso a un archivo
filectime(string $filename): int|false	Obtiene el momento del último cambio del i-nodo de un archivo
filegroup(string $filename): int|false	Obtiene el grupo de un archivo
fileinode(string $filename): int|false	Obtiene el i-nodo del archivo
filemtime(string $filename): int|false	Obtiene el momento de la última modificación de un archivo
fileowner(string $filename): int|false	Obtiene el propietario de un archivo
fileperms(string $filename): int|false	Obtiene los permisos de un fichero
filesize(string $filename): int|false	Obtiene el tamaño de un fichero
filetype(string $filename): string|false	Obtiene el tipo de fichero
flock(resource $stream, int $operation, int $would_block = null): bool	Bloqueo de ficheros recomendado y portable
fnmatch(string $pattern, string $filename, int $flags = ?): bool	Compara un nombre de fichero con un patrón
fopen(string $filename, string $mode, bool $use_include_path = false, resource|null $context = null): resource|false	Abre un fichero o un URL
fpassthru(resource $stream): int	Escribe toda la información restante de un puntero a un archivo
fputcsv(resource $stream, array $fields, string $separator = ",", string $enclosure = "\"", string $escape = "\\", string $eol = "\n"): int|false	Dar formato CSV a una línea y escribirla en un puntero a un fichero
fputs()	Alias of fwrite
fread(resource $stream, int $length): string|false	Lectura de un fichero en modo binario seguro
fscanf(resource $stream, string $format, mixed ...$vars): array|int|false|null	Analiza la entrada desde un archivo de acuerdo a un formato
fseek(resource $stream, int $offset, int $whence = SEEK_SET): int	Busca sobre un puntero a un fichero
fstat(resource $stream): array|false	Obtiene información acerca de un archivo usando un puntero al archivo abierto
fsync(resource $stream): bool	Synchronizes changes to the file (including meta-data)
ftell(resource $stream): int|false	Devuelve la posición de lectura/escritura actual del puntero a un fichero
ftruncate(resource $stream, int $size): bool	Trunca un archivo a una longitud dada
fwrite(resource $stream, string $data, int|null $length = null): int|false	Binary-safe file write
glob(string $pattern, int $flags = ?): array|false	Buscar coincidencias de nombres de ruta con un patrón
is_dir(string $filename): bool	Indica si el nombre de archivo es un directorio
is_executable(string $filename): bool	Indica si el nombre de archivo es ejecutable
is_file(string $filename): bool	Indica si el nombre de fichero es un fichero normal
is_link(string $filename): bool	Indica si el nombre de archivo es un enlace simbólico
is_readable(string $filename): bool	Indica si un fichero existe y es legible
is_uploaded_file(string $filename): bool	Indica si el archivo fue subido mediante HTTP POST
is_writable(string $filename): bool	Indica si un archivo existe y es escribible
is_writeable()	Alias of is_writable
lchgrp(string $filename, string|int $group): bool	Cambia el grupo de un enlace simbólico
lchown(string $filename, string|int $user): bool	Cambia el propietario de un enlace simbólico
link(string $target, string $link): bool	Crea un enlace duro
linkinfo(string $path): int|false	Obtiene información acerca de un enlace
lstat(string $filename): array|false	Da información acerca de un archivo o enlace simbólico
mkdir(string $directory, int $permissions = 0777, bool $recursive = false, resource|null $context = null): bool	Crea un directorio
move_uploaded_file(string $from, string $to): bool	Mueve un archivo subido a una nueva ubicación
parse_ini_file(string $filename, bool $process_sections = false, int $scanner_mode = INI_SCANNER_NORMAL): array|false	Analiza un fichero de configuración
parse_ini_string(string $ini_string, bool $process_sections = false, int $scanner_mode = INI_SCANNER_NORMAL): array|false	Analiza una cadena de configuración
pathinfo(string $path, int $flags = PATHINFO_ALL): array|string	Devuelve información acerca de la ruta de un fichero
pclose(resource $handle): int	Cierra un proceso de un puntero a un fichero
popen(string $command, string $mode): resource|false	Abre un proceso de un puntero a un fichero
readfile(string $filename, bool $use_include_path = false, resource|null $context = null): int|false	Realizar la salida de un fichero
readlink(string $path): string|false	Devuelve el objetivo de un enlace simbólico
realpath_cache_get(): array	Obtiene las entradas de la caché de la ruta real
realpath_cache_size(): int	Obtiene el tamaño de la caché de la ruta real
realpath(string $path): string|false	Devuelve el nombre de la ruta absoluta canonizado
rename(string $from, string $to, resource|null $context = null): bool	Renombra un fichero o directorio
rewind(resource $stream): bool	Rebobina la posición de un puntero a un archivo
rmdir(string $directory, resource|null $context = null): bool	Elimina un directorio
set_file_buffer()	Alias of stream_set_write_buffer
stat(string $filename): array|false	Da información acerca de un fichero
symlink(string $target, string $link): bool	Crea un enlace simbólico
tempnam(string $directory, string $prefix): string|false	Crea un fichero con un nombre de fichero único
tmpfile(): resource|false	Crea un archivo temporal
touch(string $filename, int|null $mtime = null, int|null $atime = null): bool	Establece el momento de acceso y modificación de un archivo
umask(int|null $mask = null): int	Cambia la máscara de usuario actual
unlink(string $filename, resource|null $context = null): bool	Borra un fichero
fastcgi_finish_request(): bool	Descarga todos los datos de la respuesta al cliente
fpm_get_status(): array|false	Devuelve el estado actual del pool de FPM
call_user_func_array(callable $callback, array $args): mixed	Llamar a una llamada de retorno con un array de parámetros
call_user_func(callable $callback, mixed ...$args): mixed	Llamar a una llamada de retorno dada por el primer parámetro
create_function(string $args, string $code): string	Crear una función anónima (estilo lambda)
forward_static_call_array(callable $callback, array $args): mixed	Llamar a un método estático y pasar los argumentos como matriz
forward_static_call(callable $callback, mixed ...$args): mixed	Llamar a un método estático
func_get_arg(int $position): mixed	Devuelve un elemento de una lista de argumentos
func_get_args(): array	Devuelve un array que se compone de una lista de argumentos de función
func_num_args(): int	Devuelve el número de argumentos pasados a la función
function_exists(string $function): bool	Devuelve true si la función dada ha sido definida
get_defined_functions(bool $exclude_disabled = true): array	Devuelve un array de todas las funciones definidas
register_shutdown_function(callable $callback, mixed ...$args): void	Registrar una función para que sea ejecutada al cierre
register_tick_function(callable $callback, mixed ...$args): bool	Registrar una función para que sea ejecutada en cada tick
unregister_tick_function(callable $callback): void	Dejar de registrar una función para su ejecución en cada tick
hash_algos(): array	Devuelve una lista con los algoritmos de cifrado soportados
hash_copy(HashContext $context): HashContext	Copia un recurso de contexto de cifrado
hash_equals(string $known_string, string $user_string): bool	Comparación de strings segura contra ataques de temporización
hash_file(string $algo, string $filename, bool $binary = false, array $options = []): string|false	Generar un valor hash usando el contenido de un fichero dado
hash_final(HashContext $context, bool $binary = false): string	Finaliza un contexto incremental y devuelve el resultado cifrado
hash_hkdf(string $algo, string $key, int $length = ?, string $info = "", string $salt = ""): string	Generate a HKDF key derivation of a supplied key input
hash_hmac_algos(): array	Return a list of registered hashing algorithms suitable for hash_hmac
hash_hmac_file(string $algo, string $filename, string $key, bool $binary = false): string|false	Genera un valor cifrado mediante una clave especificada usando el método HMAC y el contenido de un fichero dado
hash_hmac(string $algo, string $data, string $key, bool $binary = false): string	Genera un valor cifrado mediante una clave especificada usando el método HMAC
hash_init(string $algo, int $flags = ?, string $key = "", array $options = []): HashContext	Iniciar un contexto de hashing incremental
hash_pbkdf2(string $algo, string $password, string $salt, int $iterations, int $length = ?, bool $binary = false, array $options = []): string	Genera una derivación de clave PBKDF2 de una contraseña proporcionada
hash_update_file(HashContext $context, string $filename, resource|null $stream_context = null): bool	Inyecta datos en un contexto de cifrado activo desde un fichero
hash_update_stream(HashContext $context, resource $stream, int $length = -1): int	Pega datos en un contexto de cifrado activo desde un flujo de datos abierto
hash_update(HashContext $context, string $data): true	Pega más datos en un contexto incremental de cifrado activo
hash(string $algo, string $data, bool $binary = false, array $options = []): string	Generar un valor hash (resumen de mensaje)
HashContext()	(new) Private constructor to disallow direct instantiation
>__serialize(): array	(HashContext) Serializes the HashContext object
>__unserialize(array $data): void	(HashContext) Deserializes the $data parameter into a HashContext object
assert_options(int $option, mixed $value = ?): mixed	Establecer/obtener valores de las directivas relacionadas con las aserciones
assert(mixed $assertion, Throwable|string|null $description = null): bool	Verifica una aserción
cli_get_process_title(): string|null	Returns the current process title
cli_set_process_title(string $title): bool	Sets the process title
dl(string $extension_filename): bool	Carga una extensión de PHP durante la ejecución
extension_loaded(string $extension): bool	Encontrar si una extensión está cargada
gc_collect_cycles(): int	Fuerza la recolección de los ciclos de basura existentes
gc_disable(): void	Desactiva el recolector de referencia circular
gc_enable(): void	Activa el colector de referencia circular
gc_enabled(): bool	Devuelve el estado del colector de referencia circular
gc_mem_caches(): int	Reclaims memory used by the Zend Engine memory manager
gc_status(): array	Gets information about the garbage collector
get_cfg_var(string $option): string|array|false	Obtiene el valor de una opción de configuración de PHP
get_current_user(): string	Obtiene el nombre del propietario del script PHP actual
get_defined_constants(bool $categorize = false): array	Devuelve un array asociativo con los nombres de todas las constantes y sus valores
get_extension_funcs(string $extension): array|false	Devuelve una matriz con los nombres de funciones de un módulo
get_include_path(): string|false	Obtiene la opción de configuración include_path actual
get_included_files(): array	Devuelve un array con los nombres de los archivos incluidos o requeridos
get_loaded_extensions(bool $zend_extensions = false): array	Devuelve un array con los nombres de todos los módulos compilados y cargados
get_magic_quotes_gpc(): false	Gets the current configuration setting of magic_quotes_gpc
get_magic_quotes_runtime(): false	Gets the current active configuration setting of magic_quotes_runtime
get_required_files()	Alias of get_included_files
get_resources(string|null $type = null): array	Returns active resources
getenv(string|null $name = null, bool $local_only = false): string|array|false	Obtiene el valor de una variable de entorno
getlastmod(): int|false	Obtiene la hora de la última modificación de la página
getmygid(): int|false	Obtener el GID del dueño del script PHP
getmyinode(): int|false	Obtiene el inode del script actual
getmypid(): int|false	Obtiene el ID del proceso PHP
getmyuid(): int|false	Obtiene el UID del dueño del script PHP
getopt(string $short_options, array $long_options = [], int $rest_index = null): array|false	Obtiene las opciones de la lista de argumentos de la línea de comandos
getrusage(int $mode = ?): array|false	Obtiene el uso de los recursos actuales
ini_alter()	Alias of ini_set
ini_get_all(string|null $extension = null, bool $details = true): array|false	Obtiene todas las opciones de configuración
ini_get(string $option): string|false	Devuelve el valor de una directiva de configuración
ini_parse_quantity(string $shorthand): int	Get interpreted size from ini shorthand syntax
ini_restore(string $option): void	Restablece el valor de una opción de configuración
ini_set(string $option, string|int|float|bool|null $value): string|false	Establece el valor de una directiva de configuración
memory_get_peak_usage(bool $real_usage = false): int	Devuelve el máximo de memoria asignada por PHP
memory_get_usage(bool $real_usage = false): int	Devuelve la cantidad de memoria asignada a PHP
memory_reset_peak_usage(): void	Reset the peak memory usage
php_ini_loaded_file(): string|false	Recupera la ruta de acceso al archivo php.ini cargado
php_ini_scanned_files(): string|false	Devuelve una lista de ficheros .ini procesados del directorio adicional ini
php_sapi_name(): string|false	Devuelve el tipo de interfaz que hay entre PHP y el servidor
php_uname(string $mode = "a"): string	Devuelve información sobre el sistema operativo en que se está ejecutando PHP
phpcredits(int $flags = CREDITS_ALL): true	Imprime los créditos de PHP
phpinfo(int $flags = INFO_ALL): true	Muestra información sobre la configuración de PHP
phpversion(string|null $extension = null): string|false	Obtiene la versión de PHP
putenv(string $assignment): bool	Establece el valor de una variable de entorno
restore_include_path(): void	Restablece el valor de la opción de configuración include_path
set_include_path(string $include_path): string|false	Establece la opción de configuración include_path
set_time_limit(int $seconds): bool	Limita el tiempo máximo de ejecución
sys_get_temp_dir(): string	Devuelve la ruta del directorio para archivos temporales
version_compare(string $version1, string $version2, string|null $operator = null): int|bool	Compara dos números de versiones estandarizados de PHP
zend_thread_id(): int	Devuelve un identificador único del thread actual
zend_version(): string	Obtiene la versión del motor Zend actual
json_decode(string $json, bool|null $associative = null, int $depth = 512, int $flags = ?): mixed	Decodifica un string de JSON
json_encode(mixed $value, int $flags = ?, int $depth = 512): string|false	Retorna la representación JSON del valor dado
json_last_error_msg(): string	Devuelve el string con el error de la última llamada a json_encode() o a json_decode()
json_last_error(): int	Devuelve el último error ocurrido
json_validate(string $json, int $depth = 512, int $flags = ?): bool	Checks if a string contains valid JSON
>jsonSerialize(): mixed	(JsonSerializable) Especifica los datos que deberían serializarse para JSON
JsonException()	(new) Excepción lanzada si la opción JSON_THROW_ON_ERROR está establecida para json_encode o json_decode
JsonSerializable()	(new) Los objetos que implementen JsonSerializable puede personalizar su representación JSON cuando se codifica con json_encode
ezmlm_hash(string $addr): int	Calculate the hash value needed by EZMLM
mail(string $to, string $subject, string $message, array|string $additional_headers = [], string $additional_params = ""): bool	Enviar correo
abs(int|float $num): int|float	Valor absoluto
acos(float $num): float	Arco coseno
acosh(float $num): float	Arco coseno hiperbólico
asin(float $num): float	Arco seno
asinh(float $num): float	Arco seno hiperbólico
atan(float $num): float	Arco tangente
atan2(float $y, float $x): float	Arco tangente de dos variables
atanh(float $num): float	Arco tangente hiperbólica
base_convert(string $num, int $from_base, int $to_base): string	Convertir un número entre bases arbitrarias
bindec(string $binary_string): int|float	Binario a decimal
ceil(int|float $num): float	Redondear fracciones hacia arriba
cos(float $num): float	Coseno
cosh(float $num): float	Coseno hiperbólico
decbin(int $num): string	Decimal a binario
dechex(int $num): string	Decimal a hexadecimal
decoct(int $num): string	Decimal a octal
deg2rad(float $num): float	Convierte el número en grados a su equivalente en radianes
exp(float $num): float	Calcula la exponencial de e
expm1(float $num): float	Devuelve exp(numero)-1, calculado de tal forma que no pierde precisión incluso cuando el valor del numero se aproxima a cero.
fdiv(float $num1, float $num2): float	Divides two numbers, according to IEEE 754
floor(int|float $num): float	Redondear fracciones hacia abajo
fmod(float $num1, float $num2): float	Devuelve el resto en punto flotante (módulo) de la división de los argumentos
fpow(float $num, float $exponent): float	Raise one number to the power of another, according to IEEE 754
hexdec(string $hex_string): int|float	Hexadecimal a decimal
hypot(float $x, float $y): float	Calcula la longitud de la hipotenusa de un triángulo de ángulo recto
intdiv(int $num1, int $num2): int	División entera
is_finite(float $num): bool	Encuentra si un valor es un número finito legal
is_infinite(float $num): bool	Encuentra si un valor es infinito
is_nan(float $num): bool	Encuentra si un valor no es un número
log(float $num, float $base = M_E): float	Logaritmo natural
log10(float $num): float	Logaritmo en base 10
log1p(float $num): float	Devuelve log(1 + numero), calculado de tal forma que no pierde precisión incluso cuando el valor del numero se aproxima a cero.
max(mixed $value, mixed ...$values): mixed	Encontrar el valor más alto
max(array $value_array): mixed	Encontrar el valor más alto
min(mixed $value, mixed ...$values): mixed	Encontrar el valor más bajo
min(array $value_array): mixed	Encontrar el valor más bajo
octdec(string $octal_string): int|float	Octal a decimal
pi(): float	Obtener valor de pi
pow(mixed $num, mixed $exponent): int|float|object	Expresión exponencial
rad2deg(float $num): float	Convierte el número en radianes a su equivalente en grados
round(int|float $num, int $precision = ?, int|RoundingMode $mode = RoundingMode::HalfAwayFromZero): float	Redondea un float
sin(float $num): float	Seno
sinh(float $num): float	Seno hiperbólico
sqrt(float $num): float	Raíz cuadrada
tan(float $num): float	Tangente
tanh(float $num): float	Tangente hiperbólica
connection_aborted(): int	Verifica si el cliente se desconectó
connection_status(): int	Devuelve el campo de bits de status de conexión
constant(string $name): mixed	Devuelve el valor de una constante
define(string $constant_name, mixed $value, bool $case_insensitive = false): bool	Define una constante con nombre
defined(string $constant_name): bool	Comprueba si existe una constante con nombre dada
die()	Alias of exit
eval(string $code): mixed	Evaluar una cadena como código de PHP
exit(string|int $status = ?): never	Imprime un mensaje y termina el script actual
get_browser(string|null $user_agent = null, bool $return_array = false): object|array|false	Indica de lo que es capaz el navegador del usuario
__halt_compiler(): void	Detiene la ejecución del compilador
highlight_file(string $filename, bool $return = false): string|bool	Remarcado de la sintaxis de un fichero
highlight_string(string $string, bool $return = false): string|true	Remarcado de sintaxis de una cadena
hrtime(bool $as_number = false): array|int|float|false	Get the system's high resolution time
ignore_user_abort(bool|null $enable = null): int	Establecer si la desconexión de un cliente debería abortar la ejecución del script
pack(string $format, mixed ...$values): string	Empaqueta información a una cadena binaria
php_strip_whitespace(string $filename): string	Devuelve el código fuente sin los comentarios y espacios blancos
sapi_windows_cp_conv(int|string $in_codepage, int|string $out_codepage, string $subject): string|null	Convert string from one codepage to another
sapi_windows_cp_get(string $kind = ""): int	Get current codepage
sapi_windows_cp_is_utf8(): bool	Indicates whether the codepage is UTF-8 compatible
sapi_windows_cp_set(int $codepage): bool	Set process codepage
sapi_windows_generate_ctrl_event(int $event, int $pid = ?): bool	Send a CTRL event to another process
sapi_windows_set_ctrl_handler(callable|null $handler, bool $add = true): bool	Set or remove a CTRL event handler
sapi_windows_vt100_support(resource $stream, bool|null $enable = null): bool	Get or set VT100 support for the specified stream associated to an output buffer of a Windows console.
show_source()	Alias of highlight_file
sleep(int $seconds): int	Retrasar la ejecución
sys_getloadavg(): array|false	Obtiene la carga media del sistema
time_nanosleep(int $seconds, int $nanoseconds): array|bool	Retrasar por un número de segundos y nanosegundos
time_sleep_until(float $timestamp): bool	Hacer que el script duerma hasta el momento especificado
uniqid(string $prefix = "", bool $more_entropy = false): string	Generar un ID único
unpack(string $format, string $string, int $offset = ?): array|false	Desempaqueta datos de una cadena binaria
usleep(int $microseconds): void	Retrasar la ejecución en microsegundos
checkdnsrr(string $hostname, string $type = "MX"): bool	Comprueba registros DNS correspondientes a un nombre de host de Internet dado o dirección IP
closelog(): true	Cerrar conexión al log del sistema
dns_check_record()	Alias of checkdnsrr
dns_get_mx()	Alias of getmxrr
dns_get_record(string $hostname, int $type = DNS_ANY, array $authoritative_name_servers = null, array $additional_records = null, bool $raw = false): array|false	Fetch DNS Resource Records associated with a hostname
fsockopen(string $hostname, int $port = -1, int $error_code = null, string $error_message = null, float|null $timeout = null): resource|false	Abre un socket de conexión Internet o Unix
gethostbyaddr(string $ip): string|false	Obtener el nombre del host de Internet correspondiente a una dirección IP dada
gethostbyname(string $hostname): string	Obtener la dirección IPv4 que corresponde a un nombre de host de Internet dado
gethostbynamel(string $hostname): array|false	Obtener una lista de direcciones IPv4 que corresponde a un nombre de host de Internet dado
gethostname(): string|false	Obtiene el nombre de host
getmxrr(string $hostname, array $hosts, array $weights = null): bool	Obtener los registros MX correspondientes a un nombre de host de Internet
getprotobyname(string $protocol): int|false	Obtener el número de protocolo asociado con el nombre de protocolo
getprotobynumber(int $protocol): string|false	Obtiene el nombre de protocolo asociado con un número de protocolo
getservbyname(string $service, string $protocol): int|false	Obtener el número de puerto asociado con un servicio y protocolo de Internet
getservbyport(int $port, string $protocol): string|false	Obtener el servicio de Internet que corresponde con el puerto y protocolo
header_register_callback(callable $callback): bool	Llamar a una función de cabecera
header_remove(string|null $name = null): void	Elimina encabezados previamente establecidos
header(string $header, bool $replace = true, int $response_code = ?): void	Enviar encabezado sin formato HTTP
headers_list(): array	Devuelve una lista de encabezados de respuesta enviados (o listos para enviar)
headers_sent(string $filename = null, int $line = null): bool	Comprueba si o donde han enviado cabeceras
http_clear_last_response_headers(): void	Clears the stored HTTP response headers
http_get_last_response_headers(): array|null	Retrieve last HTTP response headers
http_response_code(int $response_code = ?): int|bool	Obtener o establecer el código de respuesta HTTP
inet_ntop(string $ip): string|false	Convertir una dirección de internet empaquetada en una representación legible por humanos
inet_pton(string $ip): string|false	Convertir una dirección IP legible por humanos a su representación in_addr empaquetada
ip2long(string $ip): int|false	Convierte una cadena que contiene una dirección con puntos del Protocolo de Internet (IPv4) en una dirección apropiada
long2ip(int $ip): string	Convierte una dirección de red (IPv4) en una cadena de texto en formato con puntos estándar de internet
net_get_interfaces(): array|false	Get network interfaces
openlog(string $prefix, int $flags, int $facility): true	Open connection to system logger
pfsockopen(string $hostname, int $port = -1, int $error_code = null, string $error_message = null, float|null $timeout = null): resource|false	Abre Internet persistente o conexión de socket de dominio Unix
request_parse_body(array|null $options = null): array	Read and parse the request body and return the result
setcookie(string $name, string $value = "", int $expires_or_options = ?, string $path = "", string $domain = "", bool $secure = false, bool $httponly = false): bool	Enviar una cookie
setcookie(string $name, string $value = "", array $options = []): bool	Enviar una cookie
setrawcookie(string $name, string $value = ?, int $expires_or_options = ?, string $path = ?, string $domain = ?, bool $secure = false, bool $httponly = false): bool	Enviar una cookie sin codificar su valor
setrawcookie(string $name, string $value = ?, array $options = []): bool	Enviar una cookie sin codificar su valor
socket_get_status()	Alias of stream_get_meta_data
socket_set_blocking()	Alias of stream_set_blocking
socket_set_timeout()	Alias of stream_set_timeout
syslog(int $priority, string $message): true	Genera un mensaje log de sistema
opcache_compile_file(string $filename): bool	Compiles and caches a PHP script without executing it
opcache_get_configuration(): array|false	Get configuration information about the cache
opcache_get_status(bool $include_scripts = true): array|false	Get status information about the cache
opcache_invalidate(string $filename, bool $force = false): bool	Invalidates a cached script
opcache_is_script_cached(string $filename): bool	Tells whether a script is cached in OPCache
opcache_reset(): bool	Resets the contents of the opcode cache
flush(): void	Vaciar el búfer de salida del sistema
ob_clean(): bool	Limpiar (eliminar) el búfer de salida
ob_end_clean(): bool	Limpiar (eliminar) el búfer de salida y deshabilitar el almacenamiento en el mismo
ob_end_flush(): bool	Volcar (enviar) el búfer de salida y deshabilitar el almacenamiento en el mismo
ob_flush(): bool	Vaciar (enviar) el búfer de salida
ob_get_clean(): string|false	Obtiene el contenido del búfer actual y elimina el búfer de salida actual
ob_get_contents(): string|false	Devolver el contenido del búfer de salida
ob_get_flush(): string|false	Volcar el búfer de salida, devolverlo como una cadena de caracteres y deshabilitar el almacenamiento en el búfer de salida
ob_get_length(): int|false	Devolver la longitud del búfer de salida
ob_get_level(): int	Devolver el nivel de anidamiento del mecanismo de almacenamiento en el búfer de salida
ob_get_status(bool $full_status = false): array	Obtener el estado de los búferes de salida
ob_implicit_flush(bool $enable = true): void	Habilitar/deshabilitar el volcado implícito
ob_list_handlers(): array	Enumerar todos los gestores de salida en uso
ob_start(callable|null $callback = null, int $chunk_size = ?, int $flags = PHP_OUTPUT_HANDLER_STDFLAGS): bool	Activa el almacenamiento en búfer de la salida
output_add_rewrite_var(string $name, string $value): bool	Añadir valores al mecanismo de reescritura de URLs
output_reset_rewrite_vars(): bool	Restablecer los valores del mecanismo de reescritura de URLs
password_algos(): array	Get available password hashing algorithm IDs
password_get_info(string $hash): array	Devuelve información sobre el hash proporcionado
password_hash(string $password, string|int|null $algo, array $options = []): string	Crea un hash de contraseña
password_needs_rehash(string $hash, string|int|null $algo, array $options = []): bool	Comprueba si el hash facilitado coincide con las opciones proporcionadas
password_verify(string $password, string $hash): bool	Comprueba que la contraseña coincida con un hash
preg_filter(string|array $pattern, string|array $replacement, string|array $subject, int $limit = -1, int $count = null): string|array|null	Realiza una búsqueda y sustitución de una expresión regular
preg_grep(string $pattern, array $array, int $flags = ?): array|false	Devuelve entradas de matriz que coinciden con el patrón
preg_last_error_msg(): string	Returns the error message of the last PCRE regex execution
preg_last_error(): int	Devuelve el código de error de la última ejecución de expresión regular de PCRE
preg_match_all(string $pattern, string $subject, array $matches = null, int $flags = ?, int $offset = ?): int|false	Realiza una comparación global de una expresión regular
preg_match(string $pattern, string $subject, array $matches = null, int $flags = ?, int $offset = ?): int|false	Realiza una comparación con una expresión regular
preg_quote(string $str, string|null $delimiter = null): string	Escapar caracteres en una expresión regular
preg_replace_callback_array(array $pattern, string|array $subject, int $limit = -1, int $count = null, int $flags = ?): string|array|null	Realizar una búsqueda y sustitución de expresión regular con retrollamadas
preg_replace_callback(string|array $pattern, callable $callback, string|array $subject, int $limit = -1, int $count = null, int $flags = ?): string|array|null	Realiza una búsqueda y sustitución de una expresión regular usando una llamada de retorno
preg_replace(string|array $pattern, string|array $replacement, string|array $subject, int $limit = -1, int $count = null): string|array|null	Realiza una búsqueda y sustitución de una expresión regular
preg_split(string $pattern, string $subject, int $limit = -1, int $flags = ?): array|false	Divide un string mediante una expresión regular
getrandmax(): int	Show largest possible random value
lcg_value(): float	Combined linear congruential generator
mt_getrandmax(): int	Show largest possible random value
mt_rand(): int	Generate a random value via the Mersenne Twister Random Number Generator
mt_rand(int $min, int $max): int	Generate a random value via the Mersenne Twister Random Number Generator
mt_srand(int|null $seed = null, int $mode = MT_RAND_MT19937): void	Seeds the Mersenne Twister Random Number Generator
rand(): int	Generate a random integer
rand(int $min, int $max): int	Generate a random integer
random_bytes(int $length): string	Get cryptographically secure random bytes
random_int(int $min, int $max): int	Get a cryptographically secure, uniformly selected integer
srand(int|null $seed = null, int $mode = MT_RAND_MT19937): void	Seed the random number generator
>generate(): string	(Random\Engine) Generates randomness
Random\Engine\Mt19937(int|null $seed = null, int $mode = MT_RAND_MT19937)	(new) Constructs a new Mt19937 engine
>__debugInfo(): array	(Random\Engine\Mt19937) Returns the internal state of the engine
>generate(): string	(Random\Engine\Mt19937) Generate 32 bits of randomness
>__serialize(): array	(Random\Engine\Mt19937) Serializes the Mt19937 object
>__unserialize(array $data): void	(Random\Engine\Mt19937) Deserializes the $data parameter into a Mt19937 object
Random\Engine\PcgOneseq128XslRr64(string|int|null $seed = null)	(new) Constructs a new PCG Oneseq 128 XSL RR 64 engine
>__debugInfo(): array	(Random\Engine\PcgOneseq128XslRr64) Returns the internal state of the engine
>generate(): string	(Random\Engine\PcgOneseq128XslRr64) Generate 64 bits of randomness
>jump(int $advance): void	(Random\Engine\PcgOneseq128XslRr64) Efficiently move the engine ahead multiple steps
>__serialize(): array	(Random\Engine\PcgOneseq128XslRr64) Serializes the PcgOneseq128XslRr64 object
>__unserialize(array $data): void	(Random\Engine\PcgOneseq128XslRr64) Deserializes the $data parameter into a PcgOneseq128XslRr64 object
>generate(): string	(Random\Engine\Secure) Generate cryptographically secure randomness
Random\Engine\Xoshiro256StarStar(string|int|null $seed = null)	(new) Constructs a new xoshiro256** engine
>__debugInfo(): array	(Random\Engine\Xoshiro256StarStar) Returns the internal state of the engine
>generate(): string	(Random\Engine\Xoshiro256StarStar) Generate 64 bits of randomness
>jump(): void	(Random\Engine\Xoshiro256StarStar) Efficiently move the engine ahead by 2^128 steps
>jumpLong(): void	(Random\Engine\Xoshiro256StarStar) Efficiently move the engine ahead by 2^192 steps
>__serialize(): array	(Random\Engine\Xoshiro256StarStar) Serializes the Xoshiro256StarStar object
>__unserialize(array $data): void	(Random\Engine\Xoshiro256StarStar) Deserializes the $data parameter into a Xoshiro256StarStar object
Random\Randomizer(Random\Engine|null $engine = null)	(new) Constructs a new Randomizer
>getBytes(int $length): string	(Random\Randomizer) Get random bytes
>getBytesFromString(string $string, int $length): string	(Random\Randomizer) Get random bytes from a source string
>getFloat(float $min, float $max, Random\IntervalBoundary $boundary = Random\IntervalBoundary::ClosedOpen): float	(Random\Randomizer) Get a uniformly selected float
>getInt(int $min, int $max): int	(Random\Randomizer) Get a uniformly selected integer
>nextFloat(): float	(Random\Randomizer) Get a float from the right-open interval [0.0, 1.0)
>nextInt(): int	(Random\Randomizer) Get a positive integer
>pickArrayKeys(array $array, int $num): array	(Random\Randomizer) Select random array keys
>__serialize(): array	(Random\Randomizer) Serializes the Randomizer object
>shuffleArray(array $array): array	(Random\Randomizer) Get a permutation of an array
>shuffleBytes(string $bytes): string	(Random\Randomizer) Get a byte-wise permutation of a string
>__unserialize(array $data): void	(Random\Randomizer) Deserializes the $data parameter into a Randomizer object
Random\BrokenRandomEngineError()	(new) Indicates that the used Random\Engine is broken, e
Random\CryptoSafeEngine()	(new) A marker interface indicating that the Random\Engine returns cryptographically secure randomness
Random\Engine\Secure()	(new) Generates cryptographically secure randomness using the operating system’s CSPRNG
Random\Engine()	(new) A Random\Engine provides a low-level source of randomness by returning random bytes that are consumed by high-level APIs to perform their operations
Random\RandomError()	(new) The base class for Errors that occur during generation or use of randomness
Random\RandomException()	(new) The base class for Exceptions that occur during generation or use of randomness
Reflection::export(Reflector $reflector, bool $return = false): string	Exportar
Reflection::getModifierNames(int $modifiers): array	Obtener nombres de modificadores
ReflectionAttribute()	(new) Private constructor to disallow direct instantiation
>getArguments(): array	(ReflectionAttribute) Gets arguments passed to attribute
>getName(): string	(ReflectionAttribute) Gets attribute name
>getTarget(): int	(ReflectionAttribute) Returns the target of the attribute as bitmask
>isRepeated(): bool	(ReflectionAttribute) Returns whether the attribute of this name has been repeated on a code element
>newInstance(): object	(ReflectionAttribute) Instantiates the attribute class represented by this ReflectionAttribute class and arguments
ReflectionClass(object|string $objectOrClass)	(new) Construye un objeto de tipo ReflectionClass
ReflectionClass::export(mixed $argument, bool $return = false): string	Exporta una clase
>getAttributes(string|null $name = null, int $flags = ?): array	(ReflectionClass) Gets Attributes
>getConstant(string $name): mixed	(ReflectionClass) Obtener una constante definida
>getConstants(int|null $filter = null): array	(ReflectionClass) Obtener constantes
>getConstructor(): ReflectionMethod|null	(ReflectionClass) Obtiene el constructor de una clase
>getDefaultProperties(): array	(ReflectionClass) Obtener propiedades predeterminadas
>getDocComment(): string|false	(ReflectionClass) Obtener los comentarios de documentación
>getEndLine(): int|false	(ReflectionClass) Consultar línea final
>getExtension(): ReflectionExtension|null	(ReflectionClass) Obtiene un objeto ReflectionExtension para la extensión que definió la clase
>getExtensionName(): string|false	(ReflectionClass) Obtiene el nombre de la extensión que definió una clase
>getFileName(): string|false	(ReflectionClass) Obtiene el nombre de fichero en el que está definida la clase
>getInterfaceNames(): array	(ReflectionClass) Obtiene nombres de las interfaces
>getInterfaces(): array	(ReflectionClass) Obtiene las interfaces
>getLazyInitializer(object $object): callable|null	(ReflectionClass) Gets lazy initializer
>getMethod(string $name): ReflectionMethod	(ReflectionClass) Obtiene un objeto ReflectionMethod para un método de una clase
>getMethods(int|null $filter = null): array	(ReflectionClass) Obtiene un array de métodos
>getModifiers(): int	(ReflectionClass) Obtiene los modificadores de clase
>getName(): string	(ReflectionClass) Obtiene el nombre de la clase
>getNamespaceName(): string	(ReflectionClass) Obtiene el nombre del espacio de nombres
>getParentClass(): ReflectionClass|false	(ReflectionClass) Obtiene la clase padre
>getProperties(int|null $filter = null): array	(ReflectionClass) Obtiene las propiedades
>getProperty(string $name): ReflectionProperty	(ReflectionClass) Obtiene un objeto ReflectionProperty para una propiedad de una clase
>getReflectionConstant(string $name): ReflectionClassConstant|false	(ReflectionClass) Gets a ReflectionClassConstant for a class's constant
>getReflectionConstants(int|null $filter = null): array	(ReflectionClass) Gets class constants
>getShortName(): string	(ReflectionClass) Obtiene el nombre abreviado
>getStartLine(): int|false	(ReflectionClass) Obtiene el número de linea de inicio
>getStaticProperties(): array	(ReflectionClass) Obtiene las propiedades estáticas
>getStaticPropertyValue(string $name, mixed $def_value = ?): mixed	(ReflectionClass) Obtiene el valor de una propiedad estática
>getTraitAliases(): array	(ReflectionClass) Obtiene un array con los alias usados con los traits
>getTraitNames(): array	(ReflectionClass) Devuelve un array con los nombres de los traits usados por esta clase
>getTraits(): array	(ReflectionClass) Obtiene un array con los traits que utiliza esta clase
>hasConstant(string $name): bool	(ReflectionClass) Comprueba si una constante está o no definida
>hasMethod(string $name): bool	(ReflectionClass) Comprueba si un método está o no definido
>hasProperty(string $name): bool	(ReflectionClass) Comprueba si una propiedad está o no definida
>implementsInterface(ReflectionClass|string $interface): bool	(ReflectionClass) Comprueba si se implementa una determinada interfaz
>initializeLazyObject(object $object): object	(ReflectionClass) Forces initialization of a lazy object
>inNamespace(): bool	(ReflectionClass) Comprueba si pertenece a un determinado espacio de nombres
>isAbstract(): bool	(ReflectionClass) Comprueba si la clase es abstracta
>isAnonymous(): bool	(ReflectionClass) Checks if class is anonymous
>isCloneable(): bool	(ReflectionClass) Comprueba si la clase es o no clonable
>isEnum(): bool	(ReflectionClass) Returns whether this is an enum
>isFinal(): bool	(ReflectionClass) Comprueba si la clase inal
>isInstance(object $object): bool	(ReflectionClass) Comprueba si un objeto es instancia de la clase
>isInstantiable(): bool	(ReflectionClass) Comprueba si una clase es instanciable
>isInterface(): bool	(ReflectionClass) Comprueba una la clase es una interfaz
>isInternal(): bool	(ReflectionClass) Comprueba si una clase está definida internamente por una extensión o por el núcleo
>isIterable(): bool	(ReflectionClass) Check whether this class is iterable
>isIterateable()	(ReflectionClass) Alias of ReflectionClass::isIterable
>isReadOnly(): bool	(ReflectionClass) Checks if class is readonly
>isSubclassOf(ReflectionClass|string $class): bool	(ReflectionClass) Comprueba si es una subclase
>isTrait(): bool	(ReflectionClass) Comprueba si es un trait
>isUninitializedLazyObject(object $object): bool	(ReflectionClass) Checks if an object is lazy and uninitialized
>isUserDefined(): bool	(ReflectionClass) Comprueba si es una clase definida por el usuario
>markLazyObjectAsInitialized(object $object): object	(ReflectionClass) Marks a lazy object as initialized without calling the initializer or factory
>newInstance(mixed ...$args): object	(ReflectionClass) Crea una nueva instancia de clase a partir de la lista de parámetros dados
>newInstanceArgs(array $args = []): object|null	(ReflectionClass) Crea una nueva instancia de clase a partir de los argumentos dados
>newInstanceWithoutConstructor(): object	(ReflectionClass) Crea una nueva clase sin invocar al constructor
>newLazyGhost(callable $initializer, int $options = ?): object	(ReflectionClass) Creates a new lazy ghost instance
>newLazyProxy(callable $factory, int $options = ?): object	(ReflectionClass) Creates a new lazy proxy instance
>resetAsLazyGhost(object $object, callable $initializer, int $options = ?): void	(ReflectionClass) Resets an object and marks it as lazy
>resetAsLazyProxy(object $object, callable $factory, int $options = ?): void	(ReflectionClass) Resets an object and marks it as lazy
>setStaticPropertyValue(string $name, mixed $value): void	(ReflectionClass) Establece el valor de una propiedad estática
>__toString(): string	(ReflectionClass) Devuelve la representación en forma de string del objeto ReflectionClass
ReflectionClassConstant(object|string $class, string $constant)	(new) Constructs a ReflectionClassConstant
ReflectionClassConstant::export(mixed $class, string $name, bool $return = ?): string	Export
>getAttributes(string|null $name = null, int $flags = ?): array	(ReflectionClassConstant) Gets Attributes
>getDeclaringClass(): ReflectionClass	(ReflectionClassConstant) Gets declaring class
>getDocComment(): string|false	(ReflectionClassConstant) Gets doc comments
>getModifiers(): int	(ReflectionClassConstant) Gets the class constant modifiers
>getName(): string	(ReflectionClassConstant) Get name of the constant
>getType(): ReflectionType|null	(ReflectionClassConstant) Gets a class constant's type
>getValue(): mixed	(ReflectionClassConstant) Gets value
>hasType(): bool	(ReflectionClassConstant) Checks if class constant has a type
>isDeprecated(): bool	(ReflectionClassConstant) Checks if deprecated
>isEnumCase(): bool	(ReflectionClassConstant) Checks if class constant is an Enum case
>isFinal(): bool	(ReflectionClassConstant) Checks if class constant is final
>isPrivate(): bool	(ReflectionClassConstant) Checks if class constant is private
>isProtected(): bool	(ReflectionClassConstant) Checks if class constant is protected
>isPublic(): bool	(ReflectionClassConstant) Checks if class constant is public
>__toString(): string	(ReflectionClassConstant) Returns the string representation of the ReflectionClassConstant object
ReflectionConstant(string $name)	(new) Constructs a ReflectionConstant
>getExtension(): ReflectionExtension|null	(ReflectionConstant) Gets ReflectionExtension of the defining extension
>getExtensionName(): string|false	(ReflectionConstant) Gets name of the defining extension
>getFileName(): string|false	(ReflectionConstant) Gets name of the defining file
>getName(): string	(ReflectionConstant) Gets name
>getNamespaceName(): string	(ReflectionConstant) Gets namespace name
>getShortName(): string	(ReflectionConstant) Gets short name
>getValue(): mixed	(ReflectionConstant) Gets value
>isDeprecated(): bool	(ReflectionConstant) Checks if deprecated
>__toString(): string	(ReflectionConstant) Returns string representation
ReflectionEnum(object|string $objectOrClass)	(new) Instantiates a ReflectionEnum object
>getBackingType(): ReflectionNamedType|null	(ReflectionEnum) Gets the backing type of an Enum, if any
>getCase(string $name): ReflectionEnumUnitCase	(ReflectionEnum) Returns a specific case of an Enum
>getCases(): array	(ReflectionEnum) Returns a list of all cases on an Enum
>hasCase(string $name): bool	(ReflectionEnum) Checks for a case on an Enum
>isBacked(): bool	(ReflectionEnum) Determines if an Enum is a Backed Enum
ReflectionEnumBackedCase(object|string $class, string $constant)	(new) Instantiates a ReflectionEnumBackedCase object
>getBackingValue(): int|string	(ReflectionEnumBackedCase) Gets the scalar value backing this Enum case
ReflectionEnumUnitCase(object|string $class, string $constant)	(new) Instantiates a ReflectionEnumUnitCase object
>getEnum(): ReflectionEnum	(ReflectionEnumUnitCase) Gets the reflection of the enum of this case
>getValue(): UnitEnum	(ReflectionEnumUnitCase) Gets the enum case object described by this reflection object
>__clone(): void	(ReflectionExtension) Clonar
ReflectionExtension(string $name)	(new) Constructor de los objetos ReflectionExtension
ReflectionExtension::export(string $name, string $return = false): string	Exportar
>getClasses(): array	(ReflectionExtension) Obtiene clases
>getClassNames(): array	(ReflectionExtension) Obtiene nombres de las clases
>getConstants(): array	(ReflectionExtension) Obtiene las constantes
>getDependencies(): array	(ReflectionExtension) Obtiene las dependencias
>getFunctions(): array	(ReflectionExtension) Obtiene las funciones de una extensión
>getINIEntries(): array	(ReflectionExtension) Obtiene las entradas INI de la extensión
>getName(): string	(ReflectionExtension) Obtiene el nombre de la extensión
>getVersion(): string|null	(ReflectionExtension) Obtiene la versión de una extensión
>info(): void	(ReflectionExtension) Imprime información sobre la extensión
>isPersistent(): bool	(ReflectionExtension) Indica si la extensión es persistente
>isTemporary(): bool	(ReflectionExtension) Indica si la extensión es temporal
>__toString(): string	(ReflectionExtension) Convertir a string
ReflectionFiber(Fiber $fiber)	(new) Constructs a ReflectionFiber object
>getCallable(): callable	(ReflectionFiber) Gets the callable used to create the Fiber
>getExecutingFile(): string|null	(ReflectionFiber) Get the file name of the current execution point
>getExecutingLine(): int|null	(ReflectionFiber) Get the line number of the current execution point
>getFiber(): Fiber	(ReflectionFiber) Get the reflected Fiber instance
>getTrace(int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT): array	(ReflectionFiber) Get the backtrace of the current execution point
ReflectionFunction(Closure|string $function)	(new) Contruye un objeto de tipo ReflectionFunction
ReflectionFunction::export(string $name, string $return = ?): string	Exporta una función
>getClosure(): Closure	(ReflectionFunction) Genera dinámicamente una función anónima de esta función
>invoke(mixed ...$args): mixed	(ReflectionFunction) Invoca una función
>invokeArgs(array $args): mixed	(ReflectionFunction) Invoca a la función con argumentos
>isAnonymous(): bool	(ReflectionFunction) Checks if a function is anonymous
>isDisabled(): bool	(ReflectionFunction) Comprueba si una función está desactivada
>__toString(): string	(ReflectionFunction) Convertir a string
>__clone(): void	(ReflectionFunctionAbstract) Clona una función
>getAttributes(string|null $name = null, int $flags = ?): array	(ReflectionFunctionAbstract) Gets Attributes
>getClosureCalledClass(): ReflectionClass|null	(ReflectionFunctionAbstract) Returns the class corresponding to static:: inside a closure
>getClosureScopeClass(): ReflectionClass|null	(ReflectionFunctionAbstract) Devuelve el ámbito asociado al cierre
>getClosureThis(): object|null	(ReflectionFunctionAbstract) Devuelve una función anónima que apunta a esta función
>getClosureUsedVariables(): array	(ReflectionFunctionAbstract) Returns an array of the used variables in the Closure
>getDocComment(): string|false	(ReflectionFunctionAbstract) Obtiene comentarios de documentación
>getEndLine(): int|false	(ReflectionFunctionAbstract) Obtiene número de linea final
>getExtension(): ReflectionExtension|null	(ReflectionFunctionAbstract) Obtiene información sobre la extensión
>getExtensionName(): string|false	(ReflectionFunctionAbstract) Obtiene el nombre de la extensión
>getFileName(): string|false	(ReflectionFunctionAbstract) Obtiene el nombre del fichero
>getName(): string	(ReflectionFunctionAbstract) Obtiene el nombre de la función
>getNamespaceName(): string	(ReflectionFunctionAbstract) Obtiene el nombre del espacio de nombres
>getNumberOfParameters(): int	(ReflectionFunctionAbstract) Obtiene el número total de parámetros
>getNumberOfRequiredParameters(): int	(ReflectionFunctionAbstract) Obtiene el número de parámetros obligatorios
>getParameters(): array	(ReflectionFunctionAbstract) Obtiene los parámetros
>getReturnType(): ReflectionType|null	(ReflectionFunctionAbstract) Gets the specified return type of a function
>getShortName(): string	(ReflectionFunctionAbstract) Obtiene el nombre abreviado de la función
>getStartLine(): int|false	(ReflectionFunctionAbstract) Obtiene el número de la línea de inicio
>getStaticVariables(): array	(ReflectionFunctionAbstract) Obtiene las variable estáticas
>getTentativeReturnType(): ReflectionType|null	(ReflectionFunctionAbstract) Returns the tentative return type associated with the function
>hasReturnType(): bool	(ReflectionFunctionAbstract) Checks if the function has a specified return type
>hasTentativeReturnType(): bool	(ReflectionFunctionAbstract) Devuelve si la función tiene un tipo de retorno tentativo
>inNamespace(): bool	(ReflectionFunctionAbstract) Comprueba si pertenece a un espacio de nombres
>isClosure(): bool	(ReflectionFunctionAbstract) Comprobar si es un cierre
>isDeprecated(): bool	(ReflectionFunctionAbstract) Comprueba si está obsoleta
>isGenerator(): bool	(ReflectionFunctionAbstract) Devuelve si la función es un generador
>isInternal(): bool	(ReflectionFunctionAbstract) Comprueba si la función es interna
>isStatic(): bool	(ReflectionFunctionAbstract) Checks if the function is static
>isUserDefined(): bool	(ReflectionFunctionAbstract) Comprueba si es una función definida por un usuario
>isVariadic(): bool	(ReflectionFunctionAbstract) Comprueba si la función es varíadica
>returnsReference(): bool	(ReflectionFunctionAbstract) Comprueba si devuelve una referencia
>__toString(): void	(ReflectionFunctionAbstract) Convertir a texto
ReflectionGenerator(Generator $generator)	(new) Constructs a ReflectionGenerator object
>getExecutingFile(): string	(ReflectionGenerator) Gets the file name of the currently executing generator
>getExecutingGenerator(): Generator	(ReflectionGenerator) Gets the executing Generator object
>getExecutingLine(): int	(ReflectionGenerator) Gets the currently executing line of the generator
>getFunction(): ReflectionFunctionAbstract	(ReflectionGenerator) Gets the function name of the generator
>getThis(): object|null	(ReflectionGenerator) Gets the $this value of the generator
>getTrace(int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT): array	(ReflectionGenerator) Gets the trace of the executing generator
>isClosed(): bool	(ReflectionGenerator) Checks if execution finished
>getTypes(): array	(ReflectionIntersectionType) Returns the types included in the intersection type
ReflectionMethod(object|string $objectOrMethod, string $method)	(new) Construye un objeto ReflectionMethod
ReflectionMethod(string $classMethod)	(new) Construye un objeto ReflectionMethod
ReflectionMethod::createFromMethodName(string $method): static	Creates a new ReflectionMethod
ReflectionMethod::export(string $class, string $name, bool $return = false): string	Exporta un objeto de tipo ReflectionMethod
>getClosure(object|null $object = null): Closure	(ReflectionMethod) Devuelve un cierre creado dinámicamente para este método
>getDeclaringClass(): ReflectionClass	(ReflectionMethod) Obtiene la clase en la que se ha declarado el método
>getModifiers(): int	(ReflectionMethod) Obtiene los modificadores del método
>getPrototype(): ReflectionMethod	(ReflectionMethod) Obtiene el prototipo del método (si lo hubiera)
>hasPrototype(): bool	(ReflectionMethod) Returns whether a method has a prototype
>invoke(object|null $object, mixed ...$args): mixed	(ReflectionMethod) Invoca un método
>invokeArgs(object|null $object, array $args): mixed	(ReflectionMethod) Invoca un método con argumentos
>isAbstract(): bool	(ReflectionMethod) Comprueba si el método es abstracto
>isConstructor(): bool	(ReflectionMethod) Comprueba si el método es un constructor
>isDestructor(): bool	(ReflectionMethod) Comprueba si el método es un destructor
>isFinal(): bool	(ReflectionMethod) Comprueba si el método es final
>isPrivate(): bool	(ReflectionMethod) Comprueba si el método es privado
>isProtected(): bool	(ReflectionMethod) Comprueba si el método está protegido
>isPublic(): bool	(ReflectionMethod) Comprueba si el método es público
>setAccessible(bool $accessible): void	(ReflectionMethod) Asigna la accesibilidad del método
>__toString(): string	(ReflectionMethod) Devuelve la representación en forma de texto de este objeto
>getName(): string	(ReflectionNamedType) Get the name of the type as a string
>isBuiltin(): bool	(ReflectionNamedType) Checks if it is a built-in type
ReflectionObject(object $object)	(new) Construye un ReflectionObject
ReflectionObject::export(string $argument, bool $return = ?): string	Exportación
>allowsNull(): bool	(ReflectionParameter) Comprueba si null es permitido
>canBePassedByValue(): bool	(ReflectionParameter) Devuelve si este parámetro de puede pasar por valor
>__clone(): void	(ReflectionParameter) Clon
ReflectionParameter(string|array|object $function, int|string $param)	(new) Construct
ReflectionParameter::export(string $function, string $parameter, bool $return = ?): string	Exportar
>getAttributes(string|null $name = null, int $flags = ?): array	(ReflectionParameter) Gets Attributes
>getClass(): ReflectionClass|null	(ReflectionParameter) Obtener la clase con declaraciones de tipos
>getDeclaringClass(): ReflectionClass|null	(ReflectionParameter) Obtiene declaración de la clase
>getDeclaringFunction(): ReflectionFunctionAbstract	(ReflectionParameter) Obtiene declaración de función
>getDefaultValue(): mixed	(ReflectionParameter) Obtiene el valor del parámetro por defecto
>getDefaultValueConstantName(): string|null	(ReflectionParameter) Devuelve el nombre de la consntante del valor predeterminado si el valor predeterminado es constante o null
>getName(): string	(ReflectionParameter) Obtener el nombre del parámetro
>getPosition(): int	(ReflectionParameter) Obtiene la posición del parámetro
>getType(): ReflectionType|null	(ReflectionParameter) Gets a parameter's type
>hasType(): bool	(ReflectionParameter) Checks if parameter has a type
>isArray(): bool	(ReflectionParameter) Comprueba si el parámetro espera un array
>isCallable(): bool	(ReflectionParameter) Devuelve si el parámetro DEBE ser de tipo callable
>isDefaultValueAvailable(): bool	(ReflectionParameter) Comprueba si el valor por defecto está disponible
>isDefaultValueConstant(): bool	(ReflectionParameter) Devuelve si el valor predeterminado de este parámetro es constante
>isOptional(): bool	(ReflectionParameter) Comprueba si es opcional
>isPassedByReference(): bool	(ReflectionParameter) Comprueba si es pasado por referencia
>isPromoted(): bool	(ReflectionParameter) Checks if a parameter is promoted to a property
>isVariadic(): bool	(ReflectionParameter) Comprueba si el parámetro es varíadico
>__toString(): string	(ReflectionParameter) A string
>__clone(): void	(ReflectionProperty) Clonar
ReflectionProperty(object|string $class, string $property)	(new) Construir un objeto ReflectionProperty
ReflectionProperty::export(mixed $class, string $name, bool $return = ?): string	Exportar
>getAttributes(string|null $name = null, int $flags = ?): array	(ReflectionProperty) Gets Attributes
>getDeclaringClass(): ReflectionClass	(ReflectionProperty) Obtiene la clase en la que se declaró
>getDefaultValue(): mixed	(ReflectionProperty) Returns the default value declared for a property
>getDocComment(): string|false	(ReflectionProperty) Obtiene los comentarios de documentación de una propiedad
>getHook(PropertyHookType $type): ReflectionMethod|null	(ReflectionProperty) Returns a reflection object for a specified hook
>getHooks(): array	(ReflectionProperty) Returns an array of all hooks on this property
>getModifiers(): int	(ReflectionProperty) Obtiene los modificadores
>getName(): string	(ReflectionProperty) Obtiene el nombre de la propiedad
>getRawValue(object $object): mixed	(ReflectionProperty) Returns the value of a property, bypassing a get hook if defined
>getSettableType(): ReflectionType|null	(ReflectionProperty) Returns the parameter type of a setter hook
>getType(): ReflectionType|null	(ReflectionProperty) Gets a property's type
>getValue(object|null $object = null): mixed	(ReflectionProperty) Obtiene el valor
>hasDefaultValue(): bool	(ReflectionProperty) Checks if property has a default value declared
>hasHook(PropertyHookType $type): bool	(ReflectionProperty) Returns whether the property has a given hook defined
>hasHooks(): bool	(ReflectionProperty) Returns whether the property has any hooks defined
>hasType(): bool	(ReflectionProperty) Checks if property has a type
>isAbstract(): bool	(ReflectionProperty) Determines if a property is abstract
>isDefault(): bool	(ReflectionProperty) Comprueba si una propiedad es predeterminada
>isDynamic(): bool	(ReflectionProperty) Checks if property is a dynamic property
>isFinal(): bool	(ReflectionProperty) Determines if this property is final or not
>isInitialized(object|null $object = null): bool	(ReflectionProperty) Checks whether a property is initialized
>isLazy(object $object): bool	(ReflectionProperty) Checks whether a property is lazy
>isPrivate(): bool	(ReflectionProperty) Comprueba si una propiedad es privada
>isPrivateSet(): bool	(ReflectionProperty) Checks if property is private for writing
>isPromoted(): bool	(ReflectionProperty) Checks if property is promoted
>isProtected(): bool	(ReflectionProperty) Comprueba si la propiedad es protegida
>isProtectedSet(): bool	(ReflectionProperty) Checks whether the property is protected for writing
>isPublic(): bool	(ReflectionProperty) Comprueba si la propiedad es pública
>isReadOnly(): bool	(ReflectionProperty) Checks if property is readonly
>isStatic(): bool	(ReflectionProperty) Comprueba si la propiedad es estática
>isVirtual(): bool	(ReflectionProperty) Determines if a property is virtual
>setAccessible(bool $accessible): void	(ReflectionProperty) Hace accesible una propiedad
>setRawValue(object $object, mixed $value): void	(ReflectionProperty) Sets the value of a property, bypassing a set hook if defined
>setRawValueWithoutLazyInitialization(object $object, mixed $value): void	(ReflectionProperty) Set raw property value without triggering lazy initialization
>setValue(object|null $object, mixed $value): void	(ReflectionProperty) Establece el valor de la propiedad
>setValue(mixed $value): void	(ReflectionProperty) Establece el valor de la propiedad
>skipLazyInitialization(object $object): void	(ReflectionProperty) Marks property as non-lazy
>__toString(): string	(ReflectionProperty) Convertir a texto
ReflectionReference()	(new) Private constructor to disallow direct instantiation
ReflectionReference::fromArrayElement(array $array, int|string $key): ReflectionReference|null	Create a ReflectionReference from an array element
>getId(): string	(ReflectionReference) Get unique ID of a reference
>allowsNull(): bool	(ReflectionType) Checks if null is allowed
>__toString(): string	(ReflectionType) To string
>getTypes(): array	(ReflectionUnionType) Returns the types included in the union type
>__clone(): void	(ReflectionZendExtension) Clon de controlador
ReflectionZendExtension(string $name)	(new) Constructor
ReflectionZendExtension::export(string $name, bool $return = ?): string	Exportar
>getAuthor(): string	(ReflectionZendExtension) Consultar autor
>getCopyright(): string	(ReflectionZendExtension) Consultar los derechos de copia
>getName(): string	(ReflectionZendExtension) Obtiene el nombre
>getURL(): string	(ReflectionZendExtension) Obtiene la URL
>getVersion(): string	(ReflectionZendExtension) Obtiene la versión
>__toString(): string	(ReflectionZendExtension) Convierte a texto
Reflector::export(): string	Exportar
Reflection()	(new) Clase reflection
ReflectionException()	(new) La clase ReflectionException
ReflectionFunctionAbstract()	(new) Clase padre de ReflectionFunction
ReflectionIntersectionType()	(new) 
ReflectionNamedType()	(new) 
ReflectionType()	(new) The ReflectionType class reports information about a function's parameter/return type or a class's property type
ReflectionUnionType()	(new) 
Reflector()	(new) Reflector es una interfaz que implementan todas las clases exportables de Reflection
>append(Iterator $iterator): void	(AppendIterator) Añade un iterador
AppendIterator()	(new) Construye un AppendIterator
>current(): mixed	(AppendIterator) Obtiene el valor actual
>getArrayIterator(): ArrayIterator	(AppendIterator) Obtiene el getArrayIterator
>getIteratorIndex(): int|null	(AppendIterator) Lee el índice de un iterador
>key(): scalar	(AppendIterator) Obtiene la clave actual
>next(): void	(AppendIterator) Desplazarse al siguiente elemento
>rewind(): void	(AppendIterator) Rebobina el iterador
>valid(): bool	(AppendIterator) Comprueba la validación del elemento actual
>append(mixed $value): void	(ArrayIterator) Añade un elemento
>asort(int $flags = SORT_REGULAR): true	(ArrayIterator) Ordena las entradas por los valores
ArrayIterator(array|object $array = [], int $flags = ?)	(new) Construye un ArrayIterator
>count(): int	(ArrayIterator) Cuenta elementos
>current(): mixed	(ArrayIterator) Devuelve la entrada actual del array
>getArrayCopy(): array	(ArrayIterator) Obtener copia de un array
>getFlags(): int	(ArrayIterator) Recupera los flags de comportamiento
>key(): string|int|null	(ArrayIterator) Devuelve la clave actual del array
>ksort(int $flags = SORT_REGULAR): true	(ArrayIterator) Ordena las entradas por las claves
>natcasesort(): true	(ArrayIterator) Ordena naturalmente las entradas, sin tener en cuenta la casilla
>natsort(): true	(ArrayIterator) Ordena naturalmente las entradas
>next(): void	(ArrayIterator) Desplaza a la siguiente entrada
>offsetExists(mixed $key): bool	(ArrayIterator) Compruebar si el índice existe
>offsetGet(mixed $key): mixed	(ArrayIterator) Obtener el valor de un índice
>offsetSet(mixed $key, mixed $value): void	(ArrayIterator) Establece el valor para un índice
>offsetUnset(mixed $key): void	(ArrayIterator) Borra el valor de una posición
>rewind(): void	(ArrayIterator) Rebobinar array al inicio
>seek(int $offset): void	(ArrayIterator) Buscar la posición
>serialize(): string	(ArrayIterator) Serializar
>setFlags(int $flags): void	(ArrayIterator) Set behaviour flags
>uasort(callable $callback): true	(ArrayIterator) Ordenar con una función de comparación definida por el usuario y mantener la asociación del índice
>uksort(callable $callback): true	(ArrayIterator) Ordenar por claves utilizando una función de comparación definida por el usuario
>unserialize(string $data): void	(ArrayIterator) Deserializar
>valid(): bool	(ArrayIterator) Comprueba si un array contiene más entradas
>append(mixed $value): void	(ArrayObject) Añade un valor
>asort(int $flags = SORT_REGULAR): true	(ArrayObject) Ordena las entradas por valor
ArrayObject(array|object $array = [], int $flags = ?, string $iteratorClass = ArrayIterator::class)	(new) Construir un nuevo objeto Array
>count(): int	(ArrayObject) Obtener el número de propiedades públicas en la clase ArrayObject
>exchangeArray(array|object $array): array	(ArrayObject) Intercambia el array por otro
>getArrayCopy(): array	(ArrayObject) Crea una copia de la clase ArrayObject
>getFlags(): int	(ArrayObject) Obtiene las flags de comportamiento
>getIterator(): Iterator	(ArrayObject) Crear un nuevo iterador desde una instancia ArrayObject
>getIteratorClass(): string	(ArrayObject) Obtiene el nombre de clase iterador para ArrayObject
>ksort(int $flags = SORT_REGULAR): true	(ArrayObject) Ordena las entradas por clave
>natcasesort(): true	(ArrayObject) Ordena un array usando un algoritmo orden natural
>natsort(): true	(ArrayObject) Ordena entradas usando un algoritmo de orden natural
>offsetExists(mixed $key): bool	(ArrayObject) Devuelve si el índice solicitado existe
>offsetGet(mixed $key): mixed	(ArrayObject) Devuelve el valor del índice especificado
>offsetSet(mixed $key, mixed $value): void	(ArrayObject) Establece el valor en el índice especificado
>offsetUnset(mixed $key): void	(ArrayObject) Destruye el valor para el índice especificado
>serialize(): string	(ArrayObject) Serializar un ArrayObject
>setFlags(int $flags): void	(ArrayObject) Establece las flags de comportamiento
>setIteratorClass(string $iteratorClass): void	(ArrayObject) Establece el nombre de clase iterador para ArrayObject
>uasort(callable $callback): true	(ArrayObject) Ordena las entradas con una función de comparación definida por el usuario y mantiene asociación de claves
>uksort(callable $callback): true	(ArrayObject) Ordena las entradas por clave usando una función de comparación definida por el usuario
>unserialize(string $data): void	(ArrayObject) Deserializar el objeto ArrayObject
CachingIterator(Iterator $iterator, int $flags = CachingIterator::CALL_TOSTRING)	(new) Construir un nuevo objeto CachingIterator para el iterador
>count(): int	(CachingIterator) El número de elementos en el iterador
>current(): mixed	(CachingIterator) Devuelve el elemento actual
>getCache(): array	(CachingIterator) Recuperar el contenido de la caché
>getFlags(): int	(CachingIterator) Obtener las banderas utilizadas
>hasNext(): bool	(CachingIterator) Comprueba que el iterador interno tenga un elemento siguiente válido
>key(): scalar	(CachingIterator) Devuelve la clave del elemento actual
>next(): void	(CachingIterator) Desplaza el iterador adelante
>offsetExists(string $key): bool	(CachingIterator) Comprobar existencia de un índice
>offsetGet(string $key): mixed	(CachingIterator) El propósito offsetGet
>offsetSet(string $key, mixed $value): void	(CachingIterator) El propósito offsetSet
>offsetUnset(string $key): void	(CachingIterator) El propósito offsetUnset
>rewind(): void	(CachingIterator) Rebobina el iterador
>setFlags(int $flags): void	(CachingIterator) El propósito de setFlags
>__toString(): string	(CachingIterator) Devolver la representación en formato cadena del elemento actual
>valid(): bool	(CachingIterator) Comprueba que el elemento actual sea válido
>accept(): bool	(CallbackFilterIterator) Llama la llamada de retorno con el valor actual, la clave actual y el iterador interior como argumentos
CallbackFilterIterator(Iterator $iterator, callable $callback)	(new) Crear un iterador filtrado desde otro iterador
DirectoryIterator(string $directory)	(new) Construye un nuevo iterador de directorio a partir de una ruta
>current(): mixed	(DirectoryIterator) Devuelve el elemento actual del DirectoryIterator
>getBasename(string $suffix = ""): string	(DirectoryIterator) Obtener el nombre base del elemento actual DirectoryIterator
>getExtension(): string	(DirectoryIterator) Obtiene la extensión de un fichero
>getFilename(): string	(DirectoryIterator) Devuelve el nombre del fichero del elemento actual DirectoryIterator
>isDot(): bool	(DirectoryIterator) Determina si el elemento actual DirectoryIterator es '.' o '..'
>key(): mixed	(DirectoryIterator) Devuelve la entrada actual del directorio
>next(): void	(DirectoryIterator) Avanza al siguiente elemento DirectoryIterator
>rewind(): void	(DirectoryIterator) Robobina DirectoryIterator hasta volver al inicio
>seek(int $offset): void	(DirectoryIterator) Mueve el apuntador interno del elemento DirectoryIterator
>__toString(): string	(DirectoryIterator) Obtiene el nombre del fichero como un string
>valid(): bool	(DirectoryIterator) Comprueba si la actual posición de DirectoryIterator es un fichero válido
>current(): never	(EmptyIterator) El método current()
>key(): never	(EmptyIterator) El método key()
>next(): void	(EmptyIterator) El método next()
>rewind(): void	(EmptyIterator) El método rewind()
>valid(): false	(EmptyIterator) El método valid()
FilesystemIterator(string $directory, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS)	(new) Construye un nuevo iterador filesystem
>current(): string|SplFileInfo|FilesystemIterator	(FilesystemIterator) El fichero actual
>getFlags(): int	(FilesystemIterator) Obtiene el manejo de flags
>key(): string	(FilesystemIterator) Recupera la clave del fichero actual
>next(): void	(FilesystemIterator) Moverse al siguiente fichero
>rewind(): void	(FilesystemIterator) Rebobina hasta volver al inicio
>setFlags(int $flags): void	(FilesystemIterator) Establece las flags de manejo
>accept(): bool	(FilterIterator) Comprueba si el elemento actual del iterador es aceptable
FilterIterator(Iterator $iterator)	(new) Construye un filterIterator
>current(): mixed	(FilterIterator) Obtiene el valor del elemento actual
>key(): mixed	(FilterIterator) Obtiene la clave actual
>next(): void	(FilterIterator) Mueve el iterador a la siguiente posición
>rewind(): void	(FilterIterator) Rebobina el iterador
>valid(): bool	(FilterIterator) Comprueba si el elemento actual es válido
class_implements(object|string $object_or_class, bool $autoload = true): array|false	Devuelve las interfaces que son implementadas por la clase o interfaz dadas
class_parents(object|string $object_or_class, bool $autoload = true): array|false	Devuelve las clases padre de la clase dada.
class_uses(object|string $object_or_class, bool $autoload = true): array|false	Devolver los "traits" usados por la clase dada
iterator_apply(Traversable $iterator, callable $callback, array|null $args = null): int	Llamar a una función para cada elemento de un iterador
iterator_count(Traversable|array $iterator): int	Contar los elementos de un iterador
iterator_to_array(Traversable|array $iterator, bool $preserve_keys = true): array	Copiar el iterador a un array
spl_autoload_call(string $class): void	Probar todos las funciones registradas __autoload() para cargar la clase solicitada
spl_autoload_extensions(string|null $file_extensions = null): string	Registrar y devolver las extensiones de ficheros predeterminadas para spl_autoload
spl_autoload_functions(): array	Devolver todas las funciones __autoload() registradas
spl_autoload_register(callable|null $callback = null, bool $throw = true, bool $prepend = false): bool	Registrar las funciones dadas como implementación de __autoload()
spl_autoload_unregister(callable $callback): bool	Desregistrar una función dada como implementación de __autoload()
spl_autoload(string $class, string|null $file_extensions = null): void	Implementación predeterminada para __autoload()
spl_classes(): array	Devuelve las clases SPL disponibles
spl_object_hash(object $object): string	Devuelve el id del hash del objeto dado
spl_object_id(object $object): int	Return the integer object handle for given object
GlobIterator(string $pattern, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO)	(new) Construye un directorio usando glob
>count(): int	(GlobIterator) Obtiene el número de directorios y ficheros
InfiniteIterator(Iterator $iterator)	(new) Construye un InfiniteIterator
>next(): void	(InfiniteIterator) Mueve el iterador interno hacía adelante o se rebobina
IteratorIterator(Traversable $iterator, string|null $class = null)	(new) Crea un iterador a partir de un objeto traversable
>current(): mixed	(IteratorIterator) Obtener el valor actual
>getInnerIterator(): Iterator|null	(IteratorIterator) Devuelve el iterador interno
>key(): mixed	(IteratorIterator) Obtener la clave del elemento actual
>next(): void	(IteratorIterator) Avanzar al siguiente elemento
>rewind(): void	(IteratorIterator) Rebobinar al primer elemento
>valid(): bool	(IteratorIterator) Comprobar si el iterador es válido
LimitIterator(Iterator $iterator, int $offset = ?, int $limit = -1)	(new) Construye un LimitIterator
>current(): mixed	(LimitIterator) Obtiene el elemento actual
>getPosition(): int	(LimitIterator) Devuelve la posición actual
>key(): mixed	(LimitIterator) Obtiene la clave actual
>next(): void	(LimitIterator) Mueve el iterador a la siguiente posición
>rewind(): void	(LimitIterator) Rebobina el iterador a un punto específicado
>seek(int $offset): int	(LimitIterator) Mueve el apuntador interno a la posición dada
>valid(): bool	(LimitIterator) Comprobar si el elemento actual es válido
>attachIterator(Iterator $iterator, string|int|null $info = null): void	(MultipleIterator) Adjunta información al iterador
MultipleIterator(int $flags = MultipleIterator::MIT_NEED_ALL | MultipleIterator::MIT_KEYS_NUMERIC)	(new) Construye un nuevo MultipleIterator
>containsIterator(Iterator $iterator): bool	(MultipleIterator) Comprueba si un iterador está adjunto
>countIterators(): int	(MultipleIterator) Obtiene el número de instancias de iteradores adjuntos
>current(): array	(MultipleIterator) Obtiene las instancias registradas del iterador
>detachIterator(Iterator $iterator): void	(MultipleIterator) Desasocia un iterador
>getFlags(): int	(MultipleIterator) Obtiene información de las flags
>key(): array	(MultipleIterator) Obtiene las instancias registradas del iterador
>next(): void	(MultipleIterator) Mueve todas las instancias de iterador adjuntadas hacía la siguiente
>rewind(): void	(MultipleIterator) Rebobina todas las instancias de iterador adjuntadas
>setFlags(int $flags): void	(MultipleIterator) Establece las flags
>valid(): bool	(MultipleIterator) Comprueba la validez de los subiteradores
NoRewindIterator(Iterator $iterator)	(new) Construye un NoRewindIterator
>current(): mixed	(NoRewindIterator) Obtener el valor actual
>key(): mixed	(NoRewindIterator) Obtiene la clave actual
>next(): void	(NoRewindIterator) Avanza al siguiente elemento
>rewind(): void	(NoRewindIterator) Evita la operación de rebobinado en el iterador interno
>valid(): bool	(NoRewindIterator) Valida el iterador
>getInnerIterator(): Iterator|null	(OuterIterator) Devuelve el iterador interno para la entrada actual
>accept(): bool	(ParentIterator) Determina aceptabilidad
ParentIterator(RecursiveIterator $iterator)	(new) Construye un ParentIterator
>getChildren(): ParentIterator	(ParentIterator) Devuelve los iteradores hijo contenidos en un ParentIterator
>hasChildren(): bool	(ParentIterator) Comprueba si los iteradores internos del elemento actual tiene un hijos
>next(): void	(ParentIterator) Mueve el iterador a la siguiente posición
>rewind(): void	(ParentIterator) Rebobina el iterador
>getChildren(): RecursiveArrayIterator|null	(RecursiveArrayIterator) Devuelve un iterador para la entrada actual
>hasChildren(): bool	(RecursiveArrayIterator) Devuelve si la entrada actual es un array o un objeto
RecursiveCachingIterator(Iterator $iterator, int $flags = RecursiveCachingIterator::CALL_TOSTRING)	(new) Construct
>getChildren(): RecursiveCachingIterator|null	(RecursiveCachingIterator) Devuelve los iteradores internos hijos como un RecursiveCachingIterator
>hasChildren(): bool	(RecursiveCachingIterator) Comprueba si el elemento actual de un iterador interno tiene hijos
RecursiveCallbackFilterIterator(RecursiveIterator $iterator, callable $callback)	(new) Crear un RecursiveCallbackFilterIterator desde un RecursiveIterator
>getChildren(): RecursiveCallbackFilterIterator	(RecursiveCallbackFilterIterator) D3evuelve los iteradores internos hijos contenidos en un RecursiveCallbackFilterIterator
>hasChildren(): bool	(RecursiveCallbackFilterIterator) Comprueba si los iteradores internos del elemento actual tiene hijos
RecursiveDirectoryIterator(string $directory, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO)	(new) Construye un RecursiveDirectoryIterator
>getChildren(): RecursiveDirectoryIterator	(RecursiveDirectoryIterator) Devuelve un iterador de la entrada actual si se trata de un directorio
>getSubPath(): string	(RecursiveDirectoryIterator) Obtiene sub ruta
>getSubPathname(): string	(RecursiveDirectoryIterator) Obtiene la sub ruta y nombre
>hasChildren(bool $allowLinks = false): bool	(RecursiveDirectoryIterator) Devuelve si la entrada actual es un directorio y no '.' o '..'
>key(): string	(RecursiveDirectoryIterator) Devuelve la ruta y nombre de fichero del directorio
>next(): void	(RecursiveDirectoryIterator) Mover a la siguiente entrada
>rewind(): void	(RecursiveDirectoryIterator) Rebobina el directorio hasta el inicio
RecursiveFilterIterator(RecursiveIterator $iterator)	(new) Crea un RecursiveFilterIterator a partir de un RecursiveIterator
>getChildren(): RecursiveFilterIterator|null	(RecursiveFilterIterator) Devuelve los hijos del iterador interno contenidos en un RecursiveFilterIterator
>hasChildren(): bool	(RecursiveFilterIterator) Comprueba si el elemento actual del iterador interno tiene hijos
>getChildren(): RecursiveIterator|null	(RecursiveIterator) Devuelve un iterador para la entrada actual
>hasChildren(): bool	(RecursiveIterator) Retorna si un iterador puede ser creado para la entrada actual
>beginChildren(): void	(RecursiveIteratorIterator) Inicio del hijo
>beginIteration(): void	(RecursiveIteratorIterator) Inicio de la iteración
>callGetChildren(): RecursiveIterator|null	(RecursiveIteratorIterator) Obtener hijo
>callHasChildren(): bool	(RecursiveIteratorIterator) Comprueba si tiene hijos
RecursiveIteratorIterator(Traversable $iterator, int $mode = RecursiveIteratorIterator::LEAVES_ONLY, int $flags = ?)	(new) Crea una instancia de RecursiveIteratorIterator
>current(): mixed	(RecursiveIteratorIterator) Acceder al valor del elemento actual
>endChildren(): void	(RecursiveIteratorIterator) Final de los hijos
>endIteration(): void	(RecursiveIteratorIterator) Final de la iteración
>getDepth(): int	(RecursiveIteratorIterator) Obtener la profundidad actual de la iteración recursiva
>getInnerIterator(): RecursiveIterator	(RecursiveIteratorIterator) Obtener el iterador interno
>getMaxDepth(): int|false	(RecursiveIteratorIterator) Obtener el máximo de profundidad
>getSubIterator(int|null $level = null): RecursiveIterator|null	(RecursiveIteratorIterator) El subiterador activo actual
>key(): mixed	(RecursiveIteratorIterator) Acceder a la clave actual
>next(): void	(RecursiveIteratorIterator) Moverse al siguiente elemento
>nextElement(): void	(RecursiveIteratorIterator) Siguiente elemento
>rewind(): void	(RecursiveIteratorIterator) Rebobina el iterador al primer elemento al nivel superior del iterador interno
>setMaxDepth(int $maxDepth = -1): void	(RecursiveIteratorIterator) Establecer el máximo de profundidad
>valid(): bool	(RecursiveIteratorIterator) Comprueba si la posición actual es válida
RecursiveRegexIterator(RecursiveIterator $iterator, string $pattern, int $mode = RecursiveRegexIterator::MATCH, int $flags = ?, int $pregFlags = ?)	(new) Crea un nuevo RecursiveRegexIterator
>getChildren(): RecursiveRegexIterator	(RecursiveRegexIterator) Devuelve un iterador para la entrada actual
>hasChildren(): bool	(RecursiveRegexIterator) Retorna si un iterador puede ser obtenido de la entrada actual
>beginChildren(): void	(RecursiveTreeIterator) Inicio de los hijos
>beginIteration(): RecursiveIterator	(RecursiveTreeIterator) Inicio de la iteración
>callGetChildren(): RecursiveIterator	(RecursiveTreeIterator) Obtener los hijos
>callHasChildren(): bool	(RecursiveTreeIterator) Comprobar si tiene hijos
RecursiveTreeIterator(RecursiveIterator|IteratorAggregate $iterator, int $flags = RecursiveTreeIterator::BYPASS_KEY, int $cachingIteratorFlags = CachingIterator::CATCH_GET_CHILD, int $mode = RecursiveTreeIterator::SELF_FIRST)	(new) Construye un nuevo RecursiveTreeIterator
>current(): mixed	(RecursiveTreeIterator) Obtener el elemento actual
>endChildren(): void	(RecursiveTreeIterator) Final de los hijos
>endIteration(): void	(RecursiveTreeIterator) Fin de la iteración
>getEntry(): string	(RecursiveTreeIterator) obtener la entrada actual
>getPostfix(): string	(RecursiveTreeIterator) Obtiener el postfijo
>getPrefix(): string	(RecursiveTreeIterator) Obtener el prefijo
>key(): mixed	(RecursiveTreeIterator) Obtiene la clave del elemento actual
>next(): void	(RecursiveTreeIterator) Mover al siguiente elemento
>nextElement(): void	(RecursiveTreeIterator) Comprueba si hay un siguiente elemento
>rewind(): void	(RecursiveTreeIterator) Rebobina el iterador
>setPostfix(string $postfix): void	(RecursiveTreeIterator) Set postfix
>setPrefixPart(int $part, string $value): void	(RecursiveTreeIterator) Establece la parte de el prefijo
>valid(): bool	(RecursiveTreeIterator) Comprueba la validez
>accept(): bool	(RegexIterator) Obtener el estado de aceptación
RegexIterator(Iterator $iterator, string $pattern, int $mode = RegexIterator::MATCH, int $flags = ?, int $pregFlags = ?)	(new) Crea un nuevo RegexIterator
>getFlags(): int	(RegexIterator) Obtener flags
>getMode(): int	(RegexIterator) Devuelve el modo de operación
>getPregFlags(): int	(RegexIterator) Devuelve las flags de expresión regular
>getRegex(): string	(RegexIterator) Devuelve la expresión regular actual
>setFlags(int $flags): void	(RegexIterator) Establece las flags
>setMode(int $mode): void	(RegexIterator) Establece el modo de operación
>setPregFlags(int $pregFlags): void	(RegexIterator) Establece las flags de expresión regular
>seek(int $offset): void	(SeekableIterator) Mueve la posición del apuntador interno
>add(int $index, mixed $value): void	(SplDoublyLinkedList) Añadir/insertar un nuevo valor en el índice especificado
>bottom(): mixed	(SplDoublyLinkedList) Examinar el nodo del comienzo de la lista doblemente enlazada
>count(): int	(SplDoublyLinkedList) Cuenta el número de elementos de la lista doblemente enlazada
>current(): mixed	(SplDoublyLinkedList) Devuelve la entrada actual del array
>getIteratorMode(): int	(SplDoublyLinkedList) Devuelve el modo de iteración
>isEmpty(): bool	(SplDoublyLinkedList) Comprueba si la lista doblemente enlazada está vacía
>key(): int	(SplDoublyLinkedList) Devuelve el índice del nodo actual
>next(): void	(SplDoublyLinkedList) Avanza a la siguiente entrada
>offsetExists(int $index): bool	(SplDoublyLinkedList) Devuelve si el índice solicitado existe
>offsetGet(int $index): mixed	(SplDoublyLinkedList) Devuelve el valor del índice específicado
>offsetSet(int|null $index, mixed $value): void	(SplDoublyLinkedList) Establece el valor del índice específicado
>offsetUnset(int $index): void	(SplDoublyLinkedList) Borra el valor de el índice específicado
>pop(): mixed	(SplDoublyLinkedList) Extrae un nodo del final de la lista doblementa enlazada
>prev(): void	(SplDoublyLinkedList) Retrocede a la entrada anterior
>push(mixed $value): void	(SplDoublyLinkedList) Inserta un elemento al final de la lista doblemente enlazada
>rewind(): void	(SplDoublyLinkedList) Rebobina el iterador hasta el inicio
>serialize(): string	(SplDoublyLinkedList) Serializa el almacenamiento
>setIteratorMode(int $mode): int	(SplDoublyLinkedList) Establece el modo de iteración
>shift(): mixed	(SplDoublyLinkedList) Quita un nodo del inicio de la lista doblemente enlazada
>top(): mixed	(SplDoublyLinkedList) Examina el nodo del final de la lista doblemente enlazada
>unserialize(string $data): void	(SplDoublyLinkedList) Deserializa el almacenamiento
>unshift(mixed $value): void	(SplDoublyLinkedList) Antepone un elemento a la lista doblemente enlazada
>valid(): bool	(SplDoublyLinkedList) Comprueba si la lista doblemente enlazada contiene más nodos
SplFileInfo(string $filename)	(new) Construir un objeto nuevo SplFileInfo
>getATime(): int|false	(SplFileInfo) Obtiene la hora del último acceso al fichero
>getBasename(string $suffix = ""): string	(SplFileInfo) Obtiene el nombre base del fichero
>getCTime(): int|false	(SplFileInfo) Obtiene el i-nodo de el cambio de tiempo
>getExtension(): string	(SplFileInfo) Obtiene la extensión del fichero
>getFileInfo(string|null $class = null): SplFileInfo	(SplFileInfo) Obtiene un objeto SplFileInfo para el fichero
>getFilename(): string	(SplFileInfo) Obtiene el nombre del fichero
>getGroup(): int|false	(SplFileInfo) Obtiene el grupo de el fichero
>getInode(): int|false	(SplFileInfo) Obtiene el i-nodo de el fichero
>getLinkTarget(): string|false	(SplFileInfo) Obtiene el destino de un enlace del sistema de ficheros
>getMTime(): int|false	(SplFileInfo) Obtiene la fecha de la última modificación
>getOwner(): int|false	(SplFileInfo) Obtiene el dueño de el fichero
>getPath(): string	(SplFileInfo) Obtiene la ruta sin el nombre de fichero
>getPathInfo(string|null $class = null): SplFileInfo|null	(SplFileInfo) Obtiene un objeto SplFileInfo para la ruta
>getPathname(): string	(SplFileInfo) Obtiene la ruta de un fichero
>getPerms(): int|false	(SplFileInfo) Obtiene los permisos del fichero
>getRealPath(): string|false	(SplFileInfo) Obtiene la ruta absoluta al fichero
>getSize(): int|false	(SplFileInfo) Obtiene el tamaño de el fichero
>getType(): string|false	(SplFileInfo) Obtiene el tipo del fichero
>isDir(): bool	(SplFileInfo) Dice si el fichero es un directorio
>isExecutable(): bool	(SplFileInfo) Comprueba si el fichero es ejecutable
>isFile(): bool	(SplFileInfo) Dice is el objeto hace referencia a un fichero normal
>isLink(): bool	(SplFileInfo) Comprueba si el fichero es un link
>isReadable(): bool	(SplFileInfo) Comprueba si el fichero se puede leer
>isWritable(): bool	(SplFileInfo) Comprueba si se puede escribir en el fichero
>openFile(string $mode = "r", bool $useIncludePath = false, resource|null $context = null): SplFileObject	(SplFileInfo) Obtiene un objeto SplFileObject para el fichero
>setFileClass(string $class = SplFileObject::class): void	(SplFileInfo) Establece la clase empleada con SplFileInfo::openFile
>setInfoClass(string $class = SplFileInfo::class): void	(SplFileInfo) Establece la clase empleada con SplFileInfo::getFileInfo y SplFileInfo::getPathInfo
>__toString(): string	(SplFileInfo) Devuelve la ruta de el fichero como un string
SplFileObject(string $filename, string $mode = "r", bool $useIncludePath = false, resource|null $context = null)	(new) Construye un nuevo objeto de fichero
>current(): string|array|false	(SplFileObject) Recupera la línea actual del fichero
>eof(): bool	(SplFileObject) Comprueba si es el final del fichero
>fflush(): bool	(SplFileObject) Vuelca el resultado en el fichero
>fgetc(): string|false	(SplFileObject) Obtiene un caracter del fichero
>fgetcsv(string $separator = ",", string $enclosure = "\"", string $escape = "\\"): array|false	(SplFileObject) Obtiene la línea del archivo y analiza como campos CSV
>fgets(): string	(SplFileObject) Obtener la línea de el fichero
>fgetss(string $allowable_tags = ?): string	(SplFileObject) Obtiene la línea de el fichero y elimina etiquetas HTML
>flock(int $operation, int $wouldBlock = null): bool	(SplFileObject) Bloqueo de ficheros portable
>fpassthru(): int	(SplFileObject) Imprimir todos los datos restantes en un apuntador de fichero
>fputcsv(array $fields, string $separator = ",", string $enclosure = "\"", string $escape = "\\", string $eol = "\n"): int|false	(SplFileObject) Escribir un array de campos como una línea CSV
>fread(int $length): string|false	(SplFileObject) Leer un fichero
>fscanf(string $format, mixed ...$vars): array|int|null	(SplFileObject) Analiza la entrada de un fichero de acuerdo a un formato
>fseek(int $offset, int $whence = SEEK_SET): int	(SplFileObject) Busca una posiciónn
>fstat(): array	(SplFileObject) Obtiene información de el fichero
>ftell(): int|false	(SplFileObject) Devuelve la posición del fichero actual
>ftruncate(int $size): bool	(SplFileObject) Trunca el archivo a una longitud dada
>fwrite(string $data, int $length = ?): int|false	(SplFileObject) Escribe en el fichero
>getChildren(): null	(SplFileObject) Ningún propósito
>getCsvControl(): array	(SplFileObject) Obtiene el carácter delimitador, el circundante y de escape para campos CSV
>getCurrentLine()	(SplFileObject) Alias of SplFileObject::fgets
>getFlags(): int	(SplFileObject) Obtener las flags de SplFileObject
>getMaxLineLen(): int	(SplFileObject) Obtener la longitud máxima de línea
>hasChildren(): false	(SplFileObject) SplFileObject no tiene hijos
>key(): int	(SplFileObject) Obtiene el número de línea
>next(): void	(SplFileObject) Leer la siguiente línea
>rewind(): void	(SplFileObject) Rebobina el fichero hasta la primera línea
>seek(int $line): void	(SplFileObject) Mueve el apuntador interno a la línea específicada
>setCsvControl(string $separator = ",", string $enclosure = "\"", string $escape = "\\"): void	(SplFileObject) Establece el carácter delimitador, el circundante y el de escape para campos CSV
>setFlags(int $flags): void	(SplFileObject) Establece flags para el SplFileObject
>setMaxLineLen(int $maxLength): void	(SplFileObject) Establecer la longitud máxima de una línea
>__toString(): string	(SplFileObject) Alias de SplFileObject::fgets
>valid(): bool	(SplFileObject) Comprueba si el final del finchero ha sido alcanzado
SplFixedArray(int $size = ?)	(new) Construye un nuevo SplFixedArray
>count(): int	(SplFixedArray) Devuelve el tamaño del array
>current(): mixed	(SplFixedArray) Devuelve la entrada del array actual
SplFixedArray::fromArray(array $array, bool $preserveKeys = true): SplFixedArray	Importa un array PHP en una instancia SplFixedArray
>getIterator(): Iterator	(SplFixedArray) Retrieve the iterator to go through the array
>getSize(): int	(SplFixedArray) Obtiene el tamaño de el array
>jsonSerialize(): array	(SplFixedArray) Returns a representation that can be converted to JSON
>key(): int	(SplFixedArray) Devuelve los índices del array actual
>next(): void	(SplFixedArray) Mover a la siguiente entrada
>offsetExists(int $index): bool	(SplFixedArray) Devuelve si el índice solicitado existe
>offsetGet(int $index): mixed	(SplFixedArray) Devuelve el valor en el índice específicado
>offsetSet(int $index, mixed $value): void	(SplFixedArray) Establece un nuevo valor para el índice específicado
>offsetUnset(int $index): void	(SplFixedArray) Destruye el valor en el índice específicado
>rewind(): void	(SplFixedArray) Rebobina el iterador hasta el inicio
>__serialize(): array	(SplFixedArray) Serializes the SplFixedArray object
>setSize(int $size): true	(SplFixedArray) Cambiar el tamaño de un array
>toArray(): array	(SplFixedArray) Devuelve un array PHP de un array fijo
>__unserialize(array $data): void	(SplFixedArray) Deserializes the $data parameter into an SplFixedArray object
>valid(): bool	(SplFixedArray) Comprueba si el array contiene más elementos
>__wakeup(): void	(SplFixedArray) Reinicializar el array después de ser deserializado
>compare(mixed $value1, mixed $value2): int	(SplHeap) Compara elementos con el fin de colocarlos correctamente en el montón en la parte de arriba
>count(): int	(SplHeap) Cuenta el número de elementos en el montón
>current(): mixed	(SplHeap) Devuelve el nodo actual señalado por el iterador
>extract(): mixed	(SplHeap) Extrae un nodo de la parte superior del montón
>insert(mixed $value): true	(SplHeap) Inserta un elemento en el montón
>isCorrupted(): bool	(SplHeap) Tells if the heap is in a corrupted state
>isEmpty(): bool	(SplHeap) Comprueba si el montón actual está vacío
>key(): int	(SplHeap) Devuelve el índice de el nodo actual
>next(): void	(SplHeap) Avanzar al siguiente nodo
>recoverFromCorruption(): true	(SplHeap) Recuperarse de un estado dañado y permitir un mayor número de acciones en el montón
>rewind(): void	(SplHeap) Rebobina el iterador al comienzo
>top(): mixed	(SplHeap) Observar el nodo desde el comienzo del montón
>valid(): bool	(SplHeap) Comprueba si el montón contiene más nodos
>compare(mixed $value1, mixed $value2): int	(SplMaxHeap) Compara elementos con el fin de colocarlos correctamente en el montón en la parte de arriba
>compare(mixed $value1, mixed $value2): int	(SplMinHeap) Comparar elementos con el fin de colocarlos correctamente en el montón em la parte de arriba
>addAll(SplObjectStorage $storage): int	(SplObjectStorage) Agrega todos los objetos de otro almacenamiento
>attach(object $object, mixed $info = null): void	(SplObjectStorage) Agrega un objeto en el almacenamiento
>contains(object $object): bool	(SplObjectStorage) Comprueba si el almacenamiento contiene un objeto específico
>count(int $mode = COUNT_NORMAL): int	(SplObjectStorage) Devuelve el número de objetos en el almacenamiento
>current(): object	(SplObjectStorage) Devuelve el objeto actual
>detach(object $object): void	(SplObjectStorage) Quita un object de el almacenamiento
>getHash(object $object): string	(SplObjectStorage) Calcular un identificador único (hash) para los objetos contenidos
>getInfo(): mixed	(SplObjectStorage) Devuelve los datos asociados con la entrada del iterador actual
>key(): int	(SplObjectStorage) Devuelve el índice en el que se encuentra el iterador actualmente
>next(): void	(SplObjectStorage) Mover a la siguiente entrada
>offsetExists(object $object): bool	(SplObjectStorage) Comprueba si un objeto existe en el almacenamiento
>offsetGet(object $object): mixed	(SplObjectStorage) Devuelve los datos asociados con un object
>offsetSet(object $object, mixed $info = null): void	(SplObjectStorage) Asocia datos a un objeto en el almacenamiento
>offsetUnset(object $object): void	(SplObjectStorage) Quita un objeto de el almacenamiento
>removeAll(SplObjectStorage $storage): int	(SplObjectStorage) Remover objetos contenidos en otro almacenamiento de el almacenamiento actual
>removeAllExcept(SplObjectStorage $storage): int	(SplObjectStorage) Remover objetos excepto los contenidos en otro almacenamiento del almacenamiento actual
>rewind(): void	(SplObjectStorage) Rebobina el iterador a el primer elemento de el almacenamiento
>seek(int $offset): void	(SplObjectStorage) Seeks iterator to a position
>serialize(): string	(SplObjectStorage) Serializa el almacenamiento
>setInfo(mixed $info): void	(SplObjectStorage) Establece los datos asociados con el iterador de la entrada actual
>unserialize(string $data): void	(SplObjectStorage) Deserializa un almacenamiento desde su representación string
>valid(): bool	(SplObjectStorage) Comprobar si la entrada actual del iterador es válida
>update(SplSubject $subject): void	(SplObserver) Recibe actualizaciones de sujeto
>compare(mixed $priority1, mixed $priority2): int	(SplPriorityQueue) Comparar las prioridades con el fin de colocar los elementos correctamente en el montón, mientras que tamizar arriba
>count(): int	(SplPriorityQueue) Cuenta el número de elementos en la cola
>current(): mixed	(SplPriorityQueue) Volver nodo actual que apunta el iterador
>extract(): mixed	(SplPriorityQueue) Extrae un nodo de la parte superior del montículo y desplaza hacia arriba
>getExtractFlags(): int	(SplPriorityQueue) Get the flags of extraction
>insert(mixed $value, mixed $priority): true	(SplPriorityQueue) Inserta un elemento en la cola en la parte de arriba
>isCorrupted(): bool	(SplPriorityQueue) Tells if the priority queue is in a corrupted state
>isEmpty(): bool	(SplPriorityQueue) Comprueba si la cola está vacía
>key(): int	(SplPriorityQueue) Devuelve el índice del nodo actual
>next(): void	(SplPriorityQueue) Pasar a la siguiente nodo
>recoverFromCorruption(): true	(SplPriorityQueue) Recuperar desde la condición corrupta y permitir acciones más en la cola
>rewind(): void	(SplPriorityQueue) Rebobinar iterador de vuelta al inicio (no-op)
>setExtractFlags(int $flags): int	(SplPriorityQueue) Establece el modo de extracción
>top(): mixed	(SplPriorityQueue) Mira en el nodo de la parte superior de la cola
>valid(): bool	(SplPriorityQueue) Comprobar si la cola contiene más nodos
>dequeue(): mixed	(SplQueue) Quita un nodo de la cola
>enqueue(mixed $value): void	(SplQueue) Añade un elemento a la cola
>attach(SplObserver $observer): void	(SplSubject) Adjuntar un SplObserver
>detach(SplObserver $observer): void	(SplSubject) Separa un observador
>notify(): void	(SplSubject) Notificar un observador
SplTempFileObject(int $maxMemory = 2 * 1024 * 1024)	(new) Construir un nuevo objeto de fichero temporal
BadFunctionCallException()	(new) Lanza una excepción si la llamada de retorno hace referencia a una función no definida o faltan algunos de los argumentos
BadMethodCallException()	(new) Lanza una excepción si la llamada de retorno hace referencia a una función no definida o faltan algunos de los argumentos
DomainException()	(new) Excepción lanzada si un valor no se adhiere a un dominio definido de datos válidos
EmptyIterator()	(new) La clase EmptyIterator para un iterador vacío
InvalidArgumentException()	(new) Excepción lanzada si un argumento no es del tipo previsto
LengthException()	(new) Lanza una excepción si el valor longitud no es válido
LogicException()	(new) Excepción que representa un error en la lógica del programa
OuterIterator()	(new) Las clases que implementan OuterIterator pueden ser usadas para iterar sobre iteradores
OutOfBoundsException()	(new) Lanza una excepción si el valor no es una clave válida
OutOfRangeException()	(new) Lanza una excepción cuando se solicita un índice ilegal
OverflowException()	(new) Lanza una excepción cuando se agrega un elemento en un contenedor lleno
RangeException()	(new) Excepción que se produce para indicar los errores de rango durante la ejecución del programa
RecursiveArrayIterator()	(new) Este iterador permite destruir y modificar valores y claves mientras se iteran arrays y objetos de la misma manera que con ArrayIterator
RecursiveIterator()	(new) Las clases que implementan RecursiveIterator pueden ser usadas para iterar sobre iteradores de forma recursiva
RuntimeException()	(new) Lanza una excepción si hay un error que sólo se puede encontrar en tiempo de ejecución
SeekableIterator()	(new) El iterador Seekable
SplDoublyLinkedList()	(new) La clase SplDoublyLinkedList proporciona las principales funcionalidades de una lista doblemente enlazada
SplHeap()	(new) La clase SplHeap proporciona la funcionalidad principal de un montículo
SplMaxHeap()	(new) La clase SplMaxHeap proporciona la funcionalidad principal de un montículo, manteniendo el máximo en la parte superior
SplMinHeap()	(new) La clase SplMinHeap proporciona la funcionalidad principal de un montículo, manteniendo el mínimo en la parte superior
SplObjectStorage()	(new) La clase SplObjectStorage proporciona una correspondencia de objetos de datos o, ignorando los datos, un conjunto de objetos
SplObserver()	(new) La interfaz SplObserver se utiliza junto con SplSubject para implementar el patrón de diseño observador
SplPriorityQueue()	(new) La clase SplPriorityQueue proporciona la funcionalidad principal de una cola de prioridad, implementada mediante un montículo máximo
SplQueue()	(new) La clase SplQueue proporciona las principales funcionalidades de una cola implementada usando una lista doblemente enlazada al estableciendo el modo del iterador a SplDoublyLinkedList::IT_MODE_FIFO
SplStack()	(new) La clase SplStack proporciona la funcionalidad principal de una pila implementada mediante una lista doblemente enlazada estableciendo el modo iterador a SplDoublyLinkedList::IT_MODE_LIFO
SplSubject()	(new) El interfaz SplSubject es usado en conjunto con SplObserver para implementar el patrón de diseño Observer
UnderflowException()	(new) Lanza una excepción cuando se lleva a cabo una operación no válida o un contenedor vacío, tal como eliminar un elemento
UnexpectedValueException()	(new) Lanza una excepción si un valor no coincide con un grupo de valores
stream_bucket_append(resource $brigade, StreamBucket $bucket): void	Añade un recipiente a una cadena de recipientes
stream_bucket_make_writeable(resource $brigade): StreamBucket|null	Devuelve un objeto recipiente desde una cadena de recipientes para operarar con él
stream_bucket_new(resource $stream, string $buffer): StreamBucket	Crear un nuevo recipiente para usarlo en el flujo actual
stream_bucket_prepend(resource $brigade, StreamBucket $bucket): void	Añade un recipiente al principio de una cadena de recipientes
stream_context_create(array|null $options = null, array|null $params = null): resource	Crear un contexto de flujo
stream_context_get_default(array|null $options = null): resource	Recuperar el contexto de flujo predeterminado
stream_context_get_options(resource $stream_or_context): array	Recuperar las opciones para un flujo/envoltura/contexto
stream_context_get_params(resource $context): array	Recuperar los parámetros de un contexto
stream_context_set_default(array $options): resource	Establecer el contexto de flujo predeterminado
stream_context_set_option(resource $stream_or_context, string $wrapper, string $option, mixed $value): bool	Establece una opción para un flujo/envoltura/contexto
stream_context_set_options(resource $context, array $options): true	Define las opciones en el contexto especificado
stream_context_set_params(resource $context, array $params): true	Establecer parámetros para un flujo/envoltura/contexto
stream_copy_to_stream(resource $from, resource $to, int|null $length = null, int $offset = ?): int|false	Copia información desde un flujo a otro
stream_filter_append(resource $stream, string $filtername, int $read_write = ?, mixed $params = ?): resource	Enlaza un filtro a un flujo
stream_filter_prepend(resource $stream, string $filtername, int $read_write = ?, mixed $params = ?): resource	Adjunta un filtro a un flujo
stream_filter_register(string $filter_name, string $class): bool	Registrar un filtro de flujo definido por el usuario
stream_filter_remove(resource $stream_filter): bool	Elimina un filtro de un flujo
stream_get_contents(resource $stream, int|null $length = null, int $offset = -1): string|false	Transfiere el resto de un flujo a una cadena
stream_get_filters(): array	Recuperar la lista de los filtros registrados
stream_get_line(resource $stream, int $length, string $ending = ""): string|false	Obtiene una línea del recurso de flujo hasta un delimitador dado
stream_get_meta_data(resource $stream): array	Recuperar meta-información o de cabecera de punteros a flujos/archivo
stream_get_transports(): array	Recuperar la lista de transportes de socket registrados
stream_get_wrappers(): array	Recupera la lista de los flujos registrados
stream_is_local(resource|string $stream): bool	Comprueba si un flujo es un flujo local
stream_isatty(resource $stream): bool	Verifica si un flujo es un TTY
(int $notification_code, int $severity, string|null $message, int $message_code, int $bytes_transferred, int $bytes_max): void	Una función de retrollamada para el parámetro de contexto de notificación
stream_register_wrapper()	Alias of stream_wrapper_register
stream_resolve_include_path(string $filename): string|false	Resuelve el nombre de archivo en la ruta incluida
stream_select(array|null $read, array|null $write, array|null $except, int|null $seconds, int|null $microseconds = null): int|false	Ejecuta el equivalente de la llamada al sistema select() sobre las matrices de flujos dadas con un tiempo de espera especificado por tv_sec y tv_usec
stream_set_blocking(resource $stream, bool $enable): bool	Establecer el modo bloqueo/no-bloqueo en un flujo
stream_set_chunk_size(resource $stream, int $size): int	Establecer el tamaño de trozo de flujo
stream_set_read_buffer(resource $stream, int $size): int	Establece el búfer de lectura de archivos en el flujo dado
stream_set_timeout(resource $stream, int $seconds, int $microseconds = ?): bool	Establecer un perido de tiempo de espera en un flujo
stream_set_write_buffer(resource $stream, int $size): int	Establece el búfer para escritura de ficheros en el flujo dado
stream_socket_accept(resource $socket, float|null $timeout = null, string $peer_name = null): resource|false	Acepta una conexión sobre un socket creado por stream_socket_server
stream_socket_client(string $address, int $error_code = null, string $error_message = null, float|null $timeout = null, int $flags = STREAM_CLIENT_CONNECT, resource|null $context = null): resource|false	Abrir una conexión de socket de dominio de Internet o Unix
stream_socket_enable_crypto(resource $stream, bool $enable, int|null $crypto_method = null, resource|null $session_stream = null): int|bool	Activa/desactiva la encriptación en un socket ya conectado
stream_socket_get_name(resource $socket, bool $remote): string|false	Recuperar el nombre de los sockets locales o remotos
stream_socket_pair(int $domain, int $type, int $protocol): array|false	Crea un pareja de flujos de socket conectados e indistinguibles
stream_socket_recvfrom(resource $socket, int $length, int $flags = ?, string|null $address = null): string|false	Recibir información de un socket, conectado o no
stream_socket_sendto(resource $socket, string $data, int $flags = ?, string $address = ""): int|false	Envía un mensaje a un socket, ya esté conectado o no
stream_socket_server(string $address, int $error_code = null, string $error_message = null, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN, resource|null $context = null): resource|false	Crear un socket de servidor de dominio de Internet o de Unix
stream_socket_shutdown(resource $stream, int $mode): bool	Cerrar una conexión full-duplex
stream_supports_lock(resource $stream): bool	Indica si el flujo soporta bloqueo
stream_wrapper_register(string $protocol, string $class, int $flags = ?): bool	Registra una envoltura de URL implementada como una clase de PHP
stream_wrapper_restore(string $protocol): bool	Restablece una envoltura incluida que se dejó de registrar previamente
stream_wrapper_unregister(string $protocol): bool	Deja de registrar una envoltura de URL
>filter(resource $in, resource $out, int $consumed, bool $closing): int	(php_user_filter) Llamado cuando se aplica un filtro
>onClose(): void	(php_user_filter) Llamado cuando se cierra el filtro
>onCreate(): bool	(php_user_filter) Llamado cuando se crea el filtro
streamWrapper()	(new) Construye una nueva envoltura de flujo
>dir_closedir(): bool	(streamWrapper) Cerrar un gestor de directorio
>dir_opendir(string $path, int $options): bool	(streamWrapper) Abrir un gestor de directorio
>dir_readdir(): string	(streamWrapper) Lee un archivo en un directorio
>dir_rewinddir(): bool	(streamWrapper) Rebobina el gestor de directorio
>mkdir(string $path, int $mode, int $options): bool	(streamWrapper) Crear un directorio
>rename(string $path_from, string $path_to): bool	(streamWrapper) Renombra un archivo o directorio
>rmdir(string $path, int $options): bool	(streamWrapper) Elimina un directorio
>stream_cast(int $cast_as): resource	(streamWrapper) Lee el recurso subyacente de flujo
>stream_close(): void	(streamWrapper) Cerrar un recurso
>stream_eof(): bool	(streamWrapper) Comprueba si un puntero a un archivo está en el final del archivo (EOF)
>stream_flush(): bool	(streamWrapper) Vuelca la salida
>stream_lock(int $operation): bool	(streamWrapper) Bloqueo de archivos asesorado
>stream_metadata(string $path, int $option, mixed $value): bool	(streamWrapper) Cambiar los metadatos del flujo
>stream_open(string $path, string $mode, int $options, string|null $opened_path): bool	(streamWrapper) Abre un archivo o una URL
>stream_read(int $count): string|false	(streamWrapper) Leer un flujo
>stream_seek(int $offset, int $whence): bool	(streamWrapper) Busca la ubicación específica en un flujo
>stream_set_option(int $option, int $arg1, int $arg2): bool	(streamWrapper) Cambiar las opciones del flujo
>stream_stat(): array|false	(streamWrapper) Recuperar información sobre un recurso de archivo
>stream_tell(): int	(streamWrapper) Recuperar la posición actual de un flujo
>stream_truncate(int $new_size): bool	(streamWrapper) Truncar un flujo
>stream_write(string $data): int	(streamWrapper) Escribir en un flujo
>unlink(string $path): bool	(streamWrapper) Borrar un archivo
>url_stat(string $path, int $flags): array|false	(streamWrapper) Recuperar información sobre un archivo
php_user_filter()	(new) Los hijos de esta clase son pasados a stream_filter_register
StreamBucket()	(new) Un cubo de flujo (stream bucket) es una parte de un flujo que puede ser extraída de las brigadas de cubos
addcslashes(string $string, string $characters): string	Escapa una cadena al estilo de C
addslashes(string $string): string	Añade barras invertidas en un string
bin2hex(string $string): string	Convierte datos binarios en su representación hexadecimal
chop()	Alias of rtrim
chr(int $codepoint): string	Devuelve un caracter específico
chunk_split(string $string, int $length = 76, string $separator = "\r\n"): string	Divide una cadena en trozos más pequeños
convert_cyr_string(string $str, string $from, string $to): string	Convierte de un juego de caracteres cirílico a otro juego de caracteres cirílico
convert_uudecode(string $string): string|false	Descodifica una cadena codificada mediante uuencode
convert_uuencode(string $string): string	Codificar mediante uuencode una cadena
count_chars(string $string, int $mode = ?): array|string	Devuelve información sobre los caracteres usados en una cadena
crc32(string $string): int	Calcula el polinomio crc32 de una cadena
crypt(string $string, string $salt): string	Hash de cadenas de un sólo sentido
echo(string ...$expressions): void	Muestra una o más cadenas
explode(string $separator, string $string, int $limit = PHP_INT_MAX): array	Divide un string en varios string
fprintf(resource $stream, string $format, mixed ...$values): int	Escribir una cadena con formato a una secuencia
get_html_translation_table(int $table = HTML_SPECIALCHARS, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401, string $encoding = "UTF-8"): array	Devuelve la tabla de traducción utilizada por htmlspecialchars y htmlentities
hebrev(string $string, int $max_chars_per_line = ?): string	Convierte texto hebreo lógico a texto visual
hebrevc(string $hebrew_text, int $max_chars_per_line = ?): string	Convertir texto de hebreo lógico a texto visual con conversión de línea nueva
hex2bin(string $string): string|false	Decodifica una cadena binaria codificada hexadecimalmente
html_entity_decode(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401, string|null $encoding = null): string	Convierte todas las entidades HTML a sus caracteres correspondientes
htmlentities(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401, string|null $encoding = null, bool $double_encode = true): string	Convierte todos los caracteres aplicables a entidades HTML
htmlspecialchars_decode(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401): string	Convierte entidades HTML especiales de nuevo en caracteres
htmlspecialchars(string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401, string|null $encoding = null, bool $double_encode = true): string	Convierte caracteres especiales en entidades HTML
implode(string $separator, array $array): string	Une elementos de un array en un string
implode(array $array): string	Une elementos de un array en un string
implode(array $array, string $separator): string	Une elementos de un array en un string
join()	Alias of implode
lcfirst(string $string): string	Pasa a minúscula el primer caracter de un string
levenshtein(string $string1, string $string2, int $insertion_cost = 1, int $replacement_cost = 1, int $deletion_cost = 1): int	Cálculo de la distancia Levenshtein entre dos strings
localeconv(): array	Obtener información sobre el formato numérico
ltrim(string $string, string $characters = " \n\r\t\v\x00"): string	Retira espacios en blanco (u otros caracteres) del inicio de un string
md5_file(string $filename, bool $binary = false): string|false	Calcula el resumen criptográfico md5 de un archivo dado
md5(string $string, bool $binary = false): string	Calcula el 'hash' md5 de un string
metaphone(string $string, int $max_phonemes = ?): string	Calcula la clave metaphone de un string
money_format(string $format, float $number): string	Da formato a un número como un string de moneda
nl_langinfo(int $item): string|false	Consulta información sobre el idioma y la configuración regional
nl2br(string $string, bool $use_xhtml = true): string	Inserta saltos de línea HTML antes de todas las nuevas líneas de un string
number_format(float $num, int $decimals = ?, string|null $decimal_separator = ".", string|null $thousands_separator = ","): string	Formatear un número con los millares agrupados
ord(string $character): int	Convierte el primer byte de un string a un valor entre 0 y 255
parse_str(string $string, array $result): void	Analiza un string de una variable
print(string $expression): int	Mostrar una cadena
printf(string $format, mixed ...$values): int	Imprimir una cadena con formato
quoted_printable_decode(string $string): string	Convierte un string quoted-printable en un string de 8 bits
quoted_printable_encode(string $string): string	Convierte un string de 8 bits en un string quoted-printable
quotemeta(string $string): string	Escapa meta caracteres
rtrim(string $string, string $characters = " \n\r\t\v\x00"): string	Retira los espacios en blanco (u otros caracteres) del final de un string
setlocale(int $category, string $locales, string ...$rest): string|false	Establecer la información del localismo
setlocale(int $category, array $locale_array): string|false	Establecer la información del localismo
sha1_file(string $filename, bool $binary = false): string|false	Calcula el hash sha1 de un archivo
sha1(string $string, bool $binary = false): string	Calcula el 'hash' sha1 de un string
similar_text(string $string1, string $string2, float $percent = null): int	Calcula la similitud entre dos strings
soundex(string $string): string	Calcula la clave soundex de un string
sprintf(string $format, mixed ...$values): string	Devuelve un string formateado
sscanf(string $string, string $format, mixed ...$vars): array|int|null	Interpreta un string de entrada de acuerdo con un formato
str_contains(string $haystack, string $needle): bool	Determina si una cadena contiene un substring dado
str_decrement(string $string): string	Decrementa un string alfanumérico
str_ends_with(string $haystack, string $needle): bool	Determina si una cadena termina con un substring dado
str_getcsv(string $string, string $separator = ",", string $enclosure = "\"", string $escape = "\\"): array	Convierte un string con formato CSV a un array
str_increment(string $string): string	Incrementa un string alfanumérica
str_ireplace(array|string $search, array|string $replace, string|array $subject, int $count = null): string|array	Versión insensible a mayúsculas y minúsculas de str_replace
str_pad(string $string, int $length, string $pad_string = " ", int $pad_type = STR_PAD_RIGHT): string	Rellena un string hasta una longitud determinada con otro string
str_repeat(string $string, int $times): string	Repite un string
str_replace(array|string $search, array|string $replace, string|array $subject, int $count = null): string|array	Reemplaza todas las apariciones del string buscado con el string de reemplazo
str_rot13(string $string): string	Realizar la transformación rot13 sobre una cadena
str_shuffle(string $string): string	Reordena aleatoriamente una cadena
str_split(string $string, int $length = 1): array	Convierte un string en un array
str_starts_with(string $haystack, string $needle): bool	Determina si un string comienza con un substring dado
str_word_count(string $string, int $format = ?, string|null $characters = null): array|int	Devuelve información sobre las palabras utilizadas en un string
strcasecmp(string $string1, string $string2): int	Comparación de string segura a nivel binario e insensible a mayúsculas y minúsculas
strchr()	Alias of strstr
strcmp(string $string1, string $string2): int	Comparación de string segura a nivel binario
strcoll(string $string1, string $string2): int	Comparación de cadenas basada en la localidad
strcspn(string $string, string $characters, int $offset = ?, int|null $length = null): int	Averiguar la longitud del segmento inicial que no coincida con una máscara
strip_tags(string $string, array|string|null $allowed_tags = null): string	Retira las etiquetas HTML y PHP de un string
stripcslashes(string $string): string	Desmarca la cadena marcada con addcslashes
stripos(string $haystack, string $needle, int $offset = ?): int|false	Encuentra la posición de la primera aparición de un substring en un string sin considerar mayúsculas ni minúsculas
stripslashes(string $string): string	Quita las barras de un string con comillas escapadas
stristr(string $haystack, string $needle, bool $before_needle = false): string|false	strstr insensible a mayúsculas y minúsculas
strlen(string $string): int	Obtiene la longitud de un string
strnatcasecmp(string $string1, string $string2): int	Comparación de strings, insensible a mayúsculas y minúsculas, utilizando un algoritmo de "orden natural"
strnatcmp(string $string1, string $string2): int	Comparación de strings utilizando un algoritmo de "orden natural"
strncasecmp(string $string1, string $string2, int $length): int	Comparación de los primeros n caracteres de cadenas, segura con material binario e insensible a mayúsculas y minúsculas
strncmp(string $string1, string $string2, int $length): int	Comparación segura a nivel binario de los primeros n caracteres entre strings
strpbrk(string $string, string $characters): string|false	Buscar una cadena por cualquiera de los elementos de un conjunto de caracteres
strpos(string $haystack, string $needle, int $offset = ?): int|false	Encuentra la posición de la primera ocurrencia de un substring en un string
strrchr(string $haystack, string $needle, bool $before_needle = false): string|false	Encuentra la última aparición de un caracter en un string
strrev(string $string): string	Invierte un string
strripos(string $haystack, string $needle, int $offset = ?): int|false	Encuentra la posición de la última aparición de un substring insensible a mayúsculas y minúsculas en un string
strrpos(string $haystack, string $needle, int $offset = ?): int|false	Encuentra la posición de la última aparición de un substring en un string
strspn(string $string, string $characters, int $offset = ?, int|null $length = null): int	Averigua la longitud del segmento inicial de un string que consista únicamente en caracteres contenidos dentro de una máscara dada
strstr(string $haystack, string $needle, bool $before_needle = false): string|false	Encuentra la primera aparición de un string
strtok(string $string, string $token): string|false	Tokeniza string
strtok(string $token): string|false	Tokeniza string
strtolower(string $string): string	Convierte un string a minúsculas
strtoupper(string $string): string	Convierte un string a mayúsculas
strtr(string $string, string $from, string $to): string	Convierte caracteres o reemplaza substrings
strtr(string $string, array $replace_pairs): string	Convierte caracteres o reemplaza substrings
substr_compare(string $haystack, string $needle, int $offset, int|null $length = null, bool $case_insensitive = false): int	Comparación segura a nivel binario de dos o más strings desde un índice hasta una longitud de caracteres dada
substr_count(string $haystack, string $needle, int $offset = ?, int|null $length = null): int	Cuenta el número de apariciones del substring
substr_replace(array|string $string, array|string $replace, array|int $offset, array|int|null $length = null): string|array	Reemplaza el texto dentro de una porción de un string
substr(string $string, int $offset, int|null $length = null): string	Devuelve parte de un string
trim(string $string, string $characters = " \n\r\t\v\x00"): string	Elimina espacio en blanco (u otro tipo de caracteres) del inicio y el final de la cadena
ucfirst(string $string): string	Convierte el primer caracter de una cadena a mayúsculas
ucwords(string $string, string $separators = " \t\r\n\f\v"): string	Convierte a mayúsculas el primer caracter de cada palabra de una cadena
utf8_decode(string $string): string	Convierte un string desde UTF-8 a ISO-8859-1, sustituyendo los caracteres no válidos o no representables
utf8_encode(string $string): string	Convierte una cadena de ISO-8859-1 a UTF-8
vfprintf(resource $stream, string $format, array $values): int	Escribe un string con formato en un flujo
vprintf(string $format, array $values): int	Muestra una cadena con formato
vsprintf(string $format, array $values): string	Devuelve una cadena con formato
wordwrap(string $string, int $width = 75, string $break = "\n", bool $cut_long_words = false): string	Ajusta un string hasta un número dado de caracteres
base64_decode(string $string, bool $strict = false): string|false	Decodifica datos codificados con MIME base64
base64_encode(string $string): string	Codifica datos con MIME base64
get_headers(string $url, bool $associative = false, resource|null $context = null): array|false	Recupera todas las cabeceras enviadas por el servidor en respuesta a una petición HTTP
get_meta_tags(string $filename, bool $use_include_path = false): array|false	Extrae todo el contenido de atributos de etiquetas meta de un archivo y devuelve un array
http_build_query(array|object $data, string $numeric_prefix = "", string|null $arg_separator = null, int $encoding_type = PHP_QUERY_RFC1738): string	Generar una cadena de consulta codificada estilo URL
parse_url(string $url, int $component = -1): int|string|array|null|false	Analiza un URL y devuelve sus componentes
rawurldecode(string $string): string	Decodificar cadenas codificadas estilo URL
rawurlencode(string $string): string	Codificar estilo URL de acuerdo al RFC 3986
urldecode(string $string): string	Decodifica una cadena cifrada como URL
urlencode(string $string): string	Codifica como URL una cadena
boolval(mixed $value): bool	Obtener el valor booleano de una variable
debug_zval_dump(mixed $value, mixed ...$values): void	Vuelca a la salida una cadena con la representación de un valor interno de zend
doubleval()	Alias of floatval
empty(mixed $var): bool	Determina si una variable está vacía
floatval(mixed $value): float	Obtener el valor flotante de una variable
get_debug_type(mixed $value): string	Devuelve el nombre del tipo de la variable de una manera adecuada para el depurado
get_defined_vars(): array	Devuelve una matriz con todas las variables definidas
get_resource_id(resource $resource): int	Devuelve un entero que identifica un recurso
get_resource_type(resource $resource): string	Devuelve el tipo de recurso
gettype(mixed $value): string	Obtener el tipo de una variable
intval(mixed $value, int $base = 10): int	Obtiene el valor entero de una variable
is_array(mixed $value): bool	Comprueba si una variable es un array
is_bool(mixed $value): bool	Comprueba si una variable es de tipo booleano
is_callable(mixed $value, bool $syntax_only = false, string $callable_name = null): bool	Verificar que los contenidos de una variable puedan ser llamados como una función
is_countable(mixed $value): bool	Verifica que el contenido de una variable es un valor contable
is_double()	Alias of is_float
is_float(mixed $value): bool	Comprueba si el tipo de una variable es float
is_int(mixed $value): bool	Comprueba si el tipo de una variable es integer
is_integer()	Alias of is_int
is_iterable(mixed $value): bool	Verifica que el contenido de una variable es un valor iterable
is_long()	Alias of is_int
is_null(mixed $value): bool	Comprueba si una variable es null
is_numeric(mixed $value): bool	Comprueba si una variable es un número o un string numérico
is_object(mixed $value): bool	Comprueba si una variable es un objeto
is_real()	Alias of is_float
is_resource(mixed $value): bool	Comprueba si una variable es un recurso
is_scalar(mixed $value): bool	Comprueba si una variable es escalar
is_string(mixed $value): bool	Comprueba si una variable es de tipo string
isset(mixed $var, mixed ...$vars): bool	Determina si una variable está definida y no es null
print_r(mixed $value, bool $return = false): string|true	Imprime información legible para humanos sobre una variable
serialize(mixed $value): string	Genera una representación apta para el almacenamiento de un valor
settype(mixed $var, string $type): bool	Establece el tipo de una variable
strval(mixed $value): string	Obtiene el valor de cadena de una variable
unserialize(string $data, array $options = []): mixed	Crea un valor PHP a partir de una representación almacenada
unset(mixed $var, mixed ...$vars): void	Destruye una o más variables especificadas
var_dump(mixed $value, mixed ...$values): void	Muestra información sobre una variable
var_export(mixed $value, bool $return = false): string|null	Imprime o devuelve una representación string de una variable analizable
apache_child_terminate(): void	Finaliza un proceso de Apache después de esta llamada
apache_get_modules(): array	Obtiene una lista de los módulos cargados en el servidor Apache
apache_get_version(): string|false	Obtiene la versión del servidor Apache
apache_getenv(string $variable, bool $walk_to_top = false): string|false	Obtiene una variable del entorno subprocess_env de Apache
apache_lookup_uri(string $filename): object|false	Realiza una petición parcial por la URI especificada y devuelve toda la información sobre ella
apache_note(string $note_name, string|null $note_value = null): string|false	Obtiene y establece las notas de petición de apache
apache_request_headers(): array	Obtiene todas las cabeceras HTTP
apache_response_headers(): array	Obtiene todas las cabeceras HTTP de respuesta
apache_setenv(string $variable, string $value, bool $walk_to_top = false): bool	Establece una variable subprocess_env de Apache
getallheaders(): array	Recupera todas las cabeceras de petición HTTP
virtual(string $uri): bool	Realiza una sub-petición de Apache
>add(BcMath\Number|string|int $num, int|null $scale = null): BcMath\Number	(BcMath\Number) Adds an arbitrary precision number
>ceil(): BcMath\Number	(BcMath\Number) Rounds up an arbitrary precision number
>compare(BcMath\Number|string|int $num, int|null $scale = null): int	(BcMath\Number) Compares two arbitrary precision numbers
BcMath\Number(string|int $num)	(new) Creates a BcMath\Number object
>div(BcMath\Number|string|int $num, int|null $scale = null): BcMath\Number	(BcMath\Number) Divides by an arbitrary precision number
>divmod(BcMath\Number|string|int $num, int|null $scale = null): array	(BcMath\Number) Gets the quotient and modulus of an arbitrary precision number
>floor(): BcMath\Number	(BcMath\Number) Rounds down an arbitrary precision number
>mod(BcMath\Number|string|int $num, int|null $scale = null): BcMath\Number	(BcMath\Number) Gets the modulus of an arbitrary precision number
>mul(BcMath\Number|string|int $num, int|null $scale = null): BcMath\Number	(BcMath\Number) Multiplies an arbitrary precision number
>pow(BcMath\Number|string|int $exponent, int|null $scale = null): BcMath\Number	(BcMath\Number) Raises an arbitrary precision number
>powmod(BcMath\Number|string|int $exponent, BcMath\Number|string|int $modulus, int|null $scale = null): BcMath\Number	(BcMath\Number) Raises an arbitrary precision number, reduced by a specified modulus
>round(int $precision = ?, RoundingMode $mode = RoundingMode::HalfAwayFromZero): BcMath\Number	(BcMath\Number) Rounds an arbitrary precision number
>__serialize(): array	(BcMath\Number) Serializes a BcMath\Number object
>sqrt(int|null $scale = null): BcMath\Number	(BcMath\Number) Gets the square root of an arbitrary precision number
>sub(BcMath\Number|string|int $num, int|null $scale = null): BcMath\Number	(BcMath\Number) Subtracts an arbitrary precision number
>__toString(): string	(BcMath\Number) Converts BcMath\Number to string
>__unserialize(array $data): void	(BcMath\Number) Deserializes a data parameter into a BcMath\Number object
bcadd(string $num1, string $num2, int|null $scale = null): string	Suma dos números de precisión arbitrária
bcceil(string $num): string	Round up arbitrary precision number
bccomp(string $num1, string $num2, int|null $scale = null): int	Compara dos números de precisión arbitraria
bcdiv(string $num1, string $num2, int|null $scale = null): string	Divide dos números de precisión arbitraria
bcdivmod(string $num1, string $num2, int|null $scale = null): array	Get the quotient and modulus of an arbitrary precision number
bcfloor(string $num): string	Round down arbitrary precision number
bcmod(string $num1, string $num2, int|null $scale = null): string	Obtiene el módulo de un número de precisión arbitraria
bcmul(string $num1, string $num2, int|null $scale = null): string	Multiplica dos números de precisión arbitraria
bcpow(string $num, string $exponent, int|null $scale = null): string	Elevar un número de precisión arbitraria a otro
bcpowmod(string $num, string $exponent, string $modulus, int|null $scale = null): string	Eleva un número de precisión arbitraria a otro, reducido por un módulo especificado
bcround(string $num, int $precision = ?, RoundingMode $mode = RoundingMode::HalfAwayFromZero): string	Round arbitrary precision number
bcscale(int $scale): int	Establece los parametros de scale por defecto para todas las funciones matemáticas de bc
bcscale(null $scale = null): int	Establece los parametros de scale por defecto para todas las funciones matemáticas de bc
bcsqrt(string $num, int|null $scale = null): string	Obtiene la raiz cuadrada de un número de precisión arbitraria
bcsub(string $num1, string $num2, int|null $scale = null): string	Resta un número de precisión arbitraria de otro
cal_days_in_month(int $calendar, int $month, int $year): int	Devolver el número de días de un mes para un año y un calendario dados
cal_from_jd(int $julian_day, int $calendar): array	Convierte de una Fecha Juliana a un calendario soportado
cal_info(int $calendar = -1): array	Devuelve información sobre un calendario en particular
cal_to_jd(int $calendar, int $month, int $day, int $year): int	Convertir un calendario soportado a la Fecha Juliana
easter_date(int|null $year = null, int $mode = CAL_EASTER_DEFAULT): int	Obtener la fecha Unix para la medianoche de Pascua de un año dado
easter_days(int|null $year = null, int $mode = CAL_EASTER_DEFAULT): int	Obtener el número de días despúes del 21 de marzo en el cuál cae Pascua para un año dado
frenchtojd(int $month, int $day, int $year): int	Convierte una fecha del Calendario Republicano Francés a una fecha Juliana
gregoriantojd(int $month, int $day, int $year): int	Convierte una fecha Gregoriana en Fecha Juliana
jddayofweek(int $julian_day, int $mode = CAL_DOW_DAYNO): int|string	Devuelve el día de la semana
jdmonthname(int $julian_day, int $mode): string	Devuelve el nombre de un mes
jdtofrench(int $julian_day): string	Convierte una Fecha Juliana al Calendario Republicano Francés
jdtogregorian(int $julian_day): string	Convierte una Fecha Juliana en una fecha Gregoriana
jdtojewish(int $julian_day, bool $hebrew = false, int $flags = ?): string	Convierte una Fecha Juliana a una fecha del Calendario Judío
jdtojulian(int $julian_day): string	Convierte una Fecha Juliana a una fecha del Calendario Juliano
jdtounix(int $julian_day): int	Convierte una Fecha Juliana a una fecha Unix
jewishtojd(int $month, int $day, int $year): int	Convierte una fecha del Calendario Judío a una Fecha Juliana
juliantojd(int $month, int $day, int $year): int	Convierte una fecha del Calendario Juliano a una Fecha Juliana
unixtojd(int|null $timestamp = null): int|false	Convertir una fecha Unix en una Fecha Juliana
com(string $module_name, array|string|null $server_name = null, int $codepage = CP_ACP, string $typelib = "")	(new) com class constructor
COMPersistHelper(variant|null $variant = null)	(new) Construct a COMPersistHelper object
>GetCurFileName(): string|false	(COMPersistHelper) Get current filename
>GetMaxStreamSize(): int	(COMPersistHelper) Get maximum stream size
>InitNew(): bool	(COMPersistHelper) Initialize object to default state
>LoadFromFile(string $filename, int $flags = ?): bool	(COMPersistHelper) Load object from file
>LoadFromStream(resource $stream): bool	(COMPersistHelper) Load object from stream
>SaveToFile(string|null $filename, bool $remember = true): bool	(COMPersistHelper) Save object to file
>SaveToStream(resource $stream): bool	(COMPersistHelper) Save object to stream
dotnet(string $assembly_name, string $datatype_name, int $codepage = CP_ACP)	(new) dotnet class constructor
com_create_guid(): string|false	Generate a globally unique identifier (GUID)
com_event_sink(variant $variant, object $sink_object, array|string|null $sink_interface = null): bool	Connect events from a COM object to a PHP object
com_get_active_object(string $prog_id, int|null $codepage = null): variant	Returns a handle to an already running instance of a COM object
com_load_typelib(string $typelib, bool $case_insensitive = true): bool	Loads a Typelib
com_message_pump(int $timeout_milliseconds = ?): bool	Process COM messages, sleeping for up to timeoutms milliseconds
com_print_typeinfo(variant|string $variant, string|null $dispatch_interface = null, bool $display_sink = false): bool	Print out a PHP class definition for a dispatchable interface
variant_abs(mixed $value): variant	Returns the absolute value of a variant
variant_add(mixed $left, mixed $right): variant	"Adds" two variant values together and returns the result
variant_and(mixed $left, mixed $right): variant	Performs a bitwise AND operation between two variants
variant_cast(variant $variant, int $type): variant	Convert a variant into a new variant object of another type
variant_cat(mixed $left, mixed $right): variant	Concatenates two variant values together and returns the result
variant_cmp(mixed $left, mixed $right, int $locale_id = LOCALE_SYSTEM_DEFAULT, int $flags = ?): int	Compares two variants
variant_date_from_timestamp(int $timestamp): variant	Returns a variant date representation of a Unix timestamp
variant_date_to_timestamp(variant $variant): int|null	Converts a variant date/time value to Unix timestamp
variant_div(mixed $left, mixed $right): variant	Returns the result from dividing two variants
variant_eqv(mixed $left, mixed $right): variant	Performs a bitwise equivalence on two variants
variant_fix(mixed $value): variant	Returns the integer portion of a variant
variant_get_type(variant $variant): int	Returns the type of a variant object
variant_idiv(mixed $left, mixed $right): variant	Converts variants to integers and then returns the result from dividing them
variant_imp(mixed $left, mixed $right): variant	Performs a bitwise implication on two variants
variant_int(mixed $value): variant	Returns the integer portion of a variant
variant_mod(mixed $left, mixed $right): variant	Divides two variants and returns only the remainder
variant_mul(mixed $left, mixed $right): variant	Multiplies the values of the two variants
variant_neg(mixed $value): variant	Performs logical negation on a variant
variant_not(mixed $value): variant	Performs bitwise not negation on a variant
variant_or(mixed $left, mixed $right): variant	Performs a logical disjunction on two variants
variant_pow(mixed $left, mixed $right): variant	Returns the result of performing the power function with two variants
variant_round(mixed $value, int $decimals): variant|null	Rounds a variant to the specified number of decimal places
variant_set_type(variant $variant, int $type): void	Convert a variant into another type "in-place"
variant_set(variant $variant, mixed $value): void	Assigns a new value for a variant object
variant_sub(mixed $left, mixed $right): variant	Subtracts the value of the right variant from the left variant value
variant_xor(mixed $left, mixed $right): variant	Performs a logical exclusion on two variants
variant(mixed $value = null, int $type = VT_EMPTY, int $codepage = CP_ACP)	(new) variant class constructor
com_exception()	(new) 
com_safearray_proxy()	(new) com_safearray_proxy is an internal class used for resolving multi-dimensional array accesses on SafeArray types
ctype_alnum(mixed $text): bool	Chequear posibles caracteres alfanuméricos
ctype_alpha(mixed $text): bool	Chequear posibles caracteres alfabéticos
ctype_cntrl(mixed $text): bool	Chequear posibles caracteres de control
ctype_digit(mixed $text): bool	Chequear posibles caracteres numéricos
ctype_graph(mixed $text): bool	Chequear posibles caracteres imprimibles, con excepción de los espacios
ctype_lower(mixed $text): bool	Chequear posibles caracteres en minúscula
ctype_print(mixed $text): bool	Chequear posibles caracteres imprimibles
ctype_punct(mixed $text): bool	Chequear posibles caracteres imprimibles que no son ni espacios en blanco ni caracteres alfanuméricos
ctype_space(mixed $text): bool	Chequear posibles caracteres de espacio en blanco
ctype_upper(mixed $text): bool	Chequear posibles caracteres en mayúscula
ctype_xdigit(mixed $text): bool	Chequear posibles caracteres que representen un dígito hexadecimal
dba_close(Dba\Connection $dba): void	Cerrar una base de datos DBA
dba_delete(string|array $key, Dba\Connection $dba): bool	Elimina una entrada DBA especificada por clave
dba_exists(string|array $key, Dba\Connection $dba): bool	Verificar si la clave existe
dba_fetch(string|array $key, Dba\Connection $dba, int $skip = ?): string|false	Recuperar datos especificados por clave
dba_fetch(string|array $key, int $skip, resource $dba): string	Recuperar datos especificados por clave
dba_firstkey(Dba\Connection $dba): string|false	Recuperar la primera clave
dba_handlers(bool $full_info = false): array	Listar todos los gestores disponibles
dba_insert(string|array $key, string $value, Dba\Connection $dba): bool	Insertar entrada
dba_key_split(string|false|null $key): array|false	Separa una clave en representación de cadena en representación de array
dba_list(): array	Listar todos los archivos de base de datos abiertos
dba_nextkey(Dba\Connection $dba): string|false	Recuperar la siguiente clave
dba_open(string $path, string $mode, string|null $handler = null, int $permission = 0644, int $map_size = ?, int|null $flags = null): Dba\Connection|false	Abrir una base de datos
dba_optimize(Dba\Connection $dba): bool	Optimizar base de datos
dba_popen(string $path, string $mode, string|null $handler = null, int $permission = 0644, int $map_size = ?, int|null $flags = null): Dba\Connection|false	Abrir una base de datos de forma persistente
dba_replace(string|array $key, string $value, Dba\Connection $dba): bool	Reemplazar o insertar una entrada
dba_sync(Dba\Connection $dba): bool	Sincronizar base de datos
Dba\Connection()	(new) A fully opaque class which replaces a dba resource as of PHP 8
exif_imagetype(string $filename): int|false	Determinar el tipo de una imagen
exif_read_data(resource|string $file, string|null $required_sections = null, bool $as_arrays = false, bool $read_thumbnail = false): array|false	Lee las cabeceras EXIF desde un JPEG o un TIFF
exif_tagname(int $index): string|false	Obtener el nombre de la cabecera de un índice
exif_thumbnail(resource|string $file, int $width = null, int $height = null, int $image_type = null): string|false	Recuperar la miniatura embebida de una imagen TIFF o JPEG
read_exif_data()	Alias of exif_read_data
>getAlignment(): int	(FFI\CType) Description
>getArrayElementType(): FFI\CType	(FFI\CType) Description
>getArrayLength(): int	(FFI\CType) Description
>getAttributes(): int	(FFI\CType) Description
>getEnumKind(): int	(FFI\CType) Description
>getFuncABI(): int	(FFI\CType) Description
>getFuncParameterCount(): int	(FFI\CType) Retrieve the count of parameters of a function type
>getFuncParameterType(int $index): FFI\CType	(FFI\CType) Description
>getFuncReturnType(): FFI\CType	(FFI\CType) Description
>getKind(): int	(FFI\CType) Description
>getName(): string	(FFI\CType) Description
>getPointerType(): FFI\CType	(FFI\CType) Description
>getSize(): int	(FFI\CType) Description
>getStructFieldNames(): array	(FFI\CType) Description
>getStructFieldOffset(string $name): int	(FFI\CType) Description
>getStructFieldType(string $name): FFI\CType	(FFI\CType) Description
FFI::addr(FFI\CData $ptr): FFI\CData	Creates an unmanaged pointer to C data
FFI::alignof(FFI\CData|FFI\CType $ptr): int	Gets the alignment
FFI::arrayType(FFI\CType $type, array $dimensions): FFI\CType	Dynamically constructs a new C array type
>cast(FFI\CType|string $type, FFI\CData|int|float|bool|null $ptr): FFI\CData|null	(FFI) Performs a C type cast
FFI::cdef(string $code = "", string|null $lib = null): FFI	Creates a new FFI object
FFI::free(FFI\CData $ptr): void	Releases an unmanaged data structure
FFI::isNull(FFI\CData $ptr): bool	Checks whether a FFI\CData is a null pointer
FFI::load(string $filename): FFI|null	Loads C declarations from a C header file
FFI::memcmp(string|FFI\CData $ptr1, string|FFI\CData $ptr2, int $size): int	Compares memory areas
FFI::memcpy(FFI\CData $to, FFI\CData|string $from, int $size): void	Copies one memory area to another
FFI::memset(FFI\CData $ptr, int $value, int $size): void	Fills a memory area
FFI(FFI\CType|string $type, bool $owned = true, bool $persistent = false): FFI\CData|null	(new) Creates a C data structure
FFI::scope(string $name): FFI	Instantiates an FFI object with C declarations parsed during preloading
FFI::sizeof(FFI\CData|FFI\CType $ptr): int	Gets the size of C data or types
FFI::string(FFI\CData $ptr, int|null $size = null): string	Creates a PHP string from a memory area
>type(string $type): FFI\CType|null	(FFI) Creates an FFI\CType object from a C declaration
FFI::typeof(FFI\CData $ptr): FFI\CType	Gets the FFI\CType of FFI\CData
FFI\CData()	(new) FFI\CData objects can be used in a number of ways as a regular PHP data: C data of scalar types can be read and assigned via the $cdata property, e
FFI\CType()	(new) 
FFI\Exception()	(new) 
FFI\ParserException()	(new) 
FFI()	(new) Objects of this class are created by the factory methods FFI::cdef, FFI::load or FFI::scope
>buffer(string $string, int $flags = FILEINFO_NONE, resource|null $context = null): string|false	(finfo) Alias finfo_buffer()
finfo(int $flags = FILEINFO_NONE, string|null $magic_database = null)	(new) Alias finfo_open
>file(string $filename, int $flags = FILEINFO_NONE, resource|null $context = null): string|false	(finfo) Alias finfo_file()
>set_flags(int $flags): true	(finfo) Alias finfo_set_flags()
finfo_buffer(finfo $finfo, string $string, int $flags = FILEINFO_NONE, resource|null $context = null): string|false	Devuelve información sobre el búfer en formato string
>buffer(string $string, int $flags = FILEINFO_NONE, resource|null $context = null): string|false	(finfo) Devuelve información sobre el búfer en formato string
finfo_close(finfo $finfo): bool	Cierra el recurso fileinfo
finfo_file(finfo $finfo, string $filename, int $flags = FILEINFO_NONE, resource|null $context = null): string|false	Devuelve información sobre un fichero
>file(string $filename, int $flags = FILEINFO_NONE, resource|null $context = null): string|false	(finfo) Devuelve información sobre un fichero
finfo_open(int $flags = FILEINFO_NONE, string|null $magic_database = null): finfo|false	Crea un nuevo recurso fileinfo
finfo_set_flags(finfo $finfo, int $flags): true	Opciones de configuración de libmagic
>set_flags(int $flags): true	(finfo) Opciones de configuración de libmagic
mime_content_type(resource|string $filename): string|false	Detecta el MIME Content-type para un fichero
filter_has_var(int $input_type, string $var_name): bool	Comprueba si existe una variable de un tipo concreto
filter_id(string $name): int|false	Devuelve el ID del filtro al que pertenece un filtro con nombre
filter_input_array(int $type, array|int $options = FILTER_DEFAULT, bool $add_empty = true): array|false|null	Obtiene variables externas y opcionalmente las filtra
filter_input(int $type, string $var_name, int $filter = FILTER_DEFAULT, array|int $options = ?): mixed	Toma una variable externa concreta por su nombre y opcionalmente la filtra
filter_list(): array	Devuelve una lista de todos los filtros soportados
filter_var_array(array $array, array|int $options = FILTER_DEFAULT, bool $add_empty = true): array|false|null	Obtiene múltiple variables y opcionalmente las filtra
filter_var(mixed $value, int $filter = FILTER_DEFAULT, array|int $options = ?): mixed	Filtra una variable con el filtro que se indique
ftp_alloc(FTP\Connection $ftp, int $size, string $response = null): bool	Reserva espacio para que un archivo sea cargado
ftp_append(FTP\Connection $ftp, string $remote_filename, string $local_filename, int $mode = FTP_BINARY): bool	Append the contents of a file to another file on the FTP server
ftp_cdup(FTP\Connection $ftp): bool	Vuelve al directorio padre
ftp_chdir(FTP\Connection $ftp, string $directory): bool	Cambia el directorio actual en un servidor FTP
ftp_chmod(FTP\Connection $ftp, int $permissions, string $filename): int|false	Establecer permisos en un archivo via FTP
ftp_close(FTP\Connection $ftp): bool	Cierra una conexión FTP
ftp_connect(string $hostname, int $port = 21, int $timeout = 90): FTP\Connection|false	Abre una conexión FTP
ftp_delete(FTP\Connection $ftp, string $filename): bool	Elimina un archivo en el servidor FTP
ftp_exec(FTP\Connection $ftp, string $command): bool	Solicita la ejecución de un comando en el servidor FTP
ftp_fget(FTP\Connection $ftp, resource $stream, string $remote_filename, int $mode = FTP_BINARY, int $offset = ?): bool	Descarga un archivo desde el servidor FTP y lo guarda en un archivo abierto
ftp_fput(FTP\Connection $ftp, string $remote_filename, resource $stream, int $mode = FTP_BINARY, int $offset = ?): bool	Carga un archivo abierto en el servidor FTP
ftp_get_option(FTP\Connection $ftp, int $option): int|bool	Recupera varios comportamientos de tiempo de ejecución de la secuencia FTP actual
ftp_get(FTP\Connection $ftp, string $local_filename, string $remote_filename, int $mode = FTP_BINARY, int $offset = ?): bool	Descarga un archivo desde el servidor FTP
ftp_login(FTP\Connection $ftp, string $username, string $password): bool	Inicia sesión en una conexión FTP
ftp_mdtm(FTP\Connection $ftp, string $filename): int	Devuelve el tiempo de la última modificación del archivo dado
ftp_mkdir(FTP\Connection $ftp, string $directory): string|false	Crea un directorio
ftp_mlsd(FTP\Connection $ftp, string $directory): array|false	Returns a list of files in the given directory
ftp_nb_continue(FTP\Connection $ftp): int	Continúa recuperando/enviando un archivo (modo no-bloqueo)
ftp_nb_fget(FTP\Connection $ftp, resource $stream, string $remote_filename, int $mode = FTP_BINARY, int $offset = ?): int	Recupera un archivo desde el servidor FTP y lo escribe en un archivo abierto (modo no-bloqueo)
ftp_nb_fput(FTP\Connection $ftp, string $remote_filename, resource $stream, int $mode = FTP_BINARY, int $offset = ?): int	Almacena un archivo desde un archivo abierto en el servidor FTP (modo no-bloqueo)
ftp_nb_get(FTP\Connection $ftp, string $local_filename, string $remote_filename, int $mode = FTP_BINARY, int $offset = ?): int|false	Recupera un archivo desde el servidor FTP y lo escribe en un archivo local (modo no-bloqueo)
ftp_nb_put(FTP\Connection $ftp, string $remote_filename, string $local_filename, int $mode = FTP_BINARY, int $offset = ?): int|false	Almacena un archivo en el servidor FTP (modo no-bloqueo)
ftp_nlist(FTP\Connection $ftp, string $directory): array|false	Devuelve una lista de los archivos que se encuentran en el directorio especificado
ftp_pasv(FTP\Connection $ftp, bool $enable): bool	Activa o desactiva el modo pasivo
ftp_put(FTP\Connection $ftp, string $remote_filename, string $local_filename, int $mode = FTP_BINARY, int $offset = ?): bool	Carga un archivo al servidor FTP
ftp_pwd(FTP\Connection $ftp): string|false	Devuelve el nombre del directorio actual
ftp_quit()	Alias of ftp_close
ftp_raw(FTP\Connection $ftp, string $command): array|null	Envía un comando arbitrario a un servidor FTP
ftp_rawlist(FTP\Connection $ftp, string $directory, bool $recursive = false): array|false	Devuelve una lista detallada de archivos en el directorio especificado
ftp_rename(FTP\Connection $ftp, string $from, string $to): bool	Renombra un archivo o un directorio en el servidor FTP
ftp_rmdir(FTP\Connection $ftp, string $directory): bool	Elimina un directorio
ftp_set_option(FTP\Connection $ftp, int $option, int|bool $value): bool	Establecer varias opciones FTP de tiempo de ejecución
ftp_site(FTP\Connection $ftp, string $command): bool	Envía un comando SITE al servidor
ftp_size(FTP\Connection $ftp, string $filename): int	Devuelve el tamaño del archivo dado
ftp_ssl_connect(string $hostname, int $port = 21, int $timeout = 90): FTP\Connection|false	Abre una conexión segura SSL-FTP
ftp_systype(FTP\Connection $ftp): string|false	Devuelve el identificador del tipo de sistema del servidor FTP remoto
FTP\Connection()	(new) A fully opaque class which replaces a ftp resource as of PHP 8
iconv_get_encoding(string $type = "all"): array|string|false	Recupera variables de configuración interna de la extensión iconv
iconv_mime_decode_headers(string $headers, int $mode = ?, string|null $encoding = null): array|false	Decodifica varios campos de cabeceras MIME en la misma llamada
iconv_mime_decode(string $string, int $mode = ?, string|null $encoding = null): string|false	Decodifica un campo de la cabecera MIME
iconv_mime_encode(string $field_name, string $field_value, array $options = []): string|false	Compone un campo de cabecera MIME
iconv_set_encoding(string $type, string $encoding): bool	Establece las opciones para la conversión de codificación de caracteres
iconv_strlen(string $string, string|null $encoding = null): int|false	Retorna el número de caracteres de un string
iconv_strpos(string $haystack, string $needle, int $offset = ?, string|null $encoding = null): int|false	Encuentra la posición de la primera aparición de una aguja en un pajar
iconv_strrpos(string $haystack, string $needle, string|null $encoding = null): int|false	Busca la última aparición de un string
iconv_substr(string $string, int $offset, int|null $length = null, string|null $encoding = null): string|false	Elimina parte del string
iconv(string $from_encoding, string $to_encoding, string $string): string|false	Convierte un string a la codificación de caracteres indicada
ob_iconv_handler(string $contents, int $status): string	Convierte la codificación de caracteres al manejador del buffer de salida
gd_info(): array	Reunir información acerca de la biblioteca GD instalada actualmente
getimagesize(string $filename, array $image_info = null): array|false	Obtener el tamaño de una imagen
getimagesizefromstring(string $string, array $image_info = null): array|false	Obtener el tamaño de una imagen desde una cadena
image_type_to_extension(int $image_type, bool $include_dot = true): string|false	Obtiene la extensión de un tipo de imagen
image_type_to_mime_type(int $image_type): string	Obtiene el tipo Mime de un tipo de imagen devuelto por getimagesize, exif_read_data, exif_thumbnail, exif_imagetype
image2wbmp(resource $image, string $filename = ?, int $foreground = ?): bool	gd.image.output
imageaffine(GdImage $image, array $affine, array|null $clip = null): GdImage|false	Devuelve la imagen que contiene la imagen origen transformada afín, usando un área de recorte opcional
imageaffinematrixconcat(array $matrix1, array $matrix2): array|false	Concatena dos matrices (como al hacer muchas opciones de una vez)
imageaffinematrixget(int $type, array|float $options): array|false	Devuelve la imagen que contiene la imagen fuente transformada afín, usando un área de recorte opcional
imagealphablending(GdImage $image, bool $enable): bool	Establece el modo de mezcla para una imagen
imageantialias(GdImage $image, bool $enable): bool	Permitir o no el uso de funciones antialias
imagearc(GdImage $image, int $center_x, int $center_y, int $width, int $height, int $start_angle, int $end_angle, int $color): bool	Dibujar un arco
imageavif(GdImage $image, resource|string|null $file = null, int $quality = -1, int $speed = -1): bool	gd.image.output
imagebmp(GdImage $image, resource|string|null $file = null, bool $compressed = true): bool	Output a BMP image to browser or file
imagechar(GdImage $image, GdFont|int $font, int $x, int $y, string $char, int $color): bool	Dibujar un carácter horizontalmente
imagecharup(GdImage $image, GdFont|int $font, int $x, int $y, string $char, int $color): bool	Dibujar un carácter verticalmente
imagecolorallocate(GdImage $image, int $red, int $green, int $blue): int|false	Asigna un color para una imagen
imagecolorallocatealpha(GdImage $image, int $red, int $green, int $blue, int $alpha): int|false	Asignar un color para una imagen
imagecolorat(GdImage $image, int $x, int $y): int|false	Obtener el índice del color de un píxel
imagecolorclosest(GdImage $image, int $red, int $green, int $blue): int	Obtener el índice del color más próximo al color especificado
imagecolorclosestalpha(GdImage $image, int $red, int $green, int $blue, int $alpha): int	Obtener el índice del color más próximo al color + alpha especificado
imagecolorclosesthwb(GdImage $image, int $red, int $green, int $blue): int	Obtener el índice del color que tiene el tono, blancura y negrura
imagecolordeallocate(GdImage $image, int $color): bool	Desasignar un color de una imagen
imagecolorexact(GdImage $image, int $red, int $green, int $blue): int	Obtener el índice del color especificado
imagecolorexactalpha(GdImage $image, int $red, int $green, int $blue, int $alpha): int	Obtener el índice del color + alpha especificado
imagecolormatch(GdImage $image1, GdImage $image2): bool	Hacer que los colores de la versión de la paleta de una imagen coincidan más estrechamente con la versión de color verdadero
imagecolorresolve(GdImage $image, int $red, int $green, int $blue): int	Obtener el índice del color especificado o su alternativa más próxima posible
imagecolorresolvealpha(GdImage $image, int $red, int $green, int $blue, int $alpha): int	Obtener el índice del color + alpha especificado o su alternativa más próxima posible
imagecolorset(GdImage $image, int $color, int $red, int $green, int $blue, int $alpha = ?): false|null	Establecer el color para el índice de paleta especificada
imagecolorsforindex(GdImage $image, int $color): array	Obtener los colores de un índice
imagecolorstotal(GdImage $image): int	Averiguar el número de colores de la paleta de una imagen
imagecolortransparent(GdImage $image, int|null $color = null): int	Definir un color como transparente
imageconvolution(GdImage $image, array $matrix, float $divisor, float $offset): bool	Aplicar una matriz de convolución de 3x3, usando coeficiente e índice
imagecopy(GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_width, int $src_height): bool	Copiar parte de una imagen
imagecopymerge(GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_width, int $src_height, int $pct): bool	Copiar y fusionar parte de una imagen
imagecopymergegray(GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_width, int $src_height, int $pct): bool	Copiar y fusionar parte de una imagen con escala de grises
imagecopyresampled(GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_width, int $dst_height, int $src_width, int $src_height): bool	Copia y cambia el tamaño de parte de una imagen redimensionándola
imagecopyresized(GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_width, int $dst_height, int $src_width, int $src_height): bool	Copia y cambia el tamaño de parte de una imagen
imagecreate(int $width, int $height): GdImage|false	Crea una nueva imagen basada en paleta
imagecreatefromavif(string $filename): GdImage|false	gd.image.new
imagecreatefrombmp(string $filename): GdImage|false	gd.image.new
imagecreatefromgd(string $filename): GdImage|false	Crear una imagen nueva desde un fichero GD o un URL
imagecreatefromgd2(string $filename): GdImage|false	Crear una imagen nueva desde un fichero GD2 o un URL
imagecreatefromgd2part(string $filename, int $x, int $y, int $width, int $height): GdImage|false	Crear una nueva imagen desde una parte dada de un fichero GD2 o un URL
imagecreatefromgif(string $filename): GdImage|false	gd.image.new
imagecreatefromjpeg(string $filename): GdImage|false	gd.image.new
imagecreatefrompng(string $filename): GdImage|false	gd.image.new
imagecreatefromstring(string $data): GdImage|false	Crear una imagen nueva desde el flujo de imagen de la cadena
imagecreatefromtga(string $filename): GdImage|false	gd.image.new
imagecreatefromwbmp(string $filename): GdImage|false	gd.image.new
imagecreatefromwebp(string $filename): GdImage|false	gd.image.new
imagecreatefromxbm(string $filename): GdImage|false	gd.image.new
imagecreatefromxpm(string $filename): GdImage|false	gd.image.new
imagecreatetruecolor(int $width, int $height): GdImage|false	Crear una nueva imagen de color verdadero
imagecrop(GdImage $image, array $rectangle): GdImage|false	Recorta una imagen usando las coordenadas, el tamaño, x, y, ancho y alto dados
imagecropauto(GdImage $image, int $mode = IMG_CROP_DEFAULT, float $threshold = 0.5, int $color = -1): GdImage|false	Recorta una imagen automáticamente usando uno de los modos disponibles
imagedashedline(GdImage $image, int $x1, int $y1, int $x2, int $y2, int $color): bool	Dibujar una línea discontinua
imagedestroy(GdImage $image): bool	Destruir una imagen
imageellipse(GdImage $image, int $center_x, int $center_y, int $width, int $height, int $color): bool	Dibujar una elipse
imagefill(GdImage $image, int $x, int $y, int $color): bool	Rellenar
imagefilledarc(GdImage $image, int $center_x, int $center_y, int $width, int $height, int $start_angle, int $end_angle, int $color, int $style): bool	Dibujar un arco parcial y rellenarlo
imagefilledellipse(GdImage $image, int $center_x, int $center_y, int $width, int $height, int $color): bool	Dibujar una elipse con relleno
imagefilledpolygon(GdImage $image, array $points, int $color): bool	Dibujar un polígono con relleno
imagefilledpolygon(GdImage $image, array $points, int $num_points, int $color): bool	Dibujar un polígono con relleno
imagefilledrectangle(GdImage $image, int $x1, int $y1, int $x2, int $y2, int $color): bool	Dibujar un rectángulo con relleno
imagefilltoborder(GdImage $image, int $x, int $y, int $border_color, int $color): bool	Rellenar con un color específico
imagefilter(GdImage $image, int $filter, array|int|float|bool ...$args): bool	Aplica un filtro a una imagen
imageflip(GdImage $image, int $mode): bool	Flips an image using a given mode
imagefontheight(GdFont|int $font): int	Obtener el alto de la fuente
imagefontwidth(GdFont|int $font): int	Obtener el ancho de la fuente
imageftbbox(float $size, float $angle, string $font_filename, string $string, array $options = []): array|false	Devolver la caja circundante de un texto usando fuentes mediante FreeType 2
imagefttext(GdImage $image, float $size, float $angle, int $x, int $y, int $color, string $font_filename, string $text, array $options = []): array|false	Escribir texto en la imagen usando fuentes mediante FreeType 2
imagegammacorrect(GdImage $image, float $input_gamma, float $output_gamma): bool	Aplicar una corrección gamma a la imagen GD
imagegd(GdImage $image, string|null $file = null): bool	Imprime una imagen GD2 a un navegador o archivo
imagegd2(GdImage $image, string|null $file = null, int $chunk_size = 128, int $mode = IMG_GD2_RAW): bool	Imprime una imagen GD2 a un navegador o fichero
imagegetclip(GdImage $image): array	Get the clipping rectangle
imagegetinterpolation(GdImage $image): int	Get the interpolation method
imagegif(GdImage $image, resource|string|null $file = null): bool	gd.image.output
imagegrabscreen(): GdImage|false	Capturar la pantalla completa
imagegrabwindow(int $handle, bool $client_area = false): GdImage|false	Capturar una ventana
imageinterlace(GdImage $image, bool|null $enable = null): bool	Habilitar o deshabilitar en entrelazamiento
imageistruecolor(GdImage $image): bool	Averiguar si una imagen es de color verdadero
imagejpeg(GdImage $image, resource|string|null $file = null, int $quality = -1): bool	gd.image.output
imagelayereffect(GdImage $image, int $effect): bool	Establecer la bandera de mezcla alfa para usar los efectos de capa
imageline(GdImage $image, int $x1, int $y1, int $x2, int $y2, int $color): bool	Dibujar una línea
imageloadfont(string $filename): GdFont|false	Cargar una nueva fuente
imageopenpolygon(GdImage $image, array $points, int $color): bool	Draws an open polygon
imageopenpolygon(GdImage $image, array $points, int $num_points, int $color): bool	Draws an open polygon
imagepalettecopy(GdImage $dst, GdImage $src): void	Copiar la paleta de una imagen a otra
imagepalettetotruecolor(GdImage $image): bool	Convierte una imagen basada en paleta a color verdadero
imagepng(GdImage $image, resource|string|null $file = null, int $quality = -1, int $filters = -1): bool	Imprimir una imagen PNG al navegador o a un archivo
imagepolygon(GdImage $image, array $points, int $color): bool	Dibujar un polígono
imagepolygon(GdImage $image, array $points, int $num_points, int $color): bool	Dibujar un polígono
imagerectangle(GdImage $image, int $x1, int $y1, int $x2, int $y2, int $color): bool	Dibuja un rectángulo
imageresolution(GdImage $image, int|null $resolution_x = null, int|null $resolution_y = null): array|bool	Get or set the resolution of the image
imagerotate(GdImage $image, float $angle, int $background_color): GdImage|false	Rotar una imagen con un ángulo dado
imagesavealpha(GdImage $image, bool $enable): bool	Establecer la bandera para guardar la información completa del canal alfa (como oposición a la transparencia de un simple color) cuando se guardan imágenes PNG
imagescale(GdImage $image, int $width, int $height = -1, int $mode = IMG_BILINEAR_FIXED): GdImage|false	Redimensiona una imagen usando un nuevo ancho y alto
imagesetbrush(GdImage $image, GdImage $brush): bool	Establecer la imagen de pincel para el dibujo de líneas
imagesetclip(GdImage $image, int $x1, int $y1, int $x2, int $y2): bool	Set the clipping rectangle
imagesetinterpolation(GdImage $image, int $method = IMG_BILINEAR_FIXED): bool	Establecer el método de interpolación
imagesetpixel(GdImage $image, int $x, int $y, int $color): bool	Establecer un simple píxel
imagesetstyle(GdImage $image, array $style): bool	Establecer el estilo para el dibujo de líneas
imagesetthickness(GdImage $image, int $thickness): bool	Establecer el grosor para el dibujo de líneas
imagesettile(GdImage $image, GdImage $tile): bool	Establecer la imagen de tesela para rellenos
imagestring(GdImage $image, GdFont|int $font, int $x, int $y, string $string, int $color): bool	Dibujar una cadena horizontalmente
imagestringup(GdImage $image, GdFont|int $font, int $x, int $y, string $string, int $color): bool	Dibujar una cadena verticalmente
imagesx(GdImage $image): int	Obtener el ancho de una imagen
imagesy(GdImage $image): int	Obtener el alto de una imagen
imagetruecolortopalette(GdImage $image, bool $dither, int $num_colors): bool	Convertir una imagen de color verdadero en una imagen de paleta
imagettfbbox(float $size, float $angle, string $font_filename, string $string, array $options = []): array|false	Devuelve la caja circundante de un texto usando fuentes TrueType
imagettftext(GdImage $image, float $size, float $angle, int $x, int $y, int $color, string $font_filename, string $text, array $options = []): array|false	Escribir texto en la imagen usando fuentes TrueType
imagetypes(): int	Devolver los tipos de imagen soportados por la versión actual de PHP
imagewbmp(GdImage $image, resource|string|null $file = null, int|null $foreground_color = null): bool	gd.image.output
imagewebp(GdImage $image, resource|string|null $file = null, int $quality = -1): bool	Imprimir una imagen WebP al navegador o fichero
imagexbm(GdImage $image, string|null $filename, int|null $foreground_color = null): bool	Imprimir una imagen XBM en el navegador o en un fichero
iptcembed(string $iptc_data, string $filename, int $spool = ?): string|bool	Incluir información IPTC binaria en una imagen JPEG
iptcparse(string $iptc_block): array|false	Conviertir un bloque IPTC binario en simples etiquetas
jpeg2wbmp(string $jpegname, string $wbmpname, int $dest_height, int $dest_width, int $threshold): bool	Convertir un archiov de imagen JPEG a un archivo de imagen WBMP
png2wbmp(string $pngname, string $wbmpname, int $dest_height, int $dest_width, int $threshold): bool	Convertir un archivo de imagen PNG a un archivo de imagen WBMP
GdFont()	(new) A fully opaque class which replaces gd font resources as of PHP 8
GdImage()	(new) A fully opaque class which replaces gd resources as of PHP 8
>asort(array $array, int $flags = Collator::SORT_REGULAR): bool	(Collator) Ordenar un array manteniendo la relación de índices
collator_asort(Collator $object, array $array, int $flags = Collator::SORT_REGULAR): bool	Ordenar un array manteniendo la relación de índices
>compare(string $string1, string $string2): int|false	(Collator) Comparar dos cadenas Unicode
collator_compare(Collator $object, string $string1, string $string2): int|false	Comparar dos cadenas Unicode
Collator(string $locale)	(new) Crear un objeto Collator
Collator::create(string $locale): Collator|null	Crear un cotejador
collator_create(string $locale): Collator|null	Crear un cotejador
>getAttribute(int $attribute): int|false	(Collator) Obtener el valor de un atributo de cotejo
collator_get_attribute(Collator $object, int $attribute): int|false	Obtener el valor de un atributo de cotejo
>getErrorCode(): int|false	(Collator) Obtener el último código de error del cotejeador
collator_get_error_code(Collator $object): int|false	Obtener el último código de error del cotejeador
>getErrorMessage(): string|false	(Collator) Obtener el texto del último código de error del cotejador
collator_get_error_message(Collator $object): string|false	Obtener el texto del último código de error del cotejador
>getLocale(int $type): string|false	(Collator) Obtener el nombre de la configuración regional del cotejador
collator_get_locale(Collator $object, int $type): string|false	Obtener el nombre de la configuración regional del cotejador
>getSortKey(string $string): string|false	(Collator) Obtener la clave de ordenación de una cadena
collator_get_sort_key(Collator $object, string $string): string|false	Obtener la clave de ordenación de una cadena
>getStrength(): int	(Collator) Obtener la fuerza de cotejo actual
collator_get_strength(Collator $object): int	Obtener la fuerza de cotejo actual
>setAttribute(int $attribute, int $value): bool	(Collator) Establecer el atributo de cotejo
collator_set_attribute(Collator $object, int $attribute, int $value): bool	Establecer el atributo de cotejo
>setStrength(int $strength): true	(Collator) Establecer la fuerza (strength) de un cotejo
collator_set_strength(Collator $object, int $strength): true	Establecer la fuerza (strength) de un cotejo
>sortWithSortKeys(array $array): bool	(Collator) Ordenar un array usando el cotejador y las claves de ordenación especificados
collator_sort_with_sort_keys(Collator $object, array $array): bool	Ordenar un array usando el cotejador y las claves de ordenación especificados
>sort(array $array, int $flags = Collator::SORT_REGULAR): bool	(Collator) Ordenar un array usando cotejador especificado
collator_sort(Collator $object, array $array, int $flags = Collator::SORT_REGULAR): bool	Ordenar un array usando cotejador especificado
IntlDateFormatter::create(string|null $locale, int $dateType = IntlDateFormatter::FULL, int $timeType = IntlDateFormatter::FULL, IntlTimeZone|DateTimeZone|string|null $timezone = null, IntlCalendar|int|null $calendar = null, string|null $pattern = null): IntlDateFormatter|null	Crear un formateador de fechas
datefmt_create(string|null $locale, int $dateType = IntlDateFormatter::FULL, int $timeType = IntlDateFormatter::FULL, IntlTimeZone|DateTimeZone|string|null $timezone = null, IntlCalendar|int|null $calendar = null, string|null $pattern = null): IntlDateFormatter|null	Crear un formateador de fechas
>format(IntlCalendar|DateTimeInterface|array|string|int|float $datetime): string|false	(IntlDateFormatter) Formatear el valor fecha/hora como una cadena
datefmt_format(IntlDateFormatter $formatter, IntlCalendar|DateTimeInterface|array|string|int|float $datetime): string|false	Formatear el valor fecha/hora como una cadena
IntlDateFormatter::formatObject(IntlCalendar|DateTimeInterface $datetime, array|int|string|null $format = null, string|null $locale = null): string|false	Formatea un objeto
datefmt_format_object(IntlCalendar|DateTimeInterface $datetime, array|int|string|null $format = null, string|null $locale = null): string|false	Formatea un objeto
>getCalendar(): int|false	(IntlDateFormatter) Obtener el tipo de calendario usado por el objeto IntlDateFormatter
datefmt_get_calendar(IntlDateFormatter $formatter): int|false	Obtener el tipo de calendario usado por el objeto IntlDateFormatter
>getDateType(): int|false	(IntlDateFormatter) Obtener el tipo de fecha usada por un formateador de IntlDateFormatter
datefmt_get_datetype(IntlDateFormatter $formatter): int|false	Obtener el tipo de fecha usada por un formateador de IntlDateFormatter
>getErrorCode(): int	(IntlDateFormatter) Obtener el código del error de la última operación
datefmt_get_error_code(IntlDateFormatter $formatter): int	Obtener el código del error de la última operación
>getErrorMessage(): string	(IntlDateFormatter) Obtener el texto del error de la última operación
datefmt_get_error_message(IntlDateFormatter $formatter): string	Obtener el texto del error de la última operación
>getLocale(int $type = ULOC_ACTUAL_LOCALE): string|false	(IntlDateFormatter) Obtener la configuración regional usada por un formateador
datefmt_get_locale(IntlDateFormatter $formatter, int $type = ULOC_ACTUAL_LOCALE): string|false	Obtener la configuración regional usada por un formateador
>getPattern(): string|false	(IntlDateFormatter) Obtener el patrón utilizado por un formateador de IntlDateFormatter
datefmt_get_pattern(IntlDateFormatter $formatter): string|false	Obtener el patrón utilizado por un formateador de IntlDateFormatter
>getTimeType(): int|false	(IntlDateFormatter) Obtener el tipo de hora usada por un formateador de IntlDateFormatter
datefmt_get_timetype(IntlDateFormatter $formatter): int|false	Obtener el tipo de hora usada por un formateador de IntlDateFormatter
>getTimeZoneId(): string|false	(IntlDateFormatter) Obtener el ID de la zona horario usada por un formateador de IntlDateFormatter
datefmt_get_timezone_id(IntlDateFormatter $formatter): string|false	Obtener el ID de la zona horario usada por un formateador de IntlDateFormatter
>getCalendarObject(): IntlCalendar|false|null	(IntlDateFormatter) Obtener una copia del objeto calendario del formateador
datefmt_get_calendar_object(IntlDateFormatter $formatter): IntlCalendar|false|null	Obtener una copia del objeto calendario del formateador
>getTimeZone(): IntlTimeZone|false	(IntlDateFormatter) Obtener la zona horaria del formateador
datefmt_get_timezone(IntlDateFormatter $formatter): IntlTimeZone|false	Obtener la zona horaria del formateador
>isLenient(): bool	(IntlDateFormatter) Obtener la tolerancia usada por un formateador de IntlDateFormatter
datefmt_is_lenient(IntlDateFormatter $formatter): bool	Obtener la tolerancia usada por un formateador de IntlDateFormatter
>localtime(string $string, int $offset = null): array|false	(IntlDateFormatter) Convertir una cadena en un valor de marca de tiempo basado en un campo
datefmt_localtime(IntlDateFormatter $formatter, string $string, int $offset = null): array|false	Convertir una cadena en un valor de marca de tiempo basado en un campo
>parse(string $string, int $offset = null): int|float|false	(IntlDateFormatter) Convertir una cadena en un valor de marca de tiempo
datefmt_parse(IntlDateFormatter $formatter, string $string, int $offset = null): int|float|false	Convertir una cadena en un valor de marca de tiempo
>setCalendar(IntlCalendar|int|null $calendar): bool	(IntlDateFormatter) Establecer el tipo de calendario usado por el formateador
datefmt_set_calendar(IntlDateFormatter $formatter, IntlCalendar|int|null $calendar): bool	Establecer el tipo de calendario usado por el formateador
>setLenient(bool $lenient): void	(IntlDateFormatter) Establecer la tolerancia del analizador
datefmt_set_lenient(IntlDateFormatter $formatter, bool $lenient): void	Establecer la tolerancia del analizador
>setPattern(string $pattern): bool	(IntlDateFormatter) Establecer el patrón utilizado por el formateador de IntlDateFormatter
datefmt_set_pattern(IntlDateFormatter $formatter, string $pattern): bool	Establecer el patrón utilizado por el formateador de IntlDateFormatter
>setTimeZone(IntlTimeZone|DateTimeZone|string|null $timezone): bool	(IntlDateFormatter) Establece la zona horaria del formateador
datefmt_set_timezone(IntlDateFormatter $formatter, IntlTimeZone|DateTimeZone|string|null $timezone): bool	Establece la zona horaria del formateador
intl_error_name(int $errorCode): string	Obtiene un nombre simbólico a partir de un código de error dado
intl_get_error_code(): int	Obtiene el último código de error
intl_get_error_message(): string	Obtener una descripción del último error
intl_is_failure(int $errorCode): bool	Comprueba si el código de error dado indica un fallo
grapheme_extract(string $haystack, int $size, int $type = GRAPHEME_EXTR_COUNT, int $offset = ?, int $next = null): string|false	Función para extraer una secuencia de un clúster de grafemas predeterminados desde un buffer de texto, que puede estar codificado en UTF-8
grapheme_str_split(string $string, int $length = 1): array|false	Split a string into an array
grapheme_stripos(string $haystack, string $needle, int $offset = ?): int|false	Buscar la posición (en unidades de grafema) de la primera coincidencia de una cadena insensible a mayúsculas-minúsculas
grapheme_stristr(string $haystack, string $needle, bool $beforeNeedle = false): string|false	Devolver parte de la cadena "pajar" desde la primera coincidencia de la cadena "aguja" insensible a mayúsculas-minúsculas hasta el final de "pajar"
grapheme_strlen(string $string): int|false|null	Obtener la longitud de un string en unidades de grafema
grapheme_strpos(string $haystack, string $needle, int $offset = ?): int|false	Buscar la posición (en unidades de grafema) de la primera ocurrencia de una cadena
grapheme_strripos(string $haystack, string $needle, int $offset = ?): int|false	Buscar la posición (en unidades de grafema) de la última coincidencia de una cadena insensible a mayúsculas-minúsculas
grapheme_strrpos(string $haystack, string $needle, int $offset = ?): int|false	Buscar la posición (en unidades de grafema) de la última coincidencia de una cadena
grapheme_strstr(string $haystack, string $needle, bool $beforeNeedle = false): string|false	Devolver parte de la cadena "pajar" desde la primera coincidencia de la cadena "aguja" hasta el final de "pajar"
grapheme_substr(string $string, int $offset, int|null $length = null): string|false	Devolver parte de una cadena
idn_to_ascii(string $domain, int $flags = IDNA_DEFAULT, int $variant = INTL_IDNA_VARIANT_UTS46, array $idna_info = null): string|false	Convierte un nombre de dominio a formato IDNA ASCII
idn_to_utf8(string $domain, int $flags = IDNA_DEFAULT, int $variant = INTL_IDNA_VARIANT_UTS46, array $idna_info = null): string|false	Convierte un nombre de dominio de IDNA ASCII a Unicode
IntlBreakIterator()	(new) Constructor privado para denegar la instanciación
IntlBreakIterator::createCharacterInstance(string|null $locale = null): IntlBreakIterator|null	Crear un iterador de ruptura para los límites de secuencias de caracters combinados
IntlBreakIterator::createCodePointInstance(): IntlCodePointBreakIterator	Crear un iterador de ruptura para los límites de puntos de código
IntlBreakIterator::createLineInstance(string|null $locale = null): IntlBreakIterator|null	Crear un iterador de ruptura para las lógicamente posibles saltos de línea
IntlBreakIterator::createSentenceInstance(string|null $locale = null): IntlBreakIterator|null	Crear un iterador de ruptura para rupturas de sentencias
IntlBreakIterator::createTitleInstance(string|null $locale = null): IntlBreakIterator|null	Crear un iterador de ruptura para rupturas de marcos de título
IntlBreakIterator::createWordInstance(string|null $locale = null): IntlBreakIterator|null	Crear un iterador de ruptura para ruptura de palabras
>current(): int	(IntlBreakIterator) Obtiene el índice de la posición actual
>first(): int	(IntlBreakIterator) Coloca la posición al primer caracter en el texto
>following(int $offset): int	(IntlBreakIterator) Avanza el iterador al primer límite siguiendo un offset específico
>getErrorCode(): int	(IntlBreakIterator) Obtener el código del último error del objeto
intl_get_error_code(): int	Obtener el código del último error del objeto
>getErrorMessage(): string	(IntlBreakIterator) Obtener el último mensaje de error del objeto
intl_get_error_message(): string	Obtener el último mensaje de error del objeto
>getLocale(int $type): string|false	(IntlBreakIterator) Obtiene el locale asociado al objeto
>getPartsIterator(string $type = IntlPartsIterator::KEY_SEQUENTIAL): IntlPartsIterator	(IntlBreakIterator) Crear un iterador para fragmentos de navegación entre límites
>getText(): string|null	(IntlBreakIterator) Obtiene el texto que está siendo escaneado
>isBoundary(int $offset): bool	(IntlBreakIterator) Indicar si un índice es un índice de límites
>last(): int	(IntlBreakIterator) Establecer la posición del iterador al índice tras el último carácter
>next(int|null $offset = null): int	(IntlBreakIterator) Avanzar el iterador al siguiente límite
>preceding(int $offset): int	(IntlBreakIterator) Establecer la posición del iterador al primer límite antes de un índice
>previous(): int	(IntlBreakIterator) Establecer la posición del iterador al límite inmediatamente anterior al actual
>setText(string $text): bool	(IntlBreakIterator) Establecer el texto a escanear
>add(int $field, int $value): bool	(IntlCalendar) Añadir una candidad (con signo) de tiempo al campo
intlcal_add(IntlCalendar $calendar, int $field, int $value): bool	Añadir una candidad (con signo) de tiempo al campo
>after(IntlCalendar $other): bool	(IntlCalendar) Indica si el instante de este objeto es posterior al del proporcionado
intlcal_after(IntlCalendar $calendar, IntlCalendar $other): bool	Indica si el instante de este objeto es posterior al del proporcionado
>before(IntlCalendar $other): bool	(IntlCalendar) Indica si el instante de este objeto es anterior al del proporcionado
intlcal_before(IntlCalendar $calendar, IntlCalendar $other): bool	Indica si el instante de este objeto es anterior al del proporcionado
>clear(int|null $field = null): true	(IntlCalendar) Limpiar uno o todos los campos
intlcal_clear(IntlCalendar $calendar, int|null $field = null): true	Limpiar uno o todos los campos
IntlCalendar()	(new) Constructor privado para no permitir la creación de instancias
IntlCalendar::createInstance(IntlTimeZone|DateTimeZone|string|null $timezone = null, string|null $locale = null): IntlCalendar|null	Crear un nuevo IntlCalendar
intlcal_create_instance(IntlTimeZone|DateTimeZone|string|null $timezone = null, string|null $locale = null): IntlCalendar|null	Crear un nuevo IntlCalendar
>equals(IntlCalendar $other): bool	(IntlCalendar) Comparar el instante de dos objetos IntlCalendar
intlcal_equals(IntlCalendar $calendar, IntlCalendar $other): bool	Comparar el instante de dos objetos IntlCalendar
>fieldDifference(float $timestamp, int $field): int|false	(IntlCalendar) Calcular la diferencia entre el instante dado y el de este objeto
intlcal_field_difference(IntlCalendar $calendar, float $timestamp, int $field): int|false	Calcular la diferencia entre el instante dado y el de este objeto
IntlCalendar::fromDateTime(DateTime|string $datetime, string|null $locale = null): IntlCalendar|null	Crear un IntlCalendar desde un objeto DateTime o tring
intlcal_from_date_time(DateTime|string $datetime, string|null $locale = null): IntlCalendar|null	Crear un IntlCalendar desde un objeto DateTime o tring
>get(int $field): int|false	(IntlCalendar) Obtiene el valor de un campo
intlcal_get(IntlCalendar $calendar, int $field): int|false	Obtiene el valor de un campo
>getActualMaximum(int $field): int|false	(IntlCalendar) El valor máximo de un campo, considerando el instante actual del objeto
intlcal_get_actual_maximum(IntlCalendar $calendar, int $field): int|false	El valor máximo de un campo, considerando el instante actual del objeto
>getActualMinimum(int $field): int|false	(IntlCalendar) El valor mínimo de un campo, considerando el instante actual del objeto
intlcal_get_actual_minimum(IntlCalendar $calendar, int $field): int|false	El valor mínimo de un campo, considerando el instante actual del objeto
IntlCalendar::getAvailableLocales(): array	Obtener un array con las zonas para las que existen datos
intlcal_get_available_locales(): array	Obtener un array con las zonas para las que existen datos
>getDayOfWeekType(int $dayOfWeek): int|false	(IntlCalendar) Inidcar si un día es un día de entresemana, del fin de semana o un día de transición entre ambos
intlcal_get_day_of_week_type(IntlCalendar $calendar, int $dayOfWeek): int|false	Inidcar si un día es un día de entresemana, del fin de semana o un día de transición entre ambos
>getErrorCode(): int|false	(IntlCalendar) Obtener el código de error del objeto
intlcal_get_error_code(IntlCalendar $calendar): int|false	Obtener el código de error del objeto
>getErrorMessage(): string|false	(IntlCalendar) Obtener el últime mensaje de error del objeto
intlcal_get_error_message(IntlCalendar $calendar): string|false	Obtener el últime mensaje de error del objeto
>getFirstDayOfWeek(): int|false	(IntlCalendar) Obtener el primer día de la semana de la región del calendario
intlcal_get_first_day_of_week(IntlCalendar $calendar): int|false	Obtener el primer día de la semana de la región del calendario
>getGreatestMinimum(int $field): int|false	(IntlCalendar) Obtener el valor mínimo local más grande de un campo
intlcal_get_greatest_minimum(IntlCalendar $calendar, int $field): int|false	Obtener el valor mínimo local más grande de un campo
IntlCalendar::getKeywordValuesForLocale(string $keyword, string $locale, bool $onlyCommon): IntlIterator|false	Obtener un conjunto de valores de palabras clave de zonas
intlcal_get_keyword_values_for_locale(string $keyword, string $locale, bool $onlyCommon): IntlIterator|false	Obtener un conjunto de valores de palabras clave de zonas
>getLeastMaximum(int $field): int|false	(IntlCalendar) Obtener el máximo local más pequeño de un campo
intlcal_get_least_maximum(IntlCalendar $calendar, int $field): int|false	Obtener el máximo local más pequeño de un campo
>getLocale(int $type): string|false	(IntlCalendar) Obtener la configuración regional asociada al objeto
intlcal_get_locale(IntlCalendar $calendar, int $type): string|false	Obtener la configuración regional asociada al objeto
>getMaximum(int $field): int|false	(IntlCalendar) Obtener el valor máximo global de un campo
intlcal_get_maximum(IntlCalendar $calendar, int $field): int|false	Obtener el valor máximo global de un campo
>getMinimalDaysInFirstWeek(): int|false	(IntlCalendar) Obtener el número mínimo de días que puede tener la primera semana de un año o mes
intlcal_get_minimal_days_in_first_week(IntlCalendar $calendar): int|false	Obtener el número mínimo de días que puede tener la primera semana de un año o mes
>getMinimum(int $field): int|false	(IntlCalendar) Obtener el valor mínimo de un campo
intlcal_get_minimum(IntlCalendar $calendar, int $field): int|false	Obtener el valor mínimo de un campo
IntlCalendar::getNow(): float	Obtener el número que representa el instante actual
intlcal_get_now(): float	Obtener el número que representa el instante actual
>getRepeatedWallTimeOption(): int	(IntlCalendar) Obtener el comportamiento para tratar horas repetidas
intlcal_get_repeated_wall_time_option(IntlCalendar $calendar): int	Obtener el comportamiento para tratar horas repetidas
>getSkippedWallTimeOption(): int	(IntlCalendar) Obtener el comportamiento para tratar horas omitidas
intlcal_get_skipped_wall_time_option(IntlCalendar $calendar): int	Obtener el comportamiento para tratar horas omitidas
>getTime(): float|false	(IntlCalendar) Obtiene el tiempo representado por el objeto
intlcal_get_time(IntlCalendar $calendar): float|false	Obtiene el tiempo representado por el objeto
>getTimeZone(): IntlTimeZone|false	(IntlCalendar) Obtener la zona horaria del objeto
intlcal_get_time_zone(IntlCalendar $calendar): IntlTimeZone|false	Obtener la zona horaria del objeto
>getType(): string	(IntlCalendar) Obtener el tipo de calendario
intlcal_get_type(IntlCalendar $calendar): string	Obtener el tipo de calendario
>getWeekendTransition(int $dayOfWeek): int|false	(IntlCalendar) Obtener el instante del día en la que comienza o termina el fin de semana
intlcal_get_weekend_transition(IntlCalendar $calendar, int $dayOfWeek): int|false	Obtener el instante del día en la que comienza o termina el fin de semana
>inDaylightTime(): bool	(IntlCalendar) Indicar si el instante del objeto está en el horario de verano
intlcal_in_daylight_time(IntlCalendar $calendar): bool	Indicar si el instante del objeto está en el horario de verano
>isEquivalentTo(IntlCalendar $other): bool	(IntlCalendar) Indicar si otro calendario es igual pero para un instante diferente
intlcal_is_equivalent_to(IntlCalendar $calendar, IntlCalendar $other): bool	Indicar si otro calendario es igual pero para un instante diferente
>isLenient(): bool	(IntlCalendar) Indicar si la interpretación de una fecha/hora está en modo tolerante
intlcal_is_lenient(IntlCalendar $calendar): bool	Indicar si la interpretación de una fecha/hora está en modo tolerante
>isSet(int $field): bool	(IntlCalendar) Determina si un campo está definido
intlcal_is_set(IntlCalendar $calendar, int $field): bool	Determina si un campo está definido
>isWeekend(float|null $timestamp = null): bool	(IntlCalendar) Determina si una cierta fecha es fin de semana
intlcal_is_weekend(IntlCalendar $calendar, float|null $timestamp = null): bool	Determina si una cierta fecha es fin de semana
>roll(int $field, int|bool $value): bool	(IntlCalendar) Añadir un valor a un campo si acarrear más campos significativos
intlcal_roll(IntlCalendar $calendar, int $field, int|bool $value): bool	Añadir un valor a un campo si acarrear más campos significativos
>set(int $field, int $value): true	(IntlCalendar) Establecer un campo de instante o varios campos en común de una vez
>set(int $year, int $month, int $dayOfMonth = NULL, int $hour = NULL, int $minute = NULL, int $second = NULL): true	(IntlCalendar) Establecer un campo de instante o varios campos en común de una vez
intlcal_set(IntlCalendar $cal, int $field, int $value): true	Establecer un campo de instante o varios campos en común de una vez
intlcal_set(IntlCalendar $cal, int $year, int $month, int $dayOfMonth = NULL, int $hour = NULL, int $minute = NULL, int $second = NULL): bool	Establecer un campo de instante o varios campos en común de una vez
>setDate(int $year, int $month, int $dayOfMonth): void	(IntlCalendar) Set a date fields
>setDateTime(int $year, int $month, int $dayOfMonth, int $hour, int $minute, int|null $second = null): void	(IntlCalendar) Set a date and time fields
>setFirstDayOfWeek(int $dayOfWeek): true	(IntlCalendar) Establecer el día en el que se estima que empieza la semana
intlcal_set_first_day_of_week(IntlCalendar $calendar, int $dayOfWeek): true	Establecer el día en el que se estima que empieza la semana
>setLenient(bool $lenient): true	(IntlCalendar) Establecer si la interpretación de la fecha/hora es tolerante
intlcal_set_lenient(IntlCalendar $calendar, bool $lenient): true	Establecer si la interpretación de la fecha/hora es tolerante
>setMinimalDaysInFirstWeek(int $days): true	(IntlCalendar) Establecer el número de días mínimo que puede tener la primera semana de un año o mes
intlcal_set_minimal_days_in_first_week(IntlCalendar $calendar, int $days): true	Establecer el número de días mínimo que puede tener la primera semana de un año o mes
>setRepeatedWallTimeOption(int $option): true	(IntlCalendar) Establecer el comportamiento para tratar horas repetidas en transiciones negativas de índices de zonas horarias
intlcal_set_repeated_wall_time_option(IntlCalendar $calendar, int $option): true	Establecer el comportamiento para tratar horas repetidas en transiciones negativas de índices de zonas horarias
>setSkippedWallTimeOption(int $option): true	(IntlCalendar) Establecer el comportamiento para tratar horas omitidas en transiciones positivas de índices de zonas horarias
intlcal_set_skipped_wall_time_option(IntlCalendar $calendar, int $option): true	Establecer el comportamiento para tratar horas omitidas en transiciones positivas de índices de zonas horarias
>setTime(float $timestamp): bool	(IntlCalendar) Establecer el momento del calendario en milisegundos desde la época
intlcal_set_time(IntlCalendar $calendar, float $timestamp): bool	Establecer el momento del calendario en milisegundos desde la época
>setTimeZone(IntlTimeZone|DateTimeZone|string|null $timezone): bool	(IntlCalendar) Establecer la zona horaria usada por este calendario
intlcal_set_time_zone(IntlCalendar $calendar, IntlTimeZone|DateTimeZone|string|null $timezone): bool	Establecer la zona horaria usada por este calendario
>toDateTime(): DateTime|false	(IntlCalendar) Convertir un objeto IntlCalendar a un objeto DateTime
intlcal_to_date_time(IntlCalendar $calendar): DateTime|false	Convertir un objeto IntlCalendar a un objeto DateTime
IntlChar::charAge(int|string $codepoint): array|null	Obtener la «edad» del punto de código
IntlChar::charDigitValue(int|string $codepoint): int|null	Obtener el valor del dígito decimal de un carácter de dígito decimal
IntlChar::charDirection(int|string $codepoint): int|null	Obtener el valor de la categoría bidireccional de un punto de código
IntlChar::charFromName(string $name, int $type = IntlChar::UNICODE_CHAR_NAME): int|null	Buscar un carácter Unicode por su nombre y devolver su valor de punto de código
IntlChar::charMirror(int|string $codepoint): int|string|null	Obtener el carácter de «imagen reflejada» de un punto de código
IntlChar::charName(int|string $codepoint, int $type = IntlChar::UNICODE_CHAR_NAME): string|null	Obtener el nombre de un carácter Unicode
IntlChar::charType(int|string $codepoint): int|null	Obtener el valor de la categoría general de un punto de código
IntlChar::chr(int|string $codepoint): string|null	Devolver el carácter Unicode mediante su valor de punto de código
IntlChar::digit(int|string $codepoint, int $base = 10): int|false|null	Obtener el valor del dígito decimal de un punto de código para una base dada
IntlChar::enumCharNames(int|string $start, int|string $end, callable $callback, int $type = IntlChar::UNICODE_CHAR_NAME): bool	Enumerar todos los caracteres de Unicode con asignación dentro de un rango
IntlChar::enumCharTypes(callable $callback): void	Enumerar todos los puntos de código con sus categorías generales de Unicode
IntlChar::foldCase(int|string $codepoint, int $options = IntlChar::FOLD_CASE_DEFAULT): int|string|null	Realiza un «plegamiento» de un punto de código
IntlChar::forDigit(int $digit, int $base = 10): int	Obtener la representación de un carácter para un dígito y base dados
IntlChar::getBidiPairedBracket(int|string $codepoint): int|string|null	Obtener la pareja del carácter parentético de un punto de código
IntlChar::getBlockCode(int|string $codepoint): int|null	Obtener el bloque de asignación de Unicode que contiene a un punto de código
IntlChar::getCombiningClass(int|string $codepoint): int|null	Obtener la clase de combinación de un punto de cógido
IntlChar::getFC_NFKC_Closure(int|string $codepoint): string|false|null	Obtener la propiedad FC_NFKC_Closure de un punto de código
IntlChar::getIntPropertyMaxValue(int $property): int	Obtener el valor máximo de una propiedad de Unicode
IntlChar::getIntPropertyMinValue(int $property): int	Obtener el valor mínimo de una propiedad de Unicode
IntlChar::getIntPropertyValue(int|string $codepoint, int $property): int|null	Obtener el valor de una propiedad de Unicode para un punto de código
IntlChar::getNumericValue(int|string $codepoint): float|null	Obtener el valor numérico de un punto de código de Unicode
IntlChar::getPropertyEnum(string $alias): int	Obtener el valor de la constante de una propiedad para un nombre de propiedad dado
IntlChar::getPropertyName(int $property, int $type = IntlChar::LONG_PROPERTY_NAME): string|false	Obtener el nombre Unicode de una propiedad
IntlChar::getPropertyValueEnum(int $property, string $name): int	Obtener el valor de una propiedad para un nombre de valor dado
IntlChar::getPropertyValueName(int $property, int $value, int $type = IntlChar::LONG_PROPERTY_NAME): string|false	Obtener el nombre Unicode para un valor de una propiedad
IntlChar::getUnicodeVersion(): array	Obtener la versión de Unicode
IntlChar::hasBinaryProperty(int|string $codepoint, int $property): bool|null	Comprobar una propiedad de Unicode binaria para un punto de código
IntlChar::isalnum(int|string $codepoint): bool|null	Comporbar si un punto de código es un carácter alfanumérico
IntlChar::isalpha(int|string $codepoint): bool|null	Comprobar si un punto de código es un caracter de letra
IntlChar::isbase(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter base
IntlChar::isblank(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter «en blanco» o de «espacio horizontal»
IntlChar::iscntrl(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter de control
IntlChar::isdefined(int|string $codepoint): bool|null	Comprobar si un punto de código está definido
IntlChar::isdigit(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter de dígito
IntlChar::isgraph(int|string $codepoint): bool|null	Comprobar si un punto de código es un caráter gráfico
IntlChar::isIDIgnorable(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter ignorable
IntlChar::isIDPart(int|string $codepoint): bool|null	Comprobar si un punto de código es permisible en un identificador
IntlChar::isIDStart(int|string $codepoint): bool|null	Comprobar si un punto de código es permisible como el primer carácter de un identificador
IntlChar::isISOControl(int|string $codepoint): bool|null	Comprobar si un punto de código es un código de control de ISO
IntlChar::isJavaIDPart(int|string $codepoint): bool|null	Comprobar si un punto de código es permisible en un identificador de Java
IntlChar::isJavaIDStart(int|string $codepoint): bool|null	Comprobar si un punto de código es permisible como el primer carácter de un identificador de Java
IntlChar::isJavaSpaceChar(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter de espacio según Java
IntlChar::islower(int|string $codepoint): bool|null	Comprobar si un punto de código es una letra minúscula
IntlChar::isMirrored(int|string $codepoint): bool|null	Comprobar si un punto de código posee la propiedad Bidi_Mirrored
IntlChar::isprint(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter imprimible
IntlChar::ispunct(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter de puntuación
IntlChar::isspace(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter de espacio
IntlChar::istitle(int|string $codepoint): bool|null	Comprobar si un punto de código es una letra titular
IntlChar::isUAlphabetic(int|string $codepoint): bool|null	Comprobar si un punto de código tiene la propiedad de Unicode Alphabetic
IntlChar::isULowercase(int|string $codepoint): bool|null	Comprobar si un punto de código tiene la propiedad de Unicode Lowercase
IntlChar::isupper(int|string $codepoint): bool|null	Comprobar si un punto de código tiene la categoría general "Lu" (letra mayúscula)
IntlChar::isUUppercase(int|string $codepoint): bool|null	Comprobar si un punto de código tiene la propiedad de Unicode Uppercase
IntlChar::isUWhiteSpace(int|string $codepoint): bool|null	Comprobar si un punto de código tiene la propiedad de Unicode White_Space
IntlChar::isWhitespace(int|string $codepoint): bool|null	Comprobar si un punto de código es un carácter de espacio en blanco según ICU
IntlChar::isxdigit(int|string $codepoint): bool|null	Comprobar si el punto de código es un dígito hexadecimal
IntlChar::ord(int|string $character): int|null	Devolver el valor del punto de código de Unicode de un carácter
IntlChar::tolower(int|string $codepoint): int|string|null	Convertir a minúsculas un carácter Unicode
IntlChar::totitle(int|string $codepoint): int|string|null	Convertir un carácter Unicode a letra titular
IntlChar::toupper(int|string $codepoint): int|string|null	Convertir a mayúsculas un carácter Unicode
>getLastCodePoint(): int	(IntlCodePointBreakIterator) Obtener el último punto de código ignorado después de que el iterdor avance o retroceda
IntlDatePatternGenerator::create(string|null $locale = null): IntlDatePatternGenerator|null	Creates a new IntlDatePatternGenerator instance
>getBestPattern(string $skeleton): string|false	(IntlDatePatternGenerator) Determines the most suitable date/time format
IntlGregorianCalendar(IntlTimeZone $tz = ?, string $locale = ?)	(new) Create the Gregorian Calendar class
IntlGregorianCalendar(int $timeZoneOrYear, int $localeOrMonth, int $dayOfMonth)	(new) Create the Gregorian Calendar class
IntlGregorianCalendar(int $timeZoneOrYear, int $localeOrMonth, int $dayOfMonth, int $hour, int $minute, int $second = ?)	(new) Create the Gregorian Calendar class
IntlGregorianCalendar::createFromDate(int $year, int $month, int $dayOfMonth): static	Create a new IntlGregorianCalendar instance from date
IntlGregorianCalendar::createFromDateTime(int $year, int $month, int $dayOfMonth, int $hour, int $minute, int|null $second = null): static	Create a new IntlGregorianCalendar instance from date and time
>getGregorianChange(): float	(IntlGregorianCalendar) Get the Gregorian Calendar change date
>isLeapYear(int $year): bool	(IntlGregorianCalendar) Determine if the given year is a leap year
>setGregorianChange(float $timestamp): bool	(IntlGregorianCalendar) Set the Gregorian Calendar the change date
>current(): mixed	(IntlIterator) Obtiene el elemento actual
>key(): mixed	(IntlIterator) Obtiene la clave actual
>next(): void	(IntlIterator) Adelanta hasta el siguiente elemento
>rewind(): void	(IntlIterator) Mueve el iterador al primer elemento
>valid(): bool	(IntlIterator) Comprueba si la posición actual es válida
>getBreakIterator(): IntlBreakIterator	(IntlPartsIterator) Obtener un IntlBreakIterator respaldando este iterador de partes
IntlRuleBasedBreakIterator(string $rules, bool $compiled = false)	(new) Crear un iterador desde un conjunto de reglas
>getBinaryRules(): string|false	(IntlRuleBasedBreakIterator) Obtener la forma binaria de las reglas compiladas
>getRules(): string|false	(IntlRuleBasedBreakIterator) Obtener el conjunto de reglas empleado para crear este objeto
>getRuleStatus(): int	(IntlRuleBasedBreakIterator) Obtener el mayor valor de estado de las reglas de ruptura que determinaron la posición de ruptura actual
>getRuleStatusVec(): array|false	(IntlRuleBasedBreakIterator) Obtener los valores de estado de las reglas de ruptura que determinaron la posición de ruptura acutal
IntlTimeZone()	(new) Private constructor to disallow direct instantiation
IntlTimeZone::countEquivalentIDs(string $timezoneId): int|false	Obtener el número de ID del grupo de equivalencias que incluye el ID dado
intltz_count_equivalent_ids(string $timezoneId): int|false	Obtener el número de ID del grupo de equivalencias que incluye el ID dado
IntlTimeZone::createDefault(): IntlTimeZone	Crear una nueva copia de la zona horaria predeterminada para este host
intltz_create_default(): IntlTimeZone	Crear una nueva copia de la zona horaria predeterminada para este host
IntlTimeZone::createEnumeration(IntlTimeZone|string|int|float|null $countryOrRawOffset = null): IntlIterator|false	Obtener una enumeración de ID de zonas horarias asociados al país o índice dado
intltz_create_enumeration(IntlTimeZone|string|int|float|null $countryOrRawOffset = null): IntlIterator|false	Obtener una enumeración de ID de zonas horarias asociados al país o índice dado
IntlTimeZone::createTimeZone(string $timezoneId): IntlTimeZone|null	Crear un objeto de zona horaria para el ID dado
intltz_create_time_zone(string $timezoneId): IntlTimeZone|null	Crear un objeto de zona horaria para el ID dado
IntlTimeZone::createTimeZoneIDEnumeration(int $type, string|null $region = null, int|null $rawOffset = null): IntlIterator|false	Get an enumeration over system time zone IDs with the given filter conditions
intltz_create_time_zone_id_enumeration(int $type, string|null $region = null, int|null $rawOffset = null): IntlIterator|false	Get an enumeration over system time zone IDs with the given filter conditions
IntlTimeZone::fromDateTimeZone(DateTimeZone $timezone): IntlTimeZone|null	Crear un objeto de zona horaria desde DateTimeZone
intltz_from_date_time_zone(DateTimeZone $timezone): IntlTimeZone|null	Crear un objeto de zona horaria desde DateTimeZone
IntlTimeZone::getCanonicalID(string $timezoneId, bool $isSystemId = null): string|false	Obtener el ID canónico de la zona horaria del sistema o el ID normalizado de la zona horaria personalizada para el ID de zona horaria dado
intltz_get_canonical_id(string $timezoneId, bool $isSystemId = null): string|false	Obtener el ID canónico de la zona horaria del sistema o el ID normalizado de la zona horaria personalizada para el ID de zona horaria dado
>getDisplayName(bool $dst = false, int $style = IntlTimeZone::DISPLAY_LONG, string|null $locale = null): string|false	(IntlTimeZone) Obtener un nombre de esta zona horaria apto para la presentación al usuario
intltz_get_display_name(IntlTimeZone $timezone, bool $dst = false, int $style = IntlTimeZone::DISPLAY_LONG, string|null $locale = null): string|false	Obtener un nombre de esta zona horaria apto para la presentación al usuario
>getDSTSavings(): int	(IntlTimeZone) Obtener la cantidad de tiempo a añadir a la hora local estándar para obtener la hora local actual
intltz_get_dst_savings(IntlTimeZone $timezone): int	Obtener la cantidad de tiempo a añadir a la hora local estándar para obtener la hora local actual
IntlTimeZone::getEquivalentID(string $timezoneId, int $offset): string|false	Obtener un ID del grupo de equivalencias que incluya el ID dado
intltz_get_equivalent_id(string $timezoneId, int $offset): string|false	Obtener un ID del grupo de equivalencias que incluya el ID dado
>getErrorCode(): int|false	(IntlTimeZone) Obtener el último código de error del objeto
intltz_get_error_code(IntlTimeZone $timezone): int|false	Obtener el último código de error del objeto
>getErrorMessage(): string|false	(IntlTimeZone) Obtener el último mensaje de error del objeto
intltz_get_error_message(IntlTimeZone $timezone): string|false	Obtener el último mensaje de error del objeto
IntlTimeZone::getGMT(): IntlTimeZone	Crear una zona horaria GMT (UTC)
intltz_get_gmt(): IntlTimeZone	Crear una zona horaria GMT (UTC)
>getID(): string|false	(IntlTimeZone) Obtener el ID de la zona horaria
intltz_get_id(IntlTimeZone $timezone): string|false	Obtener el ID de la zona horaria
IntlTimeZone::getIDForWindowsID(string $timezoneId, string|null $region = null): string|false	Translate a Windows timezone into a system timezone
intltz_get_id_for_windows_id(string $timezoneId, string|null $region = null): string|false	Translate a Windows timezone into a system timezone
>getOffset(float $timestamp, bool $local, int $rawOffset, int $dstOffset): bool	(IntlTimeZone) Obtener la zona horaria sin tratar y el índice GMT para el momento dado
intltz_get_offset(IntlTimeZone $timezone, float $timestamp, bool $local, int $rawOffset, int $dstOffset): bool	Obtener la zona horaria sin tratar y el índice GMT para el momento dado
>getRawOffset(): int	(IntlTimeZone) Obtener el índice GMT sin tratar (antes de tomar en cuenta el horario de verano)
intltz_get_raw_offset(IntlTimeZone $timezone): int	Obtener el índice GMT sin tratar (antes de tomar en cuenta el horario de verano)
IntlTimeZone::getRegion(string $timezoneId): string|false	Get the region code associated with the given system time zone ID
intltz_get_region(string $timezoneId): string|false	Get the region code associated with the given system time zone ID
IntlTimeZone::getTZDataVersion(): string|false	Obtener la versión de los datos de zonas horarias actualmente usada por ICU
intltz_get_tz_data_version(): string|false	Obtener la versión de los datos de zonas horarias actualmente usada por ICU
IntlTimeZone::getUnknown(): IntlTimeZone	Get the "unknown" time zone
intltz_get_unknown(): IntlTimeZone	Get the "unknown" time zone
IntlTimeZone::getWindowsID(string $timezoneId): string|false	Translate a system timezone into a Windows timezone
intltz_get_windows_id(string $timezoneId): string|false	Translate a system timezone into a Windows timezone
>hasSameRules(IntlTimeZone $other): bool	(IntlTimeZone) Comprobar si esta zona horaria tiene las mismas reglas e índices que otra
intltz_has_same_rules(IntlTimeZone $timezone, IntlTimeZone $other): bool	Comprobar si esta zona horaria tiene las mismas reglas e índices que otra
>toDateTimeZone(): DateTimeZone|false	(IntlTimeZone) Convertir a un objeto DateTimeZone
intltz_to_date_time_zone(IntlTimeZone $timezone): DateTimeZone|false	Convertir a un objeto DateTimeZone
>useDaylightTime(): bool	(IntlTimeZone) Comprobar si esta zona horaria utiliza el horario de verano
intltz_use_daylight_time(IntlTimeZone $timezone): bool	Comprobar si esta zona horaria utiliza el horario de verano
Locale::acceptFromHttp(string $header): string|false	Intentar encontrar la mejor configuración regional basada en la cabecera "Accept-Language" de HTTP
locale_accept_from_http(string $header): string|false	Intentar encontrar la mejor configuración regional basada en la cabecera "Accept-Language" de HTTP
Locale::canonicalize(string $locale): string|null	Canonizar el string de configuración regional
Locale::composeLocale(array $subtags): string|false	Devolver un ID regional correctamente ordenado y delimitado
locale_compose(array $subtags): string|false	Devolver un ID regional correctamente ordenado y delimitado
Locale::filterMatches(string $languageTag, string $locale, bool $canonicalize = false): bool|null	Comprobar si unfiltro de etiquetas de lenguaje coincide con una configuración regional
locale_filter_matches(string $languageTag, string $locale, bool $canonicalize = false): bool|null	Comprobar si unfiltro de etiquetas de lenguaje coincide con una configuración regional
Locale::getAllVariants(string $locale): array|null	Obtener las variantes de la configuración regional de entrada
locale_get_all_variants(string $locale): array|null	Obtener las variantes de la configuración regional de entrada
Locale::getDefault(): string	Obtener el valor de la configuración regional predeterminada del identificador global 'default_locale' de INTL
locale_get_default(): string	Obtener el valor de la configuración regional predeterminada del identificador global 'default_locale' de INTL
Locale::getDisplayLanguage(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado del lenguaje de la configuración regional de entrada
locale_get_display_language(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado del lenguaje de la configuración regional de entrada
Locale::getDisplayName(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado de la configuración regional de entrada
locale_get_display_name(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado de la configuración regional de entrada
Locale::getDisplayRegion(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado de la región de la configuración regional de entrada
locale_get_display_region(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado de la región de la configuración regional de entrada
Locale::getDisplayScript(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado de la escritura de la configuración regional de entrada
locale_get_display_script(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado de la escritura de la configuración regional de entrada
Locale::getDisplayVariant(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado de las variantes de la configuración regional de entrada
locale_get_display_variant(string $locale, string|null $displayLocale = null): string|false	Devolver un nombre manifiesto debidamente localizado de las variantes de la configuración regional de entrada
Locale::getKeywords(string $locale): array|false|null	Obtener las palabras clave de la configuración regional de entrada
locale_get_keywords(string $locale): array|false|null	Obtener las palabras clave de la configuración regional de entrada
Locale::getPrimaryLanguage(string $locale): string|null	Obtener el lenguaje principal de la configuración regional de entrada
locale_get_primary_language(string $locale): string|null	Obtener el lenguaje principal de la configuración regional de entrada
Locale::getRegion(string $locale): string|null	Obtener la región de la configuración local de entrada
locale_get_region(string $locale): string|null	Obtener la región de la configuración local de entrada
Locale::getScript(string $locale): string|null	Obtener la escritura de la configuración regional de entrada
locale_get_script(string $locale): string|null	Obtener la escritura de la configuración regional de entrada
Locale::lookup(array $languageTag, string $locale, bool $canonicalize = false, string|null $defaultLocale = null): string|null	Busca en la lista de etiquetas de lenguaje la mejor coincidencia para el lenguaje
locale_lookup(array $languageTag, string $locale, bool $canonicalize = false, string|null $defaultLocale = null): string|null	Busca en la lista de etiquetas de lenguaje la mejor coincidencia para el lenguaje
Locale::parseLocale(string $locale): array|null	Devolver un array de claves-valores de los elementos de las subetiquetas del ID regional
locale_parse(string $locale): array|null	Devolver un array de claves-valores de los elementos de las subetiquetas del ID regional
Locale::setDefault(string $locale): true	Establecer la configuración regional predeterminada en tiempo de ejecución
locale_set_default(string $locale): true	Establecer la configuración regional predeterminada en tiempo de ejecución
MessageFormatter::create(string $locale, string $pattern): MessageFormatter|null	Construir un nuevo Formateador de Mensajes
msgfmt_create(string $locale, string $pattern): MessageFormatter|null	Construir un nuevo Formateador de Mensajes
MessageFormatter::formatMessage(string $locale, string $pattern, array $values): string|false	Formateo rápido de un mensaje
msgfmt_format_message(string $locale, string $pattern, array $values): string|false	Formateo rápido de un mensaje
>format(array $values): string|false	(MessageFormatter) Dar formato al mensaje
msgfmt_format(MessageFormatter $formatter, array $values): string|false	Dar formato al mensaje
>getErrorCode(): int	(MessageFormatter) Obtener el código de error de la última operación
msgfmt_get_error_code(MessageFormatter $formatter): int	Obtener el código de error de la última operación
>getErrorMessage(): string	(MessageFormatter) Obtener el texto del error de la última operación
msgfmt_get_error_message(MessageFormatter $formatter): string	Obtener el texto del error de la última operación
>getLocale(): string	(MessageFormatter) Obtener la configuración regional desde la que se creó el formateador
msgfmt_get_locale(MessageFormatter $formatter): string	Obtener la configuración regional desde la que se creó el formateador
>getPattern(): string|false	(MessageFormatter) Obtener el patrón usado por el formateador
msgfmt_get_pattern(MessageFormatter $formatter): string|false	Obtener el patrón usado por el formateador
MessageFormatter::parseMessage(string $locale, string $pattern, string $message): array|false	Procesar rápidamente una cadena de entrada
msgfmt_parse_message(string $locale, string $pattern, string $message): array|false	Procesar rápidamente una cadena de entrada
>parse(string $string): array|false	(MessageFormatter) Procesar la cadena de entrada según un patrón
msgfmt_parse(MessageFormatter $formatter, string $string): array|false	Procesar la cadena de entrada según un patrón
>setPattern(string $pattern): bool	(MessageFormatter) Establecer el patrón usado por el formateador
msgfmt_set_pattern(MessageFormatter $formatter, string $pattern): bool	Establecer el patrón usado por el formateador
Normalizer::getRawDecomposition(string $string, int $form = Normalizer::FORM_C): string|null	Gets the Decomposition_Mapping property for the given UTF-8 encoded code point
normalizer_get_raw_decomposition(string $string, int $form = Normalizer::FORM_C): string|null	Gets the Decomposition_Mapping property for the given UTF-8 encoded code point
Normalizer::isNormalized(string $string, int $form = Normalizer::FORM_C): bool	Comprobar si la cadena proporcionada ya está en la forma de normalización especificada.
normalizer_is_normalized(string $string, int $form = Normalizer::FORM_C): bool	Comprobar si la cadena proporcionada ya está en la forma de normalización especificada.
Normalizer::normalize(string $string, int $form = Normalizer::FORM_C): string|false	Normaliza la entrada provista y devuelve la cadena normalizada
normalizer_normalize(string $string, int $form = Normalizer::FORM_C): string|false	Normaliza la entrada provista y devuelve la cadena normalizada
NumberFormatter::create(string $locale, int $style, string|null $pattern = null): NumberFormatter|null	Crear un formateador de números
numfmt_create(string $locale, int $style, string|null $pattern = null): NumberFormatter|null	Crear un formateador de números
>formatCurrency(float $amount, string $currency): string|false	(NumberFormatter) Dar formato a un valor monetario
numfmt_format_currency(NumberFormatter $formatter, float $amount, string $currency): string|false	Dar formato a un valor monetario
>format(int|float $num, int $type = NumberFormatter::TYPE_DEFAULT): string|false	(NumberFormatter) Dar formato a un número
numfmt_format(NumberFormatter $formatter, int|float $num, int $type = NumberFormatter::TYPE_DEFAULT): string|false	Dar formato a un número
>getAttribute(int $attribute): int|float|false	(NumberFormatter) Obtener un atributo
numfmt_get_attribute(NumberFormatter $formatter, int $attribute): int|float|false	Obtener un atributo
>getErrorCode(): int	(NumberFormatter) Obtener el último código de error del formateador
numfmt_get_error_code(NumberFormatter $formatter): int	Obtener el último código de error del formateador
>getErrorMessage(): string	(NumberFormatter) Obtener el último mensaje de error del formateador
numfmt_get_error_message(NumberFormatter $formatter): string	Obtener el último mensaje de error del formateador
>getLocale(int $type = ULOC_ACTUAL_LOCALE): string|false	(NumberFormatter) Obtener la configuración regional de un formateador
numfmt_get_locale(NumberFormatter $formatter, int $type = ULOC_ACTUAL_LOCALE): string|false	Obtener la configuración regional de un formateador
>getPattern(): string|false	(NumberFormatter) Obtener el patrón del formateador
numfmt_get_pattern(NumberFormatter $formatter): string|false	Obtener el patrón del formateador
>getSymbol(int $symbol): string|false	(NumberFormatter) Obtener el valor de un símbolo
numfmt_get_symbol(NumberFormatter $formatter, int $symbol): string|false	Obtener el valor de un símbolo
>getTextAttribute(int $attribute): string|false	(NumberFormatter) Obtiene un atributo de texto
numfmt_get_text_attribute(NumberFormatter $formatter, int $attribute): string|false	Obtiene un atributo de texto
>parseCurrency(string $string, string $currency, int $offset = null): float|false	(NumberFormatter) Procesa un número monetario
numfmt_parse_currency(NumberFormatter $formatter, string $string, string $currency, int $offset = null): float|false	Procesa un número monetario
>parse(string $string, int $type = NumberFormatter::TYPE_DOUBLE, int $offset = null): int|float|false	(NumberFormatter) Analiza un número
numfmt_parse(NumberFormatter $formatter, string $string, int $type = NumberFormatter::TYPE_DOUBLE, int $offset = null): int|float|false	Analiza un número
>setAttribute(int $attribute, int|float $value): bool	(NumberFormatter) Establecer un atributo
numfmt_set_attribute(NumberFormatter $formatter, int $attribute, int|float $value): bool	Establecer un atributo
>setPattern(string $pattern): bool	(NumberFormatter) Establecer el patrón de un formateador
numfmt_set_pattern(NumberFormatter $formatter, string $pattern): bool	Establecer el patrón de un formateador
>setSymbol(int $symbol, string $value): bool	(NumberFormatter) Establecer un valor de símbolo
numfmt_set_symbol(NumberFormatter $formatter, int $symbol, string $value): bool	Establecer un valor de símbolo
>setTextAttribute(int $attribute, string $value): bool	(NumberFormatter) Set a text attribute
numfmt_set_text_attribute(NumberFormatter $formatter, int $attribute, string $value): bool	Set a text attribute
>count(): int	(ResourceBundle) Obtener el número de elementos de un paquete
resourcebundle_count(ResourceBundle $bundle): int	Obtener el número de elementos de un paquete
ResourceBundle::create(string|null $locale, string|null $bundle, bool $fallback = true): ResourceBundle|null	Crear un paquete de recursos
resourcebundle_create(string|null $locale, string|null $bundle, bool $fallback = true): ResourceBundle|null	Crear un paquete de recursos
>getErrorCode(): int	(ResourceBundle) Obtener el códido del último error del paquete
resourcebundle_get_error_code(ResourceBundle $bundle): int	Obtener el códido del último error del paquete
>getErrorMessage(): string	(ResourceBundle) Obtener el mensaje del último error del paquete
resourcebundle_get_error_message(ResourceBundle $bundle): string	Obtener el mensaje del último error del paquete
>get(string|int $index, bool $fallback = true): mixed	(ResourceBundle) Obtener datos de un paquete
resourcebundle_get(ResourceBundle $bundle, string|int $index, bool $fallback = true): mixed	Obtener datos de un paquete
ResourceBundle::getLocales(string $bundle): array|false	Obtener las configuraciones regionales soportadas
resourcebundle_locales(string $bundle): array|false	Obtener las configuraciones regionales soportadas
>areConfusable(string $string1, string $string2, int $errorCode = null): bool	(Spoofchecker) Comprobar si un texto dado contiene carateres que pueden ser confusos
Spoofchecker()	(new) Constructor
>isSuspicious(string $string, int $errorCode = null): bool	(Spoofchecker) Comprobar si un texto dad contiene caracteres sospechosos
>setAllowedLocales(string $locales): void	(Spoofchecker) Las configuraciones regionales a usar cuando se ejecutan las comprobaciones
>setChecks(int $checks): void	(Spoofchecker) Establecer las comprobaciones a ejecutar
>setRestrictionLevel(int $level): void	(Spoofchecker) Set the restriction level
Transliterator()	(new) Constructor privado para denegar la instanciación
Transliterator::create(string $id, int $direction = Transliterator::FORWARD): Transliterator|null	Crear un transliterador
transliterator_create(string $id, int $direction = Transliterator::FORWARD): Transliterator|null	Crear un transliterador
Transliterator::createFromRules(string $rules, int $direction = Transliterator::FORWARD): Transliterator|null	Crear un transliterador desdes normas
transliterator_create_from_rules(string $rules, int $direction = Transliterator::FORWARD): Transliterator|null	Crear un transliterador desdes normas
>createInverse(): Transliterator|null	(Transliterator) Cerar una transliteración inversa
transliterator_create_inverse(Transliterator $transliterator): Transliterator|null	Cerar una transliteración inversa
>getErrorCode(): int|false	(Transliterator) Obtener el código del último error
transliterator_get_error_code(Transliterator $transliterator): int|false	Obtener el código del último error
>getErrorMessage(): string|false	(Transliterator) Obtener el mensaje del último error
transliterator_get_error_message(Transliterator $transliterator): string|false	Obtener el mensaje del último error
Transliterator::listIDs(): array|false	Obtener los IDs de los transliterardores
transliterator_list_ids(): array|false	Obtener los IDs de los transliterardores
>transliterate(string $string, int $start = ?, int $end = -1): string|false	(Transliterator) Transliterar una cadena
transliterator_transliterate(Transliterator|string $transliterator, string $string, int $start = ?, int $end = -1): string|false	Transliterar una cadena
UConverter(string|null $destination_encoding = null, string|null $source_encoding = null)	(new) Crea un objeto UConverter
>convert(string $str, bool $reverse = false): string|false	(UConverter) Convertir un string de un juego de caracteres a otro
>fromUCallback(int $reason, array $source, int $codePoint, int $error): string|int|array|null	(UConverter) Función de retrollamada "from" predeterminada
UConverter::getAliases(string $name): array|false|null	Obtener los alias del nombre dado
UConverter::getAvailable(): array	Obtener los nombres canónicos de los convertidores disponibles
>getDestinationEncoding(): string|false|null	(UConverter) Obtener la codificación de destino
>getDestinationType(): int|false|null	(UConverter) Obtener el tipo del convertidor de destino
>getErrorCode(): int	(UConverter) Obtener el código del último error del objeto
>getErrorMessage(): string|null	(UConverter) Obtener el último mensaje de error del objeto
>getSourceEncoding(): string|false|null	(UConverter) Obtener la codificación de origen
>getSourceType(): int|false|null	(UConverter) Obtener el tipo de convertidor de origen
UConverter::getStandards(): array|null	Obtener los estándares asociados a los nombres de los convertidores
>getSubstChars(): string|false|null	(UConverter) Obtener los caracteres de sustitución
UConverter::reasonText(int $reason): string	Obtener la representación de string de la razón de la retrollamada
>setDestinationEncoding(string $encoding): bool	(UConverter) Establecer la codificación destino
>setSourceEncoding(string $encoding): bool	(UConverter) Establecer la codificación origen
>setSubstChars(string $chars): bool	(UConverter) Establecer los caracteres de sustitución
>toUCallback(int $reason, string $source, string $codeUnits, int $error): string|int|array|null	(UConverter) Función de retrollamada "to" predeterminada
UConverter::transcode(string $str, string $toEncoding, string $fromEncoding, array|null $options = null): string|false	Convertir un string de un juego de caracteres a otro
IntlDateFormatter()	(new) Date Formatter es una clase concreta que permite el formateo/procesamiento dependiente de la configuración regional de fechas utilizando cadenas de patrones y/o patrones enlatados
IntlChar()	(new) IntlChar proporciona acceso a varios métodos de utilidades que pueden emplearse para obtener información de caracteres Unicode
IntlCodePointBreakIterator()	(new) Este iterador de ruptura identifica los límites entre puntos de código de UTF-8
IntlDatePatternGenerator()	(new) Generates localized date and/or time format pattern strings suitable for use in IntlDateFormatter
IntlException()	(new) Esta clase se usa para generar excepciones ocurridos dentro de las funciones de intl
IntlIterator()	(new) Esta clase representa objetos iteradores a lo largo de la extensión intl siempre que el iterador no pueda ser identificado con ningún otro objeto proporcionado por la extensión
IntlPartsIterator()	(new) Los objetos de esta clase se pueden obtener desde objetos IntlBreakIterator
Locale()	(new) Algunos ejemplos de identificadores: en-US (Inglés, Estados Unidos) zh-Hant-TW (Chino, Tradicional, Taiwán) fr-CA, fr-FR (Francés para Canadá y Francia respectivamente)
MessageFormatter()	(new) MessageFormatter es una clase concreta que permite a los usuarios producir mensajes concatenados neutrales al lenguaje
Normalizer()	(new) El Consorcio Unicode ha definido varias formas de normalización que reflejan las diferentes necesidades de las aplicaciones: Forma de Normalización D (NFD) - Descomposición Canónica Forma de Normalización C (NFC) - Descomposición Canónica seguida de Composición Canónica Forma de Normalización KD (NFKD) - Descomposición por Compatibilidad Forma de Normalización KC (NFKC) - Descomposición por Compatibilidad seguida de Composición Canónica Las diferentes formas están definidas en términos de un conjunto de transformaciones realizadas sobre el texto, tranformaciones que están expresadas por un algoritmo y un conjunto de ficheros de datos
NumberFormatter()	(new) Para los valores monetarios se puede utilizar el tipo de formato de moneda para crear un formateador que devuelva una cadena con el número formateado y el símbolo de moneda apropiada
ResourceBundle()	(new) Los productos de software regionalizados a menudo requieren conjuntos de datos que necesitan ser personalizados dependiendo de la configuración regional actual, p
mb_check_encoding(array|string|null $value = null, string|null $encoding = null): bool	Comprueba si el string es válido para a la codificación especificada
mb_chr(int $codepoint, string|null $encoding = null): string|false	Return character by Unicode code point value
mb_convert_case(string $string, int $mode, string|null $encoding = null): string	Realiza una conversión a mayúsculas/minúsculas de un string
mb_convert_encoding(array|string $string, string $to_encoding, array|string|null $from_encoding = null): array|string|false	Convierte una codificación de caracteres
mb_convert_kana(string $string, string $mode = "KV", string|null $encoding = null): string	Convierte un "kana" a otro ("zen-kaku", "han-kaku" y más)
mb_convert_variables(string $to_encoding, array|string $from_encoding, mixed $var, mixed ...$vars): string|false	Convierte la codificación de variables
mb_decode_mimeheader(string $string): string	Decodifica un string en el campo de cabecera MIME
mb_decode_numericentity(string $string, array $map, string|null $encoding = null): string	Decodifica referencias a string numéricas de HTML en caracteres
mb_detect_encoding(string $string, array|string|null $encodings = null, bool $strict = false): string|false	Detecta la codificación de caracteres
mb_detect_order(array|string|null $encoding = null): array|bool	Establece/obtiene el orden de detección de codificaciones de caracteres
mb_encode_mimeheader(string $string, string|null $charset = null, string|null $transfer_encoding = null, string $newline = "\r\n", int $indent = ?): string	Codifica un string para la cabecera MIME
mb_encode_numericentity(string $string, array $map, string|null $encoding = null, bool $hex = false): string	Convierte caracteres a referencias de string numéricas de HTML
mb_encoding_aliases(string $encoding): array	Obtiene los alias de un tipo de codificación conocido
mb_ereg_match(string $pattern, string $string, string|null $options = null): bool	Compararción de expresiones regulares para strings multibyte
mb_ereg_replace_callback(string $pattern, callable $callback, string $string, string|null $options = null): string|false|null	Realiza una búsqueda y sustitución de una expresión regular con soporte multibyte usando una llamada de retorno
mb_ereg_replace(string $pattern, string $replacement, string $string, string|null $options = null): string|false|null	Reemplaza una expresión regular con soporte multibyte
mb_ereg_search_getpos(): int	Devuelve la posición de inicio para la siguiente comparación de una expresión regular
mb_ereg_search_getregs(): array|false	Recupera el resultado de la última comparación de expresión regular multibyte
mb_ereg_search_init(string $string, string|null $pattern = null, string|null $options = null): bool	Configura el string y la expresión regular para una comparación de expresiones regulares multibyte
mb_ereg_search_pos(string|null $pattern = null, string|null $options = null): array|false	Devuelve la posición y la longitud de una parte coincidente de la expresión regular multibyte para un string multibyte predefinido
mb_ereg_search_regs(string|null $pattern = null, string|null $options = null): array|false	Devuelve la parte coincidente de una expresión regular multibyte
mb_ereg_search_setpos(int $offset): bool	Establece el punto de inicio de la siguiente comparación de una expresión regular
mb_ereg_search(string|null $pattern = null, string|null $options = null): bool	Comparación de expresiones regulares multibyte para un string multibyte predefinido
mb_ereg(string $pattern, string $string, array $matches = null): bool	Comparación de expresiones regulares con soporte multibyte
mb_eregi_replace(string $pattern, string $replacement, string $string, string|null $options = null): string|false|null	Reemplaza una expresión regular con soporte multibyte ignorando mayúsculas/minúsculas
mb_eregi(string $pattern, string $string, array $matches = null): bool	Comparación de expresiones regulares ignorando mayúsculas/minúsculas con soporte multibyte
mb_get_info(string $type = "all"): array|string|int|false|null	Obtiene la configuración interna de mbstring
mb_http_input(string|null $type = null): array|string|false	Detecta la codificación de caracteres de entrada HTTP
mb_http_output(string|null $encoding = null): string|bool	Establece/obtiene la codificación de caracteres de salida HTTP
mb_internal_encoding(string|null $encoding = null): string|bool	Lee/modifica la codificación interna
mb_language(string|null $language = null): string|bool	Establece/obtiene el idioma actual
mb_lcfirst(string $string, string|null $encoding = null): string	Make a string's first character lowercase
mb_list_encodings(): array	Devuelve un array con todos los tipos de codificaciones admitidas
mb_ltrim(string $string, string|null $characters = null, string|null $encoding = null): string	Strip whitespace (or other characters) from the beginning of a string
mb_ord(string $string, string|null $encoding = null): int|false	Get Unicode code point of character
mb_output_handler(string $string, int $status): string	Función de llamada de retorno que convierte la codificación de caracteres en búfer de salida
mb_parse_str(string $string, array $result): bool	Analiza datos GET/POST/COOKIE y establece varialbes globales
mb_preferred_mime_name(string $encoding): string|false	Obtener un string del conjunto de caracteres del MIME
mb_regex_encoding(string|null $encoding = null): string|bool	Establecer/obtener la codificación de caracteres para expresiones regulares multibyte
mb_regex_set_options(string|null $options = null): string	Establece/obtiene las opciones predeterminadas para las funciones mbregex
mb_rtrim(string $string, string|null $characters = null, string|null $encoding = null): string	Strip whitespace (or other characters) from the end of a string
mb_scrub(string $string, string|null $encoding = null): string	Replace ill-formed byte sequences with the substitute character
mb_send_mail(string $to, string $subject, string $message, array|string $additional_headers = [], string|null $additional_params = null): bool	Envía un correo codificado
mb_split(string $pattern, string $string, int $limit = -1): array|false	Divide una string en un array utilizando una expresión regular multibyte
mb_str_pad(string $string, int $length, string $pad_string = " ", int $pad_type = STR_PAD_RIGHT, string|null $encoding = null): string	Pad a multibyte string to a certain length with another multibyte string
mb_str_split(string $string, int $length = 1, string|null $encoding = null): array	Given a multibyte string, return an array of its characters
mb_strcut(string $string, int $start, int|null $length = null, string|null $encoding = null): string	Obtener parte de un string
mb_strimwidth(string $string, int $start, int $width, string $trim_marker = "", string|null $encoding = null): string	Obtiene un string truncado con el ancho especificado
mb_stripos(string $haystack, string $needle, int $offset = ?, string|null $encoding = null): int|false	Busca la posición de la primera ocurrencia de un string dentro de otro, insensible a mayúsculas/minúsculas
mb_stristr(string $haystack, string $needle, bool $before_needle = false, string|null $encoding = null): string|false	Busca la primera ocurrencia de un string dentro de otro, insensible a mayúsculas/minúsculas
mb_strlen(string $string, string|null $encoding = null): int	Obtiene la longitud de una cadena de caracteres
mb_strpos(string $haystack, string $needle, int $offset = ?, string|null $encoding = null): int|false	Busca la posición de la primera ocurrencia de un string en otro string
mb_strrchr(string $haystack, string $needle, bool $before_needle = false, string|null $encoding = null): string|false	Busca la última ocurrencia de un carácter de un string dentro de otro
mb_strrichr(string $haystack, string $needle, bool $before_needle = false, string|null $encoding = null): string|false	Busca la última ocurrencia de un carácter de un string dentro de otro, insensible a mayúsculas/minúsculas
mb_strripos(string $haystack, string $needle, int $offset = ?, string|null $encoding = null): int|false	Busca la posicion de la última ocurrencia de un string dentro de otro string, insensible a mayúsculas/minúsculas
mb_strrpos(string $haystack, string $needle, int $offset = ?, string|null $encoding = null): int|false	Busca la posicion de la última ocurrencia de un string en otro string
mb_strstr(string $haystack, string $needle, bool $before_needle = false, string|null $encoding = null): string|false	Busca la primera ocurrencia de un string dentro de otro
mb_strtolower(string $string, string|null $encoding = null): string	Convierte una cadena de caracteres a minúsculas
mb_strtoupper(string $string, string|null $encoding = null): string	Convierte un string en mayúsculas
mb_strwidth(string $string, string|null $encoding = null): int	Devuelve el ancho de un string
mb_substitute_character(string|int|null $substitute_character = null): string|int|bool	Establece/obtiene un carácter de sustitución
mb_substr_count(string $haystack, string $needle, string|null $encoding = null): int	Cuenta el número de ocurrencias de un substring
mb_substr(string $string, int $start, int|null $length = null, string|null $encoding = null): string	Obtiene parte de una cadena de caracteres
mb_trim(string $string, string|null $characters = null, string|null $encoding = null): string	Strip whitespace (or other characters) from the beginning and end of a string
mb_ucfirst(string $string, string|null $encoding = null): string	Make a string's first character uppercase
mhash_count(): int	Gets the highest available hash ID
mhash_get_block_size(int $algo): int|false	Gets the block size of the specified hash
mhash_get_hash_name(int $algo): string|false	Gets the name of the specified hash
mhash_keygen_s2k(int $algo, string $password, string $salt, int $length): string|false	Generates a key
mhash(int $algo, string $data, string|null $key = null): string|false	Computes hash
pcntl_alarm(int $seconds): int	Programa una alarma para enviar una señal
pcntl_async_signals(bool|null $enable = null): bool	Activa/desactiva la gestión asíncrona de las señales o devuelve el antiguo parámetro
pcntl_errno()	Alias of pcntl_get_last_error
pcntl_exec(string $path, array $args = [], array $env_vars = []): bool	Ejecuta el programa indicado en el espacio actual de procesos
pcntl_fork(): int	Duplica el proceso actual
pcntl_get_last_error(): int	Recupera el número del error generado por la última función pcntl utilizada
pcntl_getcpuaffinity(int|null $pid = null): bool|array	Devuelve la afinidad de CPU de un proceso
pcntl_getpriority(int|null $process_id = null, int $mode = PRIO_PROCESS): int|false	Devuelve la prioridad de un proceso
pcntl_rfork(int $flags, int $signal = ?): int	Manipula los recursos del proceso
pcntl_setcpuaffinity(int|null $pid = null, array $hmask = ?): bool	Define la afinidad de CPU de un proceso
pcntl_setpriority(int $priority, int|null $process_id = null, int $mode = PRIO_PROCESS): bool	Cambia la prioridad de un proceso
pcntl_signal_dispatch(): bool	Llama a los gestores de señales para cada señal en espera
pcntl_signal_get_handler(int $signal): callable|int	Recupera el gestor actual para la señal especificada
pcntl_signal(int $signal, callable|int $handler, bool $restart_syscalls = true): bool	Instala un gestor de señales
pcntl_sigprocmask(int $mode, array $signals, array $old_signals = null): bool	Lista y configura las señales bloqueadas
pcntl_sigtimedwait(array $signals, array $info = [], int $seconds = ?, int $nanoseconds = ?): int|false	Espera una señal en un tiempo dado
pcntl_sigwaitinfo(array $signals, array $info = []): int|false	Espera una señal
pcntl_strerror(int $error_code): string	Recupera el mensaje de error del sistema asociado con el errno proporcionado
pcntl_unshare(int $flags): bool	Disocia partes del contexto de ejecución del proceso
pcntl_wait(int $status, int $flags = ?, array $resource_usage = []): int	Espera o devuelve el estado de un proceso hijo
pcntl_waitid(int $idtype = P_ALL, int|null $id = null, array $info = [], int $flags = WEXITED): bool	Espera a que un proceso hijo cambie de estado
pcntl_waitpid(int $process_id, int $status, int $flags = ?, array $resource_usage = []): int	Espera la finalización de la ejecución de un proceso hijo
pcntl_wexitstatus(int $status): int|false	Devuelve el código de un proceso hijo terminado
pcntl_wifexited(int $status): bool	Verifica si el código de retorno representa una finalización normal
pcntl_wifsignaled(int $status): bool	Devuelve true si el código de estado representa una terminación debido a una señal
pcntl_wifstopped(int $status): bool	Devuelve true si el proceso hijo está detenido
pcntl_wstopsig(int $status): int|false	Devuelve la señal que causó la detención del proceso hijo
pcntl_wtermsig(int $status): int|false	Devuelve la señal que causó el término del proceso hijo
>beginTransaction(): bool	(PDO) Inicia una transacción
>commit(): bool	(PDO) Consigna una transacción
PDO::connect(string $dsn, string|null $username = null, string|null $password = null, array|null $options = null): static	Connect to a database and return a PDO subclass for drivers that support it
PDO(string $dsn, string|null $username = null, string|null $password = null, array|null $options = null)	(new) Crea una instancia de PDO que representa una conexión a una base de datos
>errorCode(): string|null	(PDO) Obtiene un SQLSTATE asociado con la última operación en el manejador de la base de datos
>errorInfo(): array	(PDO) Obtiene información extendida del error asociado con la última operación del manejador de la base de datos
>exec(string $statement): int|false	(PDO) Ejecuta una sentencia SQL y devuelve el número de filas afectadas
>getAttribute(int $attribute): mixed	(PDO) Devuelve un atributo de la conexión a la base de datos
PDO::getAvailableDrivers(): array	Devuelve un array con los controladores de PDO disponibles
pdo_drivers(): array	Devuelve un array con los controladores de PDO disponibles
>inTransaction(): bool	(PDO) Comprueba si una transacción está activa
>lastInsertId(string|null $name = null): string|false	(PDO) Devuelve el ID de la última fila o secuencia insertada
>prepare(string $query, array $options = []): PDOStatement|false	(PDO) Prepara una sentencia para su ejecución y devuelve un objeto sentencia
>query(string $query, int|null $fetchMode = null): PDOStatement|false	(PDO) Ejecuta una sentencia SQL, devolviendo un conjunto de resultados como un objeto PDOStatement
>query(string $query, int|null $fetchMode = PDO::FETCH_COLUMN, int $colno): PDOStatement|false	(PDO) Ejecuta una sentencia SQL, devolviendo un conjunto de resultados como un objeto PDOStatement
>query(string $query, int|null $fetchMode = PDO::FETCH_CLASS, string $classname, array $constructorArgs): PDOStatement|false	(PDO) Ejecuta una sentencia SQL, devolviendo un conjunto de resultados como un objeto PDOStatement
>query(string $query, int|null $fetchMode = PDO::FETCH_INTO, object $object): PDOStatement|false	(PDO) Ejecuta una sentencia SQL, devolviendo un conjunto de resultados como un objeto PDOStatement
>quote(string $string, int $type = PDO::PARAM_STR): string|false	(PDO) Entrecomilla una cadena de caracteres para usarla en una consulta
>rollBack(): bool	(PDO) Revierte una transacción
>setAttribute(int $attribute, mixed $value): bool	(PDO) Establece un atributo
>bindColumn(string|int $column, mixed $var, int $type = PDO::PARAM_STR, int $maxLength = ?, mixed $driverOptions = null): bool	(PDOStatement) Vincula una columna a una variable de PHP
>bindParam(string|int $param, mixed $var, int $type = PDO::PARAM_STR, int $maxLength = ?, mixed $driverOptions = null): bool	(PDOStatement) Vincula un parámetro al nombre de variable especificado
>bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool	(PDOStatement) Vincula un valor a un parámetro
>closeCursor(): bool	(PDOStatement) Cierra un cursor, habilitando a la sentencia para que sea ejecutada otra vez
>columnCount(): int	(PDOStatement) Devuelve el número de columnas de un conjunto de resultados
>debugDumpParams(): bool|null	(PDOStatement) Vuelca un comando preparado de SQL
>errorCode(): string|null	(PDOStatement) Obtiene el SQLSTATE asociado con la última operación del gestor de sentencia
>errorInfo(): array	(PDOStatement) Obtiene información ampliada del error asociado con la última operación del gestor de sentencia
>execute(array|null $params = null): bool	(PDOStatement) Ejecuta una sentencia preparada
>fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = ?): mixed	(PDOStatement) Obtiene la siguiente fila de un conjunto de resultados
>fetchAll(int $mode = PDO::FETCH_DEFAULT): array	(PDOStatement) Devuelve un array que contiene todas las filas del conjunto de resultados
>fetchAll(int $mode = PDO::FETCH_COLUMN, int $column): array	(PDOStatement) Devuelve un array que contiene todas las filas del conjunto de resultados
>fetchAll(int $mode = PDO::FETCH_CLASS, string $class, array|null $constructorArgs): array	(PDOStatement) Devuelve un array que contiene todas las filas del conjunto de resultados
>fetchAll(int $mode = PDO::FETCH_FUNC, callable $callback): array	(PDOStatement) Devuelve un array que contiene todas las filas del conjunto de resultados
>fetchColumn(int $column = ?): mixed	(PDOStatement) Devuelve una única columna de la siguiente fila de un conjunto de resultados
>fetchObject(string|null $class = "stdClass", array $constructorArgs = []): object|false	(PDOStatement) Obtiene la siguiente fila y la devuelve como un objeto
>getAttribute(int $name): mixed	(PDOStatement) Recupera un atributo de sentencia
>getColumnMeta(int $column): array|false	(PDOStatement) Devuelve metadatos de una columna de un conjunto de resultados
>getIterator(): Iterator	(PDOStatement) Gets result set iterator
>nextRowset(): bool	(PDOStatement) Avanza hasta el siguiente conjunto de filas de un gestor de sentencia multiconjunto de filas
>rowCount(): int	(PDOStatement) Devuelve el número de filas afectadas por la última sentencia SQL
>setAttribute(int $attribute, mixed $value): bool	(PDOStatement) Establece un atributo de sentencia
>setFetchMode(int $mode): bool	(PDOStatement) Establece el modo de obtención para esta sentencia
>setFetchMode(int $mode = PDO::FETCH_COLUMN, int $colno): bool	(PDOStatement) Establece el modo de obtención para esta sentencia
>setFetchMode(int $mode = PDO::FETCH_CLASS, string $class, array|null $constructorArgs = null): bool	(PDOStatement) Establece el modo de obtención para esta sentencia
>setFetchMode(int $mode = PDO::FETCH_INTO, object $object): bool	(PDOStatement) Establece el modo de obtención para esta sentencia
PDOException()	(new) Representa un error generado por PDO
PDORow()	(new) Represents a row from a result set returned by PDOStatement::fetch called with PDO_FETCH_LAZY fetch mode
PDOStatement()	(new) Representa una sentencia preparada y, después de la ejecución de la instrucción, un conjunto de resultados asociados
>addEmptyDir(string $directory): void	(Phar) Añadir un directorio vacío al archvo phar
>addFile(string $filename, string|null $localName = null): void	(Phar) Añadir un fichero desde el sistema de ficheros al archivo phar
>addFromString(string $localName, string $contents): void	(Phar) Añadir un fichero desde un string al archivo phar
Phar::apiVersion(): string	Devolver la versión de la API
>buildFromDirectory(string $directory, string $pattern = ""): array	(Phar) Construir un archivo phar desde los ficheros de un directorio
>buildFromIterator(Traversable $iterator, string|null $baseDirectory = null): array	(Phar) Construir un archivo phar desde un iterador
Phar::canCompress(int $compression = ?): bool	Devuelve si la extensión phar soporta la compresión usando zlib o bzip2
Phar::canWrite(): bool	Devolver si la extensión phar soporta la escritura y creación de archivos phar
>compress(int $compression, string|null $extension = null): Phar|null	(Phar) Comprimir el archivo Phar entero usando la compresión Gzip o Bzip2
>compressFiles(int $compression): void	(Phar) Comprime todos los ficheros del archivo Phar actual
Phar(string $filename, int $flags = FilesystemIterator::SKIP_DOTS | FilesystemIterator::UNIX_PATHS, string|null $alias = null)	(new) Construir un objeto de archivo Phar
>convertToData(int|null $format = null, int|null $compression = null, string|null $extension = null): PharData|null	(Phar) Convertir un archivo phar en un fichero tar o zip no ejecutable
>convertToExecutable(int|null $format = null, int|null $compression = null, string|null $extension = null): Phar|null	(Phar) Convertir un archivo phar en otro formato de archivo phar ejecutable
>copy(string $from, string $to): true	(Phar) Copiar un fichero interno de un archivo phar a otro fichero nuevo dentro del phar
>count(int $mode = COUNT_NORMAL): int	(Phar) Devuelve el número de entradas (ficheros) en el archivo Phar
Phar::createDefaultStub(string|null $index = null, string|null $webIndex = null): string	Crear una rutina de interoperabilidad específica del formato de fichero phar
>decompress(string|null $extension = null): Phar|null	(Phar) Descomprimir un archivo Phar entero
>decompressFiles(): true	(Phar) Descomprimir todos los ficheros del archivo Phar actual
>delMetadata(): true	(Phar) Eliminar la metainformación global del phar
>delete(string $localName): true	(Phar) Borrar un fichero dentro de un archivo phar
>extractTo(string $directory, array|string|null $files = null, bool $overwrite = false): bool	(Phar) Extraer el contenido de un archivo phar a un directorio
>getAlias(): string|null	(Phar) Get the alias for Phar
>getMetadata(array $unserializeOptions = []): mixed	(Phar) Devolver la metainformación de un archivo phar
>getModified(): bool	(Phar) Devolver si el phar fue modificado
>getPath(): string	(Phar) Get the real path to the Phar archive on disk
>getSignature(): array|false	(Phar) Devolver la firma MD5/SHA1/SHA256/SHA512/OpenSSL de un archivo Phar
>getStub(): string	(Phar) Devolver el cargador de PHP o la rutina de interoperabilidad de un archivo Phar
Phar::getSupportedCompression(): array	Devolver un array de los algoritmos de compresión soportados
Phar::getSupportedSignatures(): array	Devolver un array con los tipos de firmas soportados
>getVersion(): string	(Phar) Devolver información de la versión del archivo Phar
>hasMetadata(): bool	(Phar) Devolver si el phar tiene metainformación global
Phar::interceptFileFuncs(): void	Ordenar a phar interceptar fopen, file_get_contents, opendir, y todas las funciones relacionadas con estadísticas
>isBuffering(): bool	(Phar) Determinar si las operaciones de escritura de Phar está siendo almacenadas en buffer, o están siendo volcadas directamente al disco
>isCompressed(): int|false	(Phar) Devuelve Phar::GZ oPHAR::BZ2 si el archivo phar entero está comprimido (.tar.gz/tar.bz, etc.)
>isFileFormat(int $format): bool	(Phar) Devolver true si el archivo phar está basado en el formato de fichero tar/phar/zip dependiendo del parámetro
Phar::isValidPharFilename(string $filename, bool $executable = true): bool	Devolver si el nombre de fichero dado es un nombre de fichero phar válido
>isWritable(): bool	(Phar) Devolver si el archivo phar se puede modificar
Phar::loadPhar(string $filename, string|null $alias = null): bool	Cargar cualquier archivo phar con un alias
Phar::mapPhar(string|null $alias = null, int $offset = ?): bool	Leer el fichero (un phar) que está en ejecución y registrar su manifiesto
Phar::mount(string $pharPath, string $externalPath): void	Montar un fichero o ruta externos en una ubicación virtual dentro de un archivo phar
Phar::mungServer(array $variables): void	Definir una lista de hasta 4 variables $_SERVER que debería ser modificadas para la ejecución
>offsetExists(string $localName): bool	(Phar) Determina si un fichero existe en un phar
>offsetGet(string $localName): SplFileInfo	(Phar) Obtener un objeto de la clase PharFileInfo para un fichero específico
>offsetSet(string $localName, resource|string $value): void	(Phar) Establecer el contenido de un fichero interno a aquel de un fichero externo
>offsetUnset(string $localName): void	(Phar) Eliminar un fichero de un phar
Phar::running(bool $returnPhar = true): string	Devolover la ruta completa del disco o el URL completo de phar del archivo Phar que está en ejecución
>setAlias(string $alias): true	(Phar) Establecer el alias para un archivo Phar
>setDefaultStub(string|null $index = null, string|null $webIndex = null): true	(Phar) Establecer el cargador o la rutina de interoperabilidad de un archivo Phar al cargador predeterminado
>setMetadata(mixed $metadata): void	(Phar) Establecer la metainformación de un archivo phar
>setSignatureAlgorithm(int $algo, string|null $privateKey = null): void	(Phar) Establecer el algoritmo de firma para un phar y aplicarlo
>setStub(resource|string $stub, int $length = -1): bool	(Phar) Establecer el cargador de PHP o la rutina de interoperabilidad de un archivo Phar
>startBuffering(): void	(Phar) Iniciar las operaciones de escritura en buffer de Phar, no modifica el objeto Phar del disco
>stopBuffering(): void	(Phar) Detener las peticiones de escritura en buffer del archivo Phar, y guardar los cambios en disco
Phar::unlinkArchive(string $filename): true	Elimiar completamente un archivo phar del disco y de la memoria
Phar::webPhar(string|null $alias = null, string|null $index = null, string|null $fileNotFoundScript = null, array $mimeTypes = [], callable|null $rewrite = null): void	mapPhar para archivos phar basados en web. Controlador principal para aplicaciones web
>addEmptyDir(string $directory): void	(PharData) Añadir un directorio vacío al archivo tar/zip
>addFile(string $filename, string|null $localName = null): void	(PharData) Añadir un fichero desde el sistema de ficheros al archivo tar/zip
>addFromString(string $localName, string $contents): void	(PharData) Añadir un fichero desde el sistema de ficheros al archivo tar/zip
>buildFromDirectory(string $directory, string $pattern = ""): array	(PharData) Construir un archivo tar/zip desde los ficheros de un directorio
>buildFromIterator(Traversable $iterator, string|null $baseDirectory = null): array	(PharData) Construir un archivo tar o zip desde un iterador
>compress(int $compression, string|null $extension = null): PharData|null	(PharData) Comprimir el archivo tar/zip entero usando la compresión Gzip o Bzip2
>compressFiles(int $compression): void	(PharData) Comprime todos los ficheros del archivo tar/zip actual
PharData(string $filename, int $flags = FilesystemIterator::SKIP_DOTS | FilesystemIterator::UNIX_PATHS, string|null $alias = null, int $format = ?)	(new) Construir un objeto de archivo tar o zip no ejecutable
>convertToData(int|null $format = null, int|null $compression = null, string|null $extension = null): PharData|null	(PharData) Convertir un archivo phar en un fichero tar o zip no ejecutable
>convertToExecutable(int|null $format = null, int|null $compression = null, string|null $extension = null): Phar|null	(PharData) Convertir un archivo tar/zip no ejecutable en un archivo phar ejecutable
>copy(string $from, string $to): true	(PharData) Copiar un fichero interno de un archivo phar a otro fichero nuevo dentro del phar
>decompress(string|null $extension = null): PharData|null	(PharData) Descomprimir un archivo Phar entero
>decompressFiles(): true	(PharData) Descomprimir todos los ficheros del archivo zip actual
>delMetadata(): true	(PharData) Eliminar la metainformación global de un archivo zip
>delete(string $localName): true	(PharData) Borrar un fichero dentro de un archivo tar/zip
>extractTo(string $directory, array|string|null $files = null, bool $overwrite = false): bool	(PharData) Extraer el contenido de un archivo tar/zip a un directorio
>isWritable(): bool	(PharData) Devolver si el archivo tar/zip se puede modificar
>offsetSet(string $localName, resource|string $value): void	(PharData) Establecer el contenido de un fichero dentro de un tar/zip a aquel de un fichero o cadena externos
>offsetUnset(string $localName): void	(PharData) Eliminar un ficerho de un archivo tar/zip
>setAlias(string $alias): bool	(PharData) función sin sentido (Phar::setAlias no es válido para PharData)
>setDefaultStub(string|null $index = null, string|null $webIndex = null): bool	(PharData) función sin sentido (Phar::setStub no es válido para PharData)
>setMetadata(mixed $metadata): void	(PharData) Establecer la metainformación de un archivo phar
>setSignatureAlgorithm(int $algo, string|null $privateKey = null): void	(PharData) Establecer el algoritmo de firma para un phar y aplicarlo
>setStub(string $stub, int $len = -1): bool	(PharData) función sin sentido (Phar::setStub no es válido para PharData)
>chmod(int $perms): void	(PharFileInfo) Esteblecer los bits de permiso específicos del fichero
>compress(int $compression): true	(PharFileInfo) Comprimir la entrada del Phar actual con la compresión zlib o bzip2
PharFileInfo(string $filename)	(new) Construir un objeto de entrada Phar
>decompress(): true	(PharFileInfo) Descomprimir la entrada Phar actual dentro del phar
>delMetadata(): true	(PharFileInfo) Eliminar la metainformación de una entrada
>getCRC32(): int	(PharFileInfo) Devolver el códido CRC32 o lanzar una exepción si la CRC no ha sido verificado
>getCompressedSize(): int	(PharFileInfo) Devolver el tamaño real de un fichero (con compresión) dentro de un archivo Phar
>getContent(): string	(PharFileInfo) Get the complete file contents of the entry
>getMetadata(array $unserializeOptions = []): mixed	(PharFileInfo) Devolver la metainformación específica de un fichero almacenada con un fichero
>getPharFlags(): int	(PharFileInfo) Devolver las banderas de una entrada de fichero
>hasMetadata(): bool	(PharFileInfo) Devolver la metainformación de una entrada
>isCRCChecked(): bool	(PharFileInfo) Devolver si la entrada de fichero tiene su CRC verificada
>isCompressed(int|null $compression = null): bool	(PharFileInfo) Devolver si la entrada está comprimida
>setMetadata(mixed $metadata): void	(PharFileInfo) Establecer la metainformación específica de un fichero almacenda con un fichero
PharException()	(new) La clase PharException ofrece una excepción de clase específica de phar para bloques try/catch
phpdbg_break_file(string $file, int $line): void	Inserts a breakpoint at a line in a file
phpdbg_break_function(string $function): void	Inserts a breakpoint at entry to a function
phpdbg_break_method(string $class, string $method): void	Inserts a breakpoint at entry to a method
phpdbg_break_next(): void	Inserts a breakpoint at the next opcode
phpdbg_clear(): void	Clears all breakpoints
phpdbg_color(int $element, string $color): void	Sets the color of certain elements
phpdbg_end_oplog(array $options = []): array|null	
phpdbg_exec(string $context): string|bool	Attempts to set the execution context
phpdbg_get_executable(array $options = []): array	
phpdbg_prompt(string $string): void	Sets the command prompt
phpdbg_start_oplog(): void	
posix_access(string $filename, int $flags = ?): bool	Determinar la accesibilidad de un archivo
posix_ctermid(): string|false	Obtener el nombre de la ruta del terminal controlador
posix_eaccess(string $filename, int $flags = ?): bool	Determine accessibility of a file
posix_errno()	Alias of posix_get_last_error
posix_fpathconf(resource|int $file_descriptor, int $name): int|false	Returns the value of a configurable limit
posix_get_last_error(): int	Recuperar el número de error establecido por la última función posix que ha fallado
posix_getcwd(): string|false	Nombre de la ruta del directorio actual
posix_getegid(): int	Devuelve el ID efectivo de grupo del proceso actual
posix_geteuid(): int	Devolver el ID efectivo de usuario del proceso actual
posix_getgid(): int	Devuelve el ID real de grupo del proceso actual
posix_getgrgid(int $group_id): array|false	Devolver información sobre un grupo mediante un id de grupo
posix_getgrnam(string $name): array|false	Devolver información sobre un grupo mediante su nombre
posix_getgroups(): array|false	Devolver el conjunto de grupos del proceso actual
posix_getlogin(): string|false	Devuelve el nombre del inicio de sesión
posix_getpgid(int $process_id): int|false	Obtener el id del grupo de procesos para un control de trabajo
posix_getpgrp(): int	Devolver el identificador de grupo de proceso actual
posix_getpid(): int	Devolver el identificador del proceso actual
posix_getppid(): int	Devolver el identificador del proceso padre
posix_getpwnam(string $username): array|false	Devolver información sobre un usuario mediante su nombre de usuario
posix_getpwuid(int $user_id): array|false	Devolver información sobre un usuario mediante su id de usuario
posix_getrlimit(int|null $resource = null): array|false	Devolver información sobre los límites de recursos del sistema
posix_getsid(int $process_id): int|false	Obtener el sid actual del proceos
posix_getuid(): int	Devolver el ID real de usuario del proceso actual
posix_initgroups(string $username, int $group_id): bool	Calcular la lista de acceso al grupo
posix_isatty(resource|int $file_descriptor): bool	Determinar si un descriptor de fichero es un terminal interactiva
posix_kill(int $process_id, int $signal): bool	Enviar una señal a un proceso
posix_mkfifo(string $filename, int $permissions): bool	Crear un archivo especial fifo (un pipe con nombre)
posix_mknod(string $filename, int $flags, int $major = ?, int $minor = ?): bool	Crear un fichero especial u ordinario (POSIX.1)
posix_pathconf(string $path, int $name): int|false	Returns the value of a configurable limit
posix_setegid(int $group_id): bool	Establecer el GID efectivo del proceso actual
posix_seteuid(int $user_id): bool	Establecer el UID efectivo del proceso actual
posix_setgid(int $group_id): bool	Establecer el GID de proceso actual
posix_setpgid(int $process_id, int $process_group_id): bool	Establecer el id de grupo de procesos para el control de trabajo
posix_setrlimit(int $resource, int $soft_limit, int $hard_limit): bool	Establecer los límites de recursos del sistema
posix_setsid(): int	Hacer del proceso actual un líder de sesión
posix_setuid(int $user_id): bool	Establecer el UID del proceso actual
posix_strerror(int $error_code): string	Recuperar el mensaje de error del sistema asociado con el errno dado
posix_sysconf(int $conf_id): int	Returns system runtime information
posix_times(): array|false	Obtener los tiempos de procesos
posix_ttyname(resource|int $file_descriptor): string|false	Determinar el nombre del dispositivo terminal
posix_uname(): array|false	Obtener el nombre del sistema
ftok(string $filename, string $project_id): int	Convertir un nombre de ruta y un identificador de proyecto a una clave IPC de System V
msg_get_queue(int $key, int $permissions = 0666): SysvMessageQueue|false	Crear o adjuntar a una cola de mensajes
msg_queue_exists(int $key): bool	Verificar si una cola de mensajes existe
msg_receive(SysvMessageQueue $queue, int $desired_message_type, int $received_message_type, int $max_message_size, mixed $message, bool $unserialize = true, int $flags = ?, int $error_code = null): bool	Recibir un mensaje de la cola de mensajes
msg_remove_queue(SysvMessageQueue $queue): bool	Destruir una cola de mensajes
msg_send(SysvMessageQueue $queue, int $message_type, string|int|float|bool $message, bool $serialize = true, bool $blocking = true, int $error_code = null): bool	Eviar un mensaje a una cola de mensajes
msg_set_queue(SysvMessageQueue $queue, array $data): bool	Establecer información en la estructura de datos de la cola de mensajes
msg_stat_queue(SysvMessageQueue $queue): array|false	Devuelve información desde la estructura de datos de la cola de mensajes
sem_acquire(SysvSemaphore $semaphore, bool $non_blocking = false): bool	Adquirir un semáforo
sem_get(int $key, int $max_acquire = 1, int $permissions = 0666, bool $auto_release = true): SysvSemaphore|false	Obtener el id de un semáforo
sem_release(SysvSemaphore $semaphore): bool	Liberar un semáforo
sem_remove(SysvSemaphore $semaphore): bool	Eliminar un semáforo
shm_attach(int $key, int|null $size = null, int $permissions = 0666): SysvSharedMemory|false	Crea o abre un segmento de memoria compartida
shm_detach(SysvSharedMemory $shm): bool	Desconectarse del segmento de memoria compartida
shm_get_var(SysvSharedMemory $shm, int $key): mixed	Devuelve una variable desde la memoria compartida
shm_has_var(SysvSharedMemory $shm, int $key): bool	Verificar si existe una entrada específica
shm_put_var(SysvSharedMemory $shm, int $key, mixed $value): bool	Inserta o actualiza una variable en la memoria compartida
shm_remove_var(SysvSharedMemory $shm, int $key): bool	Eliminar una variable de la memoria compartida
shm_remove(SysvSharedMemory $shm): bool	Elimina la memoria compartida de sistemas Unix
SysvMessageQueue()	(new) Una clase completamente opaca que reemplaza el resource sysvmsg queue a partir de PHP 8
SysvSemaphore()	(new) Una clase completamente opaca que reemplaza el resource sysvsem a partir de PHP 8
SysvSharedMemory()	(new) Una clase completamente opaca que reemplaza el resource sysvshm a partir de PHP 8
session_abort(): bool	Desecha los cambios en el array de sesión y finaliza la sesión
session_cache_expire(int|null $value = null): int|false	Devuelve la caducidad de la caché actual
session_cache_limiter(string|null $value = null): string|false	Obtener y/o establecer el limitador de caché actual
session_commit()	Alias of session_write_close
session_create_id(string $prefix = ""): string|false	Crear un nuevo ID de sesión
session_decode(string $data): bool	Decodifica la información de sesión desde una cadena de sesión codificada
session_destroy(): bool	Destruye toda la información registrada de una sesión
session_encode(): string|false	Codifica los datos de la sesión actual como un string codificado de sesión
session_gc(): int|false	Realizar una recolección de basura de datos de sesión
session_get_cookie_params(): array	Obtener los parámetros de la cookie de sesión
session_id(string|null $id = null): string|false	Obtener y/o establecer el id de sesión actual
session_module_name(string|null $module = null): string|false	Obtiene y/o establece el módulo de sesión actual
session_name(string|null $name = null): string|false	Obtener y/o establecer el nombre de la sesión actual
session_regenerate_id(bool $delete_old_session = false): bool	Actualiza el id de sesión actual con uno generado más reciente
session_register_shutdown(): void	Función de cierre de sesiones
session_reset(): bool	Reinicializar el array de sesión con los valores originales
session_save_path(string|null $path = null): string|false	Obtener y/o establecer la ruta de almacenamiento de la sesión actual
session_set_cookie_params(int $lifetime_or_options, string|null $path = null, string|null $domain = null, bool|null $secure = null, bool|null $httponly = null): bool	Establecer los parámetros de la cookie de sesión
session_set_cookie_params(array $lifetime_or_options): bool	Establecer los parámetros de la cookie de sesión
session_set_save_handler(callable $open, callable $close, callable $read, callable $write, callable $destroy, callable $gc, callable $create_sid = ?, callable $validate_sid = ?, callable $update_timestamp = ?): bool	Establece funciones de almacenamiento de sesiones a nivel de usuario
session_set_save_handler(object $sessionhandler, bool $register_shutdown = true): bool	Establece funciones de almacenamiento de sesiones a nivel de usuario
session_start(array $options = []): bool	Iniciar una nueva sesión o reanudar la existente
session_status(): int	Devuelve el estado de la sesión actual
session_unset(): bool	Libera todas las variables de sesión
session_write_close(): bool	Escribir información de sesión y finalizar la sesión
>close(): bool	(SessionHandler) Cerrar la sesión
>create_sid(): string	(SessionHandler) Devuelve un nuevo ID de sesión
>destroy(string $id): bool	(SessionHandler) Destruir una sesión
>gc(int $max_lifetime): int|false	(SessionHandler) Limpia las sesiones antiguas
>open(string $path, string $name): bool	(SessionHandler) Inicializar una sesión
>read(string $id): string|false	(SessionHandler) Leer información de la sesión
>write(string $id, string $data): bool	(SessionHandler) Escribir información de sesión
>close(): bool	(SessionHandlerInterface) Cerrar la sesión
>destroy(string $id): bool	(SessionHandlerInterface) Destruir una sesión
>gc(int $max_lifetime): int|false	(SessionHandlerInterface) Limpia las sesiones antiguas
>open(string $path, string $name): bool	(SessionHandlerInterface) Inicializar una sesión
>read(string $id): string|false	(SessionHandlerInterface) Leer información de sesión
>write(string $id, string $data): bool	(SessionHandlerInterface) Escribir información de sesión
>create_sid(): string	(SessionIdInterface) Create session ID
>updateTimestamp(string $id, string $data): bool	(SessionUpdateTimestampHandlerInterface) Update timestamp
>validateId(string $id): bool	(SessionUpdateTimestampHandlerInterface) Validate ID
SessionHandler()	(new) SessionHandler es una clase especial que puede usarse para exponer el gestor de almacenamiento de sesiones interno actual de PHP por herencia
SessionHandlerInterface()	(new) SessionHandlerInterface es una interfaz que define un prototipo para crear un gestor de sesiones personalizado
SessionIdInterface()	(new) SessionIdInterface is an interface which defines optional methods for creating a custom session handler
SessionUpdateTimestampHandlerInterface()	(new) SessionUpdateTimestampHandlerInterface is an interface which defines optional methods for creating a custom session handler
shmop_close(Shmop $shmop): void	Cerrar un segmento de memoria compartida
shmop_delete(Shmop $shmop): bool	Borrar segmento de memoria compartida
shmop_open(int $key, string $mode, int $permissions, int $size): Shmop|false	Crea o abre un segmento de memoria compartida
shmop_read(Shmop $shmop, int $offset, int $size): string	Leer datos desde un segmento de memoria compartida
shmop_size(Shmop $shmop): int	Obtiene el tamaño de un segmento de memoria compartida
shmop_write(Shmop $shmop, string $data, int $offset): int	Escribir datos en un segmento de memoria compartida
Shmop()	(new) A fully opaque class which replaces shmop resources as of PHP 8
socket_accept(Socket $socket): Socket|false	Acepta una conexión de un socket
socket_addrinfo_bind(AddressInfo $address): Socket|false	Create and bind to a socket from a given addrinfo
socket_addrinfo_connect(AddressInfo $address): Socket|false	Create and connect to a socket from a given addrinfo
socket_addrinfo_explain(AddressInfo $address): array	Get information about addrinfo
socket_addrinfo_lookup(string $host, string|null $service = null, array $hints = []): array|false	Get array with contents of getaddrinfo about the given hostname
socket_atmark(Socket $socket): bool	Determines whether socket is at out-of-band mark
socket_bind(Socket $socket, string $address, int $port = ?): bool	Vincula un nombre a un socket
socket_clear_error(Socket|null $socket = null): void	Limpia el error del socket o el último código de error
socket_close(Socket $socket): void	Cierra un recurso socket
socket_cmsg_space(int $level, int $type, int $num = ?): int|null	Calcular el tamaño del búfer de mensajes
socket_connect(Socket $socket, string $address, int|null $port = null): bool	Inicia una conexión sobre un socket
socket_create_listen(int $port, int $backlog = SOMAXCONN): Socket|false	Abre un socket en un puerto para aceptar conexiones
socket_create_pair(int $domain, int $type, int $protocol, array $pair): bool	Crea un par de sockets indistinguibles y los almacena en una matriz
socket_create(int $domain, int $type, int $protocol): Socket|false	Crear un socket (extremo de comunicación)
socket_export_stream(Socket $socket): resource|false	Export a socket into a stream that encapsulates a socket
socket_get_option(Socket $socket, int $level, int $option): array|int|false	Obtiene las opciones de socket para el socket
socket_getopt()	Alias of socket_get_option
socket_getpeername(Socket $socket, string $address, int $port = null): bool	Pregunta a la parte remota del socket dado que puede resultar en un host/puerto o en una ruta de sistema de archivos Unix, dependiendo de su tipo
socket_getsockname(Socket $socket, string $address, int $port = null): bool	Preguntar a la parte local del socket dado que puede resultar en un host/puerto o en una ruta de sistema de archivos Unix, dependiendo de su tipo
socket_import_stream(resource $stream): Socket|false	Importar un flujo a stream
socket_last_error(Socket|null $socket = null): int	Devuelve el último error sobre un socket
socket_listen(Socket $socket, int $backlog = ?): bool	Escucha una conexión sobre un socket
socket_read(Socket $socket, int $length, int $mode = PHP_BINARY_READ): string|false	Lee un máximo de longitud de bytes desde un socket
socket_recv(Socket $socket, string|null $data, int $length, int $flags): int|false	Recibe información desde un socket conectado
socket_recvfrom(Socket $socket, string $data, int $length, int $flags, string $address, int $port = null): int|false	Recibe información desde un socket que esté o no orientado a conexión
socket_recvmsg(Socket $socket, array $message, int $flags = ?): int|false	Leer un mensaje
socket_select(array|null $read, array|null $write, array|null $except, int|null $seconds, int $microseconds = ?): int|false	Ejecuta la llamada a select() del sistema sobre las matrices de sockets dadas con un tiempo límite especificado
socket_send(Socket $socket, string $data, int $length, int $flags): int|false	Envía información a un socket conectado
socket_sendmsg(Socket $socket, array $message, int $flags = ?): int|false	Enviar un mensaje
socket_sendto(Socket $socket, string $data, int $length, int $flags, string $address, int|null $port = null): int|false	Envía un mensaje a un socket, ya esté conectado o no
socket_set_block(Socket $socket): bool	Establece el modo de bloqueo de un recurso socket
socket_set_nonblock(Socket $socket): bool	Establece el modo de no-bloqueo para el descriptor de archivo fd
socket_set_option(Socket $socket, int $level, int $option, array|string|int $value): bool	Establece las opciones de socket para el socket
socket_setopt()	Alias of socket_set_option
socket_shutdown(Socket $socket, int $mode = 2): bool	Cierra un socket para dejar de recibir, enviar, o ambos
socket_strerror(int $error_code): string	Devuelve una cadena que describe un error de socket
socket_write(Socket $socket, string $data, int|null $length = null): int|false	Escribir en un socket
socket_wsaprotocol_info_export(Socket $socket, int $process_id): string|false	Exports the WSAPROTOCOL_INFO Structure
socket_wsaprotocol_info_import(string $info_id): Socket|false	Imports a Socket from another Process
socket_wsaprotocol_info_release(string $info_id): bool	Releases an exported WSAPROTOCOL_INFO Structure
AddressInfo()	(new) A fully opaque class which replaces AddressInfo resources as of PHP 8
Socket()	(new) A fully opaque class which replaces Socket resources as of PHP 8
>backup(SQLite3 $destination, string $sourceDatabase = "main", string $destinationDatabase = "main"): bool	(SQLite3) Backup one database to another database
>busyTimeout(int $milliseconds): bool	(SQLite3) Establecer el gestor de conexión ocupado
>changes(): int	(SQLite3) Devolver el número de filas de la base de datos que fueron cambiadas (o insertadas, o eliminadas) por la sentencia SQL más reciente
>close(): bool	(SQLite3) Cerrar la conexión a la base de datos
SQLite3(string $filename, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE, string $encryptionKey = "")	(new) Instanciar un objeto de la clase SQLite3 y abrir una base de datos de SQLite 3
>createAggregate(string $name, callable $stepCallback, callable $finalCallback, int $argCount = -1): bool	(SQLite3) Registrar una función de PHP para usarla como una función totalizadora de SQL
>createCollation(string $name, callable $callback): bool	(SQLite3) Registra una función PHP para ser utilizada como una función SQL de ordenación específica
>createFunction(string $name, callable $callback, int $argCount = -1, int $flags = ?): bool	(SQLite3) Registrar una función de PHP para usarla como una función escalar de SQL
>enableExceptions(bool $enable = false): bool	(SQLite3) Enable throwing exceptions
SQLite3::escapeString(string $string): string	Devolver una cadena que ha sido debidamente escapada
>exec(string $query): bool	(SQLite3) Ejecutar una consulta que no devuelve resultados en una base de datos dada
>lastErrorCode(): int	(SQLite3) Devolver el código numérico del resultado de la petición SQLite que falló más recientemente
>lastErrorMsg(): string	(SQLite3) Devolver texto en inglés describiendo la petición SQLite que falló más recientemente
>lastInsertRowID(): int	(SQLite3) Devolver el ID de la fila de la sentencia INSERT más reciente realizada en la base de datos
>loadExtension(string $name): bool	(SQLite3) Intentar cargar una biblioteca de extensiones de SQLite
>open(string $filename, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE, string $encryptionKey = ""): void	(SQLite3) Abrir una base de datos SQLite
>openBlob(string $table, string $column, int $rowid, string $database = "main", int $flags = SQLITE3_OPEN_READONLY): resource|false	(SQLite3) Opens a stream resource to read a BLOB
>prepare(string $query): SQLite3Stmt|false	(SQLite3) Preparar una sentencia SQL para su ejecución
>query(string $query): SQLite3Result|false	(SQLite3) Ejecutar una consulta SQL
>querySingle(string $query, bool $entireRow = false): mixed	(SQLite3) Ejecutar una consulta y devolver un único resultado
>setAuthorizer(callable|null $callback): bool	(SQLite3) Configures a callback to be used as an authorizer to limit what a statement can do
SQLite3::version(): array	Devolver la versión de la biblioteca SQLite3 como una constante de cadena y como un número
>columnName(int $column): string|false	(SQLite3Result) Devolver el nombre de la columna n-ésima
>columnType(int $column): int|false	(SQLite3Result) Devolver el tipo de la columna n-ésima
SQLite3Result()	(new) Constructs an SQLite3Result
>fetchArray(int $mode = SQLITE3_BOTH): array|false	(SQLite3Result) Obtener una fila de resultados en forma de un array asociativo o indexado o ambos
>finalize(): true	(SQLite3Result) Cerrar el conjunto de resultados
>numColumns(): int	(SQLite3Result) Devolver el número de columnas del conjunto de resultados
>reset(): bool	(SQLite3Result) Reiniciar el conjunto de resultados a la primera fila
>bindParam(string|int $param, mixed $var, int $type = SQLITE3_TEXT): bool	(SQLite3Stmt) Vincular un parámetro a una variable de sentencia
>bindValue(string|int $param, mixed $value, int $type = SQLITE3_TEXT): bool	(SQLite3Stmt) Vincular el valor de un parámetro a una variable de sentencia
>clear(): bool	(SQLite3Stmt) Limpiar todos los parámetros vinculados actuales
>close(): true	(SQLite3Stmt) Cerrar una sentencia preparada
SQLite3Stmt(SQLite3 $sqlite3, string $query)	(new) Constructs an SQLite3Stmt object
>execute(): SQLite3Result|false	(SQLite3Stmt) Ejecutar una sentencia preparada y devuolver un objeto de conjunto de resultados
>getSQL(bool $expand = false): string|false	(SQLite3Stmt) Get the SQL of the statement
>paramCount(): int	(SQLite3Stmt) Devolver el número de parámetros dentro de la sentencia preparada
>readOnly(): bool	(SQLite3Stmt) Returns whether a statement is definitely read only
>reset(): bool	(SQLite3Stmt) Reiniciar la sentencia preparada
SQLite3Exception()	(new) Represents a SQLite3 specific exception
token_get_all(string $code, int $flags = ?): array	Divide la fuente dada en tokens PHP
token_name(int $id): string	Obtiene el nombre simbólico de un token PHP dado
PhpToken(int $id, string $text, int $line = -1, int $pos = -1)	(new) Devuelve un nuevo objeto PhpToken
>getTokenName(): string|null	(PhpToken) Devuelve el nombre del token.
>is(int|string|array $kind): bool	(PhpToken) Indica si el token es de un tipo dado.
>isIgnorable(): bool	(PhpToken) Indica si el token será ignorado por el analizador PHP.
>__toString(): string	(PhpToken) Devuelve el contenido textual del token.
PhpToken::tokenize(string $code, int $flags = ?): array	Separa el código fuente dado en tokens PHP, representado por objetos PhpToken.
deflate_add(DeflateContext $context, string $data, int $flush_mode = ZLIB_SYNC_FLUSH): string|false	Comprime datos de manera incremental
deflate_init(int $encoding, array $options = []): DeflateContext|false	Inicializa un contexto de compresión incremental
gzclose(resource $stream): bool	Cierra el apuntador de un archivo gz abierto
gzcompress(string $data, int $level = -1, int $encoding = ZLIB_ENCODING_DEFLATE): string|false	Comprime una cadena
gzdecode(string $data, int $max_length = ?): string|false	Decodifica una cadena comprimida con gzip
gzdeflate(string $data, int $level = -1, int $encoding = ZLIB_ENCODING_RAW): string|false	Comprime una cadena
gzencode(string $data, int $level = -1, int $encoding = ZLIB_ENCODING_GZIP): string|false	Crea una cadena comprimida con gzip
gzeof(resource $stream): bool	Prueba de apuntador para EOF de archivo gz
gzfile(string $filename, int $use_include_path = ?): array|false	Lee un archivo gz completo en una matriz
gzgetc(resource $stream): string|false	Obtiene el caracter donde está el apuntador al archivo gz
gzgets(resource $stream, int|null $length = null): string|false	Obtiene la línea del apuntador al archivo
gzgetss(resource $zp, int $length, string $allowable_tags = ?): string	Obtiene la línea del apuntador al archivo gz y retira las etiquetas HTML
gzinflate(string $data, int $max_length = ?): string|false	Descomprime una cadena comprimida
gzopen(string $filename, string $mode, int $use_include_path = ?): resource|false	Abre un archivo gz
gzpassthru(resource $stream): int	Muestra todos los datos restantes a partir del apuntador al achivo gz
gzputs()	Alias of gzwrite
gzread(resource $stream, int $length): string|false	Lectura de archivo gz segura a nivel binario
gzrewind(resource $stream): bool	Reinicia la posición del apuntador a un archivo gz
gzseek(resource $stream, int $offset, int $whence = SEEK_SET): int	Ubica el apuntador a un archivo gz
gztell(resource $stream): int|false	Indica la posición de lectura/escritura del apuntador al archivo gz
gzuncompress(string $data, int $max_length = ?): string|false	Descomprime una cadena comprimida
gzwrite(resource $stream, string $data, int|null $length = null): int|false	Escritura en un archivo gz, segura a nivel binario
inflate_get_read_len(InflateContext $context): int	Devuelve el número de bytes leídos hasta el momento
inflate_get_status(InflateContext $context): int	Devuelve el estado de descompresión
inflate_add(InflateContext $context, string $data, int $flush_mode = ZLIB_SYNC_FLUSH): string|false	Descomprime datos de manera incremental
inflate_init(int $encoding, array $options = []): InflateContext|false	Inicializa un contexto de descompresión incremental
ob_gzhandler(string $data, int $flags): string|false	Función de recuperación para la compresión automática de pastillas
readgzfile(string $filename, int $use_include_path = ?): int|false	Muestra un archivo gz
zlib_decode(string $data, int $max_length = ?): string|false	Descomprime datos codificados en craw/gzip/zlib
zlib_encode(string $data, int $encoding, int $level = -1): string|false	Comprime datos con la codificación especificada
zlib_get_coding_type(): string|false	Retorna el tipo de codificación utilizada para hacer la compresión
DeflateContext()	(new) Una clase completamente opaca que reemplaza los recursos zlib
InflateContext()	(new) Una clase completamente opaca que reemplaza los recursos zlib
bzclose(resource $bz): bool	Cierra un fichero bzip2
bzcompress(string $data, int $block_size = 4, int $work_factor = ?): string|int	Comprime una cadena en datos codificados en bzip2
bzdecompress(string $data, bool $use_less_memory = false): string|int|false	Descomprime datos codificados con bzip2
bzerrno(resource $bz): int	Devuelve el número de erro de bzip2
bzerror(resource $bz): array	Devuelve el número de error y la cadena del error de bzip2 en un array
bzerrstr(resource $bz): string	Devuelve una cadena de error de bzip2
bzflush(resource $bz): bool	Fuerza la escritura de todos los datos del búfer
bzopen(string|resource $file, string $mode): resource|false	Abre un fichero comprimido con bzip2
bzread(resource $bz, int $length = 1024): string|false	Lectura segura de ficheros bzip2
bzwrite(resource $bz, string $data, int|null $length = null): int|false	Escribe en un fichero bzip2 de forma segura binariamente
curl_file_create(string $filename, string|null $mime_type = null, string|null $posted_filename = null): CURLFile	Crear un objeto CURLFile
>getFilename(): string	(CURLFile) Recupera el nombre de un fichero
>getMimeType(): string	(CURLFile) Recupera el tipo MIME
>getPostFilename(): string	(CURLFile) Recupera el nombre de fichero para POST
>setMimeType(string $mime_type): void	(CURLFile) Configura el tipo MIME
>setPostFilename(string $posted_filename): void	(CURLFile) Establecer el nombre de fichero para POST
CURLStringFile(string $data, string $postname, string $mime = "application/octet-stream")	(new) Crea un objeto CURLStringFile
curl_close(CurlHandle $handle): void	Cierra una sesión cURL
curl_copy_handle(CurlHandle $handle): CurlHandle|false	Copia el recurso cURL junto con todas sus preferencias
curl_errno(CurlHandle $handle): int	Devuelve el último número de error
curl_error(CurlHandle $handle): string	Devuelve una cadena que contiene el último error de la sesión actual
curl_escape(CurlHandle $handle, string $string): string|false	Función URL que codifica el string dado
curl_exec(CurlHandle $handle): string|bool	Establece una sesión cURL
curl_getinfo(CurlHandle $handle, int|null $option = null): mixed	Obtener información sobre una transferencia específica
curl_init(string|null $url = null): CurlHandle|false	Inicia sesión cURL
curl_multi_add_handle(CurlMultiHandle $multi_handle, CurlHandle $handle): int	Añade un recurso cURL a un grupo de recursos cURL
curl_multi_close(CurlMultiHandle $multi_handle): void	Cierra un grupo de recursos cURL
curl_multi_errno(CurlMultiHandle $multi_handle): int	Devuelve el último número de error de cURL múltiple
curl_multi_exec(CurlMultiHandle $multi_handle, int $still_running): int	Ejecuta las sub-conexiones del recurso cURL actual
curl_multi_getcontent(CurlHandle $handle): string|null	Devuelve el contenido del recurso cURL si CURLOPT_RETURNTRANSFER está activado
curl_multi_info_read(CurlMultiHandle $multi_handle, int $queued_messages = null): array|false	Obtiene información de las transferencias en curso
curl_multi_init(): CurlMultiHandle	Devuelve un nuevo multi recurso cURL
curl_multi_remove_handle(CurlMultiHandle $multi_handle, CurlHandle $handle): int	Elimina un multi recurso de un conjunto de recursos cURL
curl_multi_select(CurlMultiHandle $multi_handle, float $timeout = 1.0): int	Espera actividad en cualquier conexión en curl_multi
curl_multi_setopt(CurlMultiHandle $multi_handle, int $option, mixed $value): bool	Configura una opción para el multi gestor cURL
curl_multi_strerror(int $error_code): string|null	Devuelve un string con la descripción del código de error
curl_pause(CurlHandle $handle, int $flags): int	Pausa y reanuda una conexión
curl_reset(CurlHandle $handle): void	Reinicializa todas las opciones de un gestor de sesión libcurl
curl_setopt_array(CurlHandle $handle, array $options): bool	Configura múltiples opciones para una transferencia cURL
curl_setopt(CurlHandle $handle, int $option, mixed $value): bool	Set an option for a cURL transfer
curl_share_close(CurlShareHandle $share_handle): void	Cierra un gestor cURL compartido
curl_share_errno(CurlShareHandle $share_handle): int	Devuelve el último número del error compartido cURL
curl_share_init_persistent(array $share_options): CurlSharePersistentHandle	Initialize a persistent cURL share handle
curl_share_init(): CurlShareHandle	Inicializar un gestor cURL compartido
curl_share_setopt(CurlShareHandle $share_handle, int $option, mixed $value): bool	Configura una opción para un manejador cURL compartido
curl_share_strerror(int $error_code): string|null	Devuelve string con la descripción del codigo de error dado
curl_strerror(int $error_code): string|null	Devuelve un string que describe el código de error dado
curl_unescape(CurlHandle $handle, string $string): string|false	Descodifica un string codificado de URL
curl_upkeep(CurlHandle $handle): bool	Performs any connection upkeep checks
curl_version(): array|false	Obtiene la información de la versión de cURL
CURLFile()	(new) CURLFile debería emplearse para subir un fichero con CURLOPT_POSTFIELDS
CurlHandle()	(new) Una clase completamente opaca que reemplaza los recursos de tipo curl a partir de PHP 8
CurlMultiHandle()	(new) Una clase completamente opaca que reemplaza los recursos de tipo curl_multi a partir de PHP 8
CurlShareHandle()	(new) Una clase completamente opaca que reemplaza los recursos de tipo curl_share a partir de PHP 8
CurlSharePersistentHandle()	(new) Represents a persistent cURL "share" handle
>isId(): bool	(Dom\Attr) 
>rename(string|null $namespaceURI, string $qualifiedName): void	(Dom\Attr) Changes the qualified name or namespace of an attribute
>after(Dom\Node|string ...$nodes): void	(Dom\CharacterData) 
>appendData(string $data): void	(Dom\CharacterData) 
>before(Dom\Node|string ...$nodes): void	(Dom\CharacterData) 
>deleteData(int $offset, int $count): void	(Dom\CharacterData) 
>insertData(int $offset, string $data): void	(Dom\CharacterData) 
>remove(): void	(Dom\CharacterData) 
>replaceData(int $offset, int $count, string $data): void	(Dom\CharacterData) 
>replaceWith(Dom\Node|string ...$nodes): void	(Dom\CharacterData) 
>substringData(int $offset, int $count): string	(Dom\CharacterData) 
>after(Dom\Node|string ...$nodes): void	(Dom\ChildNode) 
>before(Dom\Node|string ...$nodes): void	(Dom\ChildNode) 
>remove(): void	(Dom\ChildNode) 
>replaceWith(Dom\Node|string ...$nodes): void	(Dom\ChildNode) 
Dom\HTMLDocument::createEmpty(string $encoding = "UTF-8"): Dom\HTMLDocument	Creates an empty HTML document
Dom\HTMLDocument::createFromFile(string $path, int $options = ?, string|null $overrideEncoding = null): Dom\HTMLDocument	Parses an HTML document from a file
Dom\HTMLDocument::createFromString(string $source, int $options = ?, string|null $overrideEncoding = null): Dom\HTMLDocument	Parses an HTML document from a string
>saveHtml(Dom\Node|null $node = null): string	(Dom\HTMLDocument) Serializes the document as an HTML string
>saveHtmlFile(string $filename): int|false	(Dom\HTMLDocument) Serializes the document as an HTML file
>saveXml(Dom\Node|null $node = null, int $options = ?): string|false	(Dom\HTMLDocument) Serializes the document as an XML string
>saveXmlFile(string $filename, int $options = ?): int|false	(Dom\HTMLDocument) Serializes the document as an XML file
>append(Dom\Node|string ...$nodes): void	(Dom\ParentNode) 
>prepend(Dom\Node|string ...$nodes): void	(Dom\ParentNode) 
>querySelector(string $selectors): Dom\Element|null	(Dom\ParentNode) Returns the first element that matches the CSS selectors
>querySelectorAll(string $selectors): Dom\NodeList	(Dom\ParentNode) Returns a collection of elements that match the CSS selectors
>replaceChildren(Dom\Node|string ...$nodes): void	(Dom\ParentNode) 
>splitText(int $offset): Dom\Text	(Dom\Text) 
>add(string ...$tokens): void	(Dom\TokenList) Adds the given tokens to the list
>contains(string $token): bool	(Dom\TokenList) Returns whether the list contains a given token
>count(): int	(Dom\TokenList) Returns the number of tokens in the list
>getIterator(): Iterator	(Dom\TokenList) Returns an iterator over the token list
>item(int $index): string|null	(Dom\TokenList) Returns a token from the list
>remove(string ...$tokens): void	(Dom\TokenList) Removes the given tokens from the list
>replace(string $token, string $newToken): bool	(Dom\TokenList) Replaces a token in the list with another one
>supports(string $token): bool	(Dom\TokenList) Returns whether the given token is supported
>toggle(string $token, bool|null $force = null): bool	(Dom\TokenList) Toggles the presence of a token in the list
DOMAttr(string $name, string $value = "")	(new) Crea un nuevo objeto DOMAttr
>isId(): bool	(DOMAttr) Verifica si un atributo es un ID definido.
DOMCdataSection(string $data)	(new) Construye un nuevo objeto DOMCdataSection
>after(DOMNode|string ...$nodes): void	(DOMCharacterData) Adds nodes after the character data
>appendData(string $data): true	(DOMCharacterData) Añade el string de caracteres al final de los datos de carácter del nodo.
>before(DOMNode|string ...$nodes): void	(DOMCharacterData) Adds nodes before the character data
>deleteData(int $offset, int $count): bool	(DOMCharacterData) Eliminar una serie de caracteres del nodo
>insertData(int $offset, string $data): bool	(DOMCharacterData) Inserta un string en la posición de 16-bit especificada
>remove(): void	(DOMCharacterData) Removes the character data node
>replaceData(int $offset, int $count, string $data): bool	(DOMCharacterData) Reemplaza un substring dentro de un nodo DOMCharacterData
>replaceWith(DOMNode|string ...$nodes): void	(DOMCharacterData) Replaces the character data with new nodes
>substringData(int $offset, int $count): string|false	(DOMCharacterData) Extrae una serie de datos del nodo
>after(DOMNode|string ...$nodes): void	(DOMChildNode) Adds nodes after the node
>before(DOMNode|string ...$nodes): void	(DOMChildNode) Adds nodes before the node
>remove(): void	(DOMChildNode) Removes the node
>replaceWith(DOMNode|string ...$nodes): void	(DOMChildNode) Replaces the node with new nodes
DOMComment(string $data = "")	(new) Crea un nuevo objeto DOMComment
>adoptNode(DOMNode $node): DOMNode|false	(DOMDocument) Transfer a node from another document
>append(DOMNode|string ...$nodes): void	(DOMDocument) Appends nodes after the last child node
DOMDocument(string $version = "1.0", string $encoding = "")	(new) Crea un nuevo objeto DOMDocument
>createAttribute(string $localName): DOMAttr|false	(DOMDocument) Crear nuevo attribute
>createAttributeNS(string|null $namespace, string $qualifiedName): DOMAttr|false	(DOMDocument) Crea un nuevo nodo atributo con un namespace asociado.
>createCDATASection(string $data): DOMCdataSection|false	(DOMDocument) Crea un nuevo nodo cdata
>createComment(string $data): DOMComment	(DOMDocument) Crea un nuevo nodo de comentario
>createDocumentFragment(): DOMDocumentFragment	(DOMDocument) Crea un nuevo fragmento de documento
>createElement(string $localName, string $value = ""): DOMElement|false	(DOMDocument) Crea un nuevo nodo elemento
>createElementNS(string|null $namespace, string $qualifiedName, string $value = ""): DOMElement|false	(DOMDocument) Crea un nuevo nodo elemento con el nombre de espacio asociado
>createEntityReference(string $name): DOMEntityReference|false	(DOMDocument) Create new entity reference node
>createProcessingInstruction(string $target, string $data = ""): DOMProcessingInstruction|false	(DOMDocument) Crea un nuevo nodo PI
>createTextNode(string $data): DOMText	(DOMDocument) Crea un nuevo nodo de texto
>getElementById(string $elementId): DOMElement|null	(DOMDocument) Busca un elemento con cierto id
>getElementsByTagName(string $qualifiedName): DOMNodeList	(DOMDocument) Busca todos los elementos con el nombre de etiqueta local dado
>getElementsByTagNameNS(string|null $namespace, string $localName): DOMNodeList	(DOMDocument) Busca todos los elementos con el nombre de etiqueta dado en el espacio de nombre especificado.
>importNode(DOMNode $node, bool $deep = false): DOMNode|false	(DOMDocument) Importa un nodo dentro del documento actual
>load(string $filename, int $options = ?): bool	(DOMDocument) Cargar un documento XML de un archivo.
>loadHTML(string $source, int $options = ?): bool	(DOMDocument) Carga HTML de un string
>loadHTMLFile(string $filename, int $options = ?): bool	(DOMDocument) Carga HTML desde un fichero
>loadXML(string $source, int $options = ?): bool	(DOMDocument) Cargar XML desde una cadena
>normalizeDocument(): void	(DOMDocument) Normaliza el documento
>prepend(DOMNode|string ...$nodes): void	(DOMDocument) Prepends nodes before the first child node
>registerNodeClass(string $baseClass, string|null $extendedClass): true	(DOMDocument) Registra una clase extendida usada para crear tipos de nodos base
>relaxNGValidate(string $filename): bool	(DOMDocument) Realiza una validación relaxNG del documento
>relaxNGValidateSource(string $source): bool	(DOMDocument) Realiza una validación relaxNG del documento
>replaceChildren(DOMNode|string ...$nodes): void	(DOMDocument) Replace children in document
>save(string $filename, int $options = ?): int|false	(DOMDocument) Copia el árbol XML interno a un archivo
>saveHTML(DOMNode|null $node = null): string|false	(DOMDocument) Copia el documento interno a una cadena usando el formato HTML
>saveHTMLFile(string $filename): int|false	(DOMDocument) Copia el documento interno a un fichero usando el formato HTML
>saveXML(DOMNode|null $node = null, int $options = ?): string|false	(DOMDocument) Copia el arbol XML interno a un string
>schemaValidate(string $filename, int $flags = ?): bool	(DOMDocument) Valida un documento basado en un esquema. Sólo se admite XML Schema 1.0.
>schemaValidateSource(string $source, int $flags = ?): bool	(DOMDocument) Valida un documento basado en un esquema
>validate(): bool	(DOMDocument) Valida el documento basado en su DTD
>xinclude(int $options = ?): int|false	(DOMDocument) Sustituye XIncludes en un objeto DOMDocument
>append(DOMNode|string ...$nodes): void	(DOMDocumentFragment) Appends nodes after the last child node
>appendXML(string $data): bool	(DOMDocumentFragment) Añade información XML sin formato
DOMDocumentFragment()	(new) Constructs a DOMDocumentFragment object
>prepend(DOMNode|string ...$nodes): void	(DOMDocumentFragment) Prepends nodes before the first child node
>replaceChildren(DOMNode|string ...$nodes): void	(DOMDocumentFragment) Replace children in fragment
>after(DOMNode|string ...$nodes): void	(DOMElement) Adds nodes after the element
>append(DOMNode|string ...$nodes): void	(DOMElement) Appends nodes after the last child node
>before(DOMNode|string ...$nodes): void	(DOMElement) Adds nodes before the element
DOMElement(string $qualifiedName, string|null $value = null, string $namespace = "")	(new) Crea un nuevo objeto DOMElement
>getAttribute(string $qualifiedName): string	(DOMElement) Devuelve el valor de un atributo
>getAttributeNames(): array	(DOMElement) Get attribute names
>getAttributeNode(string $qualifiedName): DOMAttr|DOMNameSpaceNode|false	(DOMElement) Devuelve el nodo de un atributo
>getAttributeNodeNS(string|null $namespace, string $localName): DOMAttr|DOMNameSpaceNode|null	(DOMElement) Devuelve el nodo de un atributo
>getAttributeNS(string|null $namespace, string $localName): string	(DOMElement) Devuelve el valor de un atributo
>getElementsByTagName(string $qualifiedName): DOMNodeList	(DOMElement) Obtiene los elementos por nombre de etiqueta
>getElementsByTagNameNS(string|null $namespace, string $localName): DOMNodeList	(DOMElement) Recupera los elementos por su espacio de nombres y su localName
>hasAttribute(string $qualifiedName): bool	(DOMElement) Comprueba si existe un atributo
>hasAttributeNS(string|null $namespace, string $localName): bool	(DOMElement) Comprueba si un atributo existe
>insertAdjacentElement(string $where, DOMElement $element): DOMElement|null	(DOMElement) Insert adjacent element
>insertAdjacentText(string $where, string $data): void	(DOMElement) Insert adjacent text
>prepend(DOMNode|string ...$nodes): void	(DOMElement) Prepends nodes before the first child node
>remove(): void	(DOMElement) Removes the element
>removeAttribute(string $qualifiedName): bool	(DOMElement) Elimina un atributo
>removeAttributeNode(DOMAttr $attr): DOMAttr|false	(DOMElement) Elimina un atributo
>removeAttributeNS(string|null $namespace, string $localName): void	(DOMElement) Elimina un atributo
>replaceChildren(DOMNode|string ...$nodes): void	(DOMElement) Replace children in element
>replaceWith(DOMNode|string ...$nodes): void	(DOMElement) Replaces the element with new nodes
>setAttribute(string $qualifiedName, string $value): DOMAttr|bool	(DOMElement) Añade un nuevo atributo o modifica uno existente
>setAttributeNode(DOMAttr $attr): DOMAttr|null|false	(DOMElement) Añade un nuevo nodo de atributo al elemento
>setAttributeNodeNS(DOMAttr $attr): DOMAttr|null|false	(DOMElement) Aña de un nuevo nodo de atributo al elemento
>setAttributeNS(string|null $namespace, string $qualifiedName, string $value): void	(DOMElement) Añade un nuevo atributo
>setIdAttribute(string $qualifiedName, bool $isId): void	(DOMElement) Declara el atributo especificado por su nombre como de tipo ID
>setIdAttributeNode(DOMAttr $attr, bool $isId): void	(DOMElement) Declara el atributo especificado por su nodo como de tipo ID
>setIdAttributeNS(string $namespace, string $qualifiedName, bool $isId): void	(DOMElement) Declara el atributo especificado por su nombre local y su URI del espacio de nombres como de tipo ID
>toggleAttribute(string $qualifiedName, bool|null $force = null): bool	(DOMElement) Toggle attribute
DOMEntityReference(string $name)	(new) Crea un nuevo objeto DOMEntityReference
DOMImplementation()	(new) Crea un nuevo objeto DOMImplementation
>createDocument(string|null $namespace = null, string $qualifiedName = "", DOMDocumentType|null $doctype = null): DOMDocument	(DOMImplementation) Crea un objeto DOM Document del tipo especificado con sus elementos
>createDocumentType(string $qualifiedName, string $publicId = "", string $systemId = ""): DOMDocumentType|false	(DOMImplementation) Crea un objeto DOMDocumentType vacío
>hasFeature(string $feature, string $version): bool	(DOMImplementation) Verifica si la implementación DOM implementa una funcionalidad específica
>count(): int	(DOMNamedNodeMap) Get number of nodes in the map
>getIterator(): Iterator	(DOMNamedNodeMap) Retrieve an external iterator
>getNamedItem(string $qualifiedName): DOMNode|null	(DOMNamedNodeMap) Recupera un nodo especificado por su nombre
>getNamedItemNS(string|null $namespace, string $localName): DOMNode|null	(DOMNamedNodeMap) Recupera un nodo especificado por el nombre local y la URI del espacio de nombres
>item(int $index): DOMNode|null	(DOMNamedNodeMap) Recupera un nodo especificado por su índice
>__sleep(): array	(DOMNameSpaceNode) Forbids serialization unless serialization methods are implemented in a subclass
>__wakeup(): void	(DOMNameSpaceNode) Forbids unserialization unless unserialization methods are implemented in a subclass
>appendChild(DOMNode $node): DOMNode|false	(DOMNode) Añade un nuevo hijo al final de los hijos
>C14N(bool $exclusive = false, bool $withComments = false, array|null $xpath = null, array|null $nsPrefixes = null): string|false	(DOMNode) Canonizar nodos a una cadena
>C14NFile(string $uri, bool $exclusive = false, bool $withComments = false, array|null $xpath = null, array|null $nsPrefixes = null): int|false	(DOMNode) Canonizar nodos a un fichero
>cloneNode(bool $deep = false): DOMNode|false	(DOMNode) Clona un nodo
>compareDocumentPosition(DOMNode $other): int	(DOMNode) Compares the position of two nodes
>contains(DOMNode|DOMNameSpaceNode|null $other): bool	(DOMNode) Checks if node contains other node
>getLineNo(): int	(DOMNode) Obtener el número de línea de un nodo
>getNodePath(): string|null	(DOMNode) Obtener un XPath de un nodo
>getRootNode(array|null $options = null): DOMNode	(DOMNode) Get root node
>hasAttributes(): bool	(DOMNode) Comprueba si un nodo tiene atributos
>hasChildNodes(): bool	(DOMNode) Comprueba si el nodo tiene hijos
>insertBefore(DOMNode $node, DOMNode|null $child = null): DOMNode|false	(DOMNode) Añade un nuevo hijo antes del nodo de referencia
>isDefaultNamespace(string $namespace): bool	(DOMNode) Comprueba si la URI del espacio de nombres especificada es el espacio de nombres predeterminado
>isEqualNode(DOMNode|null $otherNode): bool	(DOMNode) Checks that both nodes are equal
>isSameNode(DOMNode $otherNode): bool	(DOMNode) Indica si dos nodos son el mismo nodo
>isSupported(string $feature, string $version): bool	(DOMNode) Comprueba si una característica está soportada para la versión especificada
>lookupNamespaceURI(string|null $prefix): string|null	(DOMNode) Obtiene la URI del espacio de nombres del nodo basado en el prefijo
>lookupPrefix(string $namespace): string|null	(DOMNode) Obtiene el prefijo del espacio de nombres del nodo basándoes en la URI del espacio de nombres
>normalize(): void	(DOMNode) Normaliza el nodo
>removeChild(DOMNode $child): DOMNode|false	(DOMNode) Elimina un hijo de la lista de hijos.
>replaceChild(DOMNode $node, DOMNode $child): DOMNode|false	(DOMNode) Reemplaza un hijo
>__sleep(): array	(DOMNode) Forbids serialization unless serialization methods are implemented in a subclass
>__wakeup(): void	(DOMNode) Forbids unserialization unless unserialization methods are implemented in a subclass
>count(): int	(DOMNodeList) Obtiene el número de nodos en la lista
>getIterator(): Iterator	(DOMNodeList) Retrieve an external iterator
>item(int $index): DOMElement|DOMNode|DOMNameSpaceNode|null	(DOMNodeList) Recupera un nodo especificado por un índice
>append(DOMNode|string ...$nodes): void	(DOMParentNode) Appends nodes after the last child node
>prepend(DOMNode|string ...$nodes): void	(DOMParentNode) Prepends nodes before the first child node
>replaceChildren(DOMNode|string ...$nodes): void	(DOMParentNode) Replace children in node
DOMProcessingInstruction(string $name, string $value = "")	(new) Crea un nuevo objeto DOMProcessingInstruction
DOMText(string $data = "")	(new) Crea un nuevo objeto DOMText
>isElementContentWhitespace(): bool	(DOMText) Devuelve si este nodo de texto contiene espacios en blanco en el contenido del elemento
>isWhitespaceInElementContent(): bool	(DOMText) Indica si este nodo de texto contiene espacios en blanco
>splitText(int $offset): DOMText|false	(DOMText) Rompe este nodo en dos nodos en el índice especificado
DOMXPath(DOMDocument $document, bool $registerNodeNS = true)	(new) Crea un nuevo objeto DOMXPath
>evaluate(string $expression, DOMNode|null $contextNode = null, bool $registerNodeNS = true): mixed	(DOMXPath) Evalúa una expresión XPath dada y devuelve un resultado tipado si es posible
>query(string $expression, DOMNode|null $contextNode = null, bool $registerNodeNS = true): mixed	(DOMXPath) Evalúa la expresión XPath dada
DOMXPath::quote(string $str): string	Quotes a string for use in an XPath expression
>registerNamespace(string $prefix, string $namespace): bool	(DOMXPath) Registra el espacio de nombres con el objeto DOMXPath
>registerPhpFunctionNS(string $namespaceURI, string $name, callable $callable): void	(DOMXPath) Registra una función PHP como una función XPath en un espacio de nombres
>registerPhpFunctions(string|array|null $restrict = null): void	(DOMXPath) Registra una función PHP como función XPath
dom_import_simplexml(object $node): DOMAttr|DOMElement	Obtiene un objeto DOMElement desde un objeto SimpleXMLElement
Dom\import_simplexml(object $node): Dom\Attr|Dom\Element	Gets a Dom\Attr or Dom\Element object from a SimpleXMLElement object
DOMCharacterData()	(new) Representa un nodo que contiene datos
DOMChildNode()	(new) 
DOMDocumentType()	(new) Cada DOMDocument tiene un atributo doctype cuyo valor es null o un objeto DOMDocumentType
DOMEntity()	(new) Esta interfaz representa una entidad conocida, analizada o sin analizar, de un documento XML
DOMException()	(new) Las operaciones DOM lanzan excepciones bajo circunstancias particulares, esto es, cuando es imposible de realizar una operación por razones lógicas
DOMNamedNodeMap()	(new) 
DOMNameSpaceNode()	(new) 
DOMNode()	(new) 
DOMNodeList()	(new) Representa una lista dinámica de nodos
DOMNotation()	(new) 
DOMParentNode()	(new) 
Dom\Attr()	(new) Dom\Attr represents an attribute in the Dom\Element object
Dom\CDATASection()	(new) The Dom\CDATASection class inherits from Dom\Text for textual representation of CData constructs
Dom\CharacterData()	(new) This is the modern, spec-compliant equivalent of DOMCharacterData
Dom\ChildNode()	(new) This is the modern, spec-compliant equivalent of DOMChildNode
Dom\Comment()	(new) This is the modern, spec-compliant equivalent of DOMComment
Dom\Document()	(new) This is the modern, spec-compliant equivalent of DOMDocument
Dom\DocumentFragment()	(new) This represents a document fragment, which can be used as a container for other nodes
Dom\DocumentType()	(new) Each Dom\Document has a doctype attribute whose value is either null or a Dom\DocumentType object
Dom\DtdNamedNodeMap()	(new) Represents a named node map for entities and notation nodes of the DTD
Dom\Element()	(new) Represents an element
Dom\Entity()	(new) This is the modern, spec-compliant equivalent of DOMEntity
Dom\EntityReference()	(new) This is the modern, spec-compliant equivalent of DOMEntityReference
Dom\HTMLCollection()	(new) Represents a static set of elements
Dom\HTMLDocument()	(new) Represents an HTML document
Dom\HTMLElement()	(new) Represents an element in the HTML namespace
Dom\Implementation()	(new) 
Dom\NamedNodeMap()	(new) Represents the set of attributes on an element
Dom\NamespaceInfo()	(new) This represents immutable information about namespaces of an element
Dom\Node()	(new) This is the modern, spec-compliant equivalent of DOMNode
Dom\NodeList()	(new) This is the modern, spec-compliant equivalent of DOMNodeList
Dom\Notation()	(new) 
Dom\ParentNode()	(new) This is the modern, spec-compliant equivalent of DOMParentNode
Dom\ProcessingInstruction()	(new) This is the modern, spec-compliant equivalent of DOMProcessingInstruction
Dom\Text()	(new) The Dom\Text class inherits from Dom\CharacterData and represents a text node
Dom\TokenList()	(new) Represents a set of tokens in an attribute (e
Dom\XMLDocument()	(new) Represents an XML document
Dom\XPath()	(new) This is the modern, spec-compliant equivalent of DOMXPath
enchant_broker_describe(EnchantBroker $broker): array	Enumera los proveedores de Enchant
enchant_broker_dict_exists(EnchantBroker $broker, string $tag): bool	Si existe o no un diccionario. Usando una etiqueta no vacía
enchant_broker_free_dict(EnchantDictionary $dictionary): bool	Liberar un recurso de diccionario
enchant_broker_free(EnchantBroker $broker): bool	Liberar el recurso de agente y sus diccionarios
enchant_broker_get_dict_path(EnchantBroker $broker, int $type): string|false	Obtener la ruta del directorio para un 'backend' dado
enchant_broker_get_error(EnchantBroker $broker): string|false	Devuelve el último error del agente
enchant_broker_init(): EnchantBroker|false	Crear un nuevo objeto agente capaz de hacer peticiones
enchant_broker_list_dicts(EnchantBroker $broker): array	Devuelve una lista de los diccionarios disponibles
enchant_broker_request_dict(EnchantBroker $broker, string $tag): EnchantDictionary|false	Crear un diccionario usanto una etiqueta
enchant_broker_request_pwl_dict(EnchantBroker $broker, string $filename): EnchantDictionary|false	Crea un diccionario usando un fichero PWL
enchant_broker_set_dict_path(EnchantBroker $broker, int $type, string $path): bool	Establecer la ruta del directorio para un 'backend' dado
enchant_broker_set_ordering(EnchantBroker $broker, string $tag, string $ordering): bool	Declara una preferencia de diccionarios a usar para el lenguaje
enchant_dict_add_to_personal()	Alias of enchant_dict_add
enchant_dict_add_to_session(EnchantDictionary $dictionary, string $word): void	Añadir una palabra a esta sesión ortográfica
enchant_dict_add(EnchantDictionary $dictionary, string $word): void	Add a word to personal word list
enchant_dict_check(EnchantDictionary $dictionary, string $word): bool	Comprobar si una palabra está correctamente escrita o no
enchant_dict_describe(EnchantDictionary $dictionary): array	Describe un diccionario individual
enchant_dict_get_error(EnchantDictionary $dictionary): string|false	Devuelve el último error de la sesión ortográfica actual
enchant_dict_is_added(EnchantDictionary $dictionary, string $word): bool	Whether or not 'word' exists in this spelling-session
enchant_dict_is_in_session()	Alias of enchant_dict_is_added
enchant_dict_quick_check(EnchantDictionary $dictionary, string $word, array $suggestions = null): bool	Verifica si la palabra está correctamente escrita y proporciona sugerencias
enchant_dict_store_replacement(EnchantDictionary $dictionary, string $misspelled, string $correct): void	Añadir una corrección a una palabra
enchant_dict_suggest(EnchantDictionary $dictionary, string $word): array	Devolverá una lista de valores si no se reúnen esas pre-condiciones
EnchantBroker()	(new) A fully opaque class which replaces enchant_broker resources as of PHP 8
EnchantDictionary()	(new) A fully opaque class which replaces enchant_dict resources as of PHP 8
_()	Alias of gettext
bind_textdomain_codeset(string $domain, string|null $codeset = null): string|false	Especifica o recupera el juego de caracteres utilizado para los mensajes del dominio DOMAIN
bindtextdomain(string $domain, string|null $directory = null): string|false	Establece u obtiene la ruta de un dominio
dcgettext(string $domain, string $message, int $category): string	Reemplaza el dominio durante una búsqueda
dcngettext(string $domain, string $singular, string $plural, int $count, int $category): string	Versión plural de dcgettext
dgettext(string $domain, string $message): string	Reemplaza el dominio actual
dngettext(string $domain, string $singular, string $plural, int $count): string	Versión plural de dgettext
gettext(string $message): string	Consultar un mensaje en el dominio actual
ngettext(string $singular, string $plural, int $count): string	Versión plural de gettext
textdomain(string|null $domain = null): string	Establece el dominio actual
gmp_abs(GMP|int|string $num): GMP	Valor absoluto
gmp_add(GMP|int|string $num1, GMP|int|string $num2): GMP	Agrega números
gmp_and(GMP|int|string $num1, GMP|int|string $num2): GMP	AND a nivel de bit
gmp_binomial(GMP|int|string $n, int $k): GMP	Calculates binomial coefficient
gmp_clrbit(GMP $num, int $index): void	Limpia un bit
gmp_cmp(GMP|int|string $num1, GMP|int|string $num2): int	Compara los números
gmp_com(GMP|int|string $num): GMP	Calcula uno de los complementos
gmp_div_q(GMP|int|string $num1, GMP|int|string $num2, int $rounding_mode = GMP_ROUND_ZERO): GMP	Divide los números
gmp_div_qr(GMP|int|string $num1, GMP|int|string $num2, int $rounding_mode = GMP_ROUND_ZERO): array	Divide los números y obtiene el cociente y resto
gmp_div_r(GMP|int|string $num1, GMP|int|string $num2, int $rounding_mode = GMP_ROUND_ZERO): GMP	El resto de la división de los números
gmp_div()	Alias of gmp_div_q
gmp_divexact(GMP|int|string $num1, GMP|int|string $num2): GMP	División exacta de números
gmp_export(GMP|int|string $num, int $word_size = 1, int $flags = GMP_MSW_FIRST | GMP_NATIVE_ENDIAN): string	Exportar a un string binario
gmp_fact(GMP|int|string $num): GMP	Factorial
gmp_gcd(GMP|int|string $num1, GMP|int|string $num2): GMP	Calcula el máximo común divisor
gmp_gcdext(GMP|int|string $num1, GMP|int|string $num2): array	Calcula el máximo común divisor y multiplicadores
gmp_hamdist(GMP|int|string $num1, GMP|int|string $num2): int	Distancia Hamming
gmp_import(string $data, int $word_size = 1, int $flags = GMP_MSW_FIRST | GMP_NATIVE_ENDIAN): GMP	Importar de un string binario
gmp_init(int|string $num, int $base = ?): GMP	Crea un número GMP
gmp_intval(GMP|int|string $num): int	Convertir un número GMP a entero
gmp_invert(GMP|int|string $num1, GMP|int|string $num2): GMP|false	Inverso del modulo
gmp_jacobi(GMP|int|string $num1, GMP|int|string $num2): int	Símbolo Jacobi
gmp_kronecker(GMP|int|string $num1, GMP|int|string $num2): int	Kronecker symbol
gmp_lcm(GMP|int|string $num1, GMP|int|string $num2): GMP	Calculate LCM
gmp_legendre(GMP|int|string $num1, GMP|int|string $num2): int	Símbolo Legendre
gmp_mod(GMP|int|string $num1, GMP|int|string $num2): GMP	Modulo de operación
gmp_mul(GMP|int|string $num1, GMP|int|string $num2): GMP	Multiplicación de números
gmp_neg(GMP|int|string $num): GMP	Número negativo
gmp_nextprime(GMP|int|string $num): GMP	Encuentra el siguiente número primo
gmp_or(GMP|int|string $num1, GMP|int|string $num2): GMP	Nivel de bit OR
gmp_perfect_power(GMP|int|string $num): bool	Perfect power check
gmp_perfect_square(GMP|int|string $num): bool	Comprueba el cuadrado perfecto
gmp_popcount(GMP|int|string $num): int	Cuenta la población
gmp_pow(GMP|int|string $num, int $exponent): GMP	Aumenta el número a la potencia
gmp_powm(GMP|int|string $num, GMP|int|string $exponent, GMP|int|string $modulus): GMP	Eleva un número a la potencia con modulo
gmp_prob_prime(GMP|int|string $num, int $repetitions = 10): int	Revisa si el número es "probablemente primo"
gmp_random_bits(int $bits): GMP	Random number
gmp_random_range(GMP|int|string $min, GMP|int|string $max): GMP	Get a uniformly selected integer
gmp_random_seed(GMP|int|string $seed): void	Establece la semilla RNG
gmp_random(int $limiter = 20): GMP	Numero al azar
gmp_root(GMP|int|string $num, int $nth): GMP	Tomar la parte entera de una raíz enésima
gmp_rootrem(GMP|int|string $num, int $nth): array	Tomar la parte entera y el resto de una raíz enésima
gmp_scan0(GMP|int|string $num1, int $start): int	Escanear para 0
gmp_scan1(GMP|int|string $num1, int $start): int	Escanear para 1
gmp_setbit(GMP $num, int $index, bool $value = true): void	Establece el bit
gmp_sign(GMP|int|string $num): int	El símbolo del número
gmp_sqrt(GMP|int|string $num): GMP	Calcula la raíz cuadrada
gmp_sqrtrem(GMP|int|string $num): array	Raíz cuadrada con resto
gmp_strval(GMP|int|string $num, int $base = 10): string	Convierte un número GMP a cadena
gmp_sub(GMP|int|string $num1, GMP|int|string $num2): GMP	Resta los números
gmp_testbit(GMP|int|string $num, int $index): bool	Prueba si un bit es establecido
gmp_xor(GMP|int|string $num1, GMP|int|string $num2): GMP	Nivel de bit XOR
GMP(int|string $num = ?, int $base = ?)	(new) Create GMP number
>__serialize(): array	(GMP) Serializes the GMP object
>__unserialize(array $data): void	(GMP) Deserializes the $data parameter into a GMP object
ldap_8859_to_t61(string $value): string|false	Traducir caracteres 8859 a caracteres t61
ldap_add_ext(LDAP\Connection $ldap, string $dn, array $entry, array|null $controls = null): LDAP\Result|false	Add entries to LDAP directory
ldap_add(LDAP\Connection $ldap, string $dn, array $entry, array|null $controls = null): bool	Agregar entradas al directorio de LDAP
ldap_bind_ext(LDAP\Connection $ldap, string|null $dn = null, string|null $password = null, array|null $controls = null): LDAP\Result|false	Bind to LDAP directory
ldap_bind(LDAP\Connection $ldap, string|null $dn = null, string|null $password = null): bool	Realiza la autenticación con un servidor LDAP
ldap_close()	Alias of ldap_unbind
ldap_compare(LDAP\Connection $ldap, string $dn, string $attribute, string $value, array|null $controls = null): bool|int	Comparar el valor del atributo encontrado en la entrada que se especificó con un DN
ldap_connect_wallet(string|null $uri = null, string $wallet, string $password, int $auth_mode = GSLC_SSL_NO_AUTH): LDAP\Connection|false	Connect to an LDAP server
ldap_connect(string|null $uri = null): LDAP\Connection|false	Abre una conexión a un servidor LDAP
ldap_connect(string|null $host = null, int $port = 389): LDAP\Connection|false	Abre una conexión a un servidor LDAP
ldap_control_paged_result_response(resource $link, resource $result, string $cookie = ?, int $estimated = ?): bool	Recuperar la cookie de paginación LDAP
ldap_control_paged_result(resource $link, int $pagesize, bool $iscritical = false, string $cookie = ""): bool	Enviar el control de paginación LDAP
ldap_count_entries(LDAP\Connection $ldap, LDAP\Result $result): int	Contar el número de entradas en una búsqueda
ldap_count_references(LDAP\Connection $ldap, LDAP\Result $result): int	Counts the number of references in a search result
ldap_delete_ext(LDAP\Connection $ldap, string $dn, array|null $controls = null): LDAP\Result|false	Delete an entry from a directory
ldap_delete(LDAP\Connection $ldap, string $dn, array|null $controls = null): bool	Eliminar una entrada de un directorio
ldap_dn2ufn(string $dn): string|false	Convertir un DN a un formato de nombramiento amigable al usuario
ldap_err2str(int $errno): string	Convertir un número de error de LDAP a una cadena con un mensaje de error
ldap_errno(LDAP\Connection $ldap): int	Devuelve el número de error LDAP del último comando LDAP
ldap_error(LDAP\Connection $ldap): string	Devuelve el mensaje de error de LDAP del último comando LDAP
ldap_escape(string $value, string $ignore = "", int $flags = ?): string	Escapa una cadena de texto para su uso en un filtro LDAP o DN
ldap_exop_passwd(LDAP\Connection $ldap, string $user = "", string $old_password = "", string $new_password = "", array $controls = null): string|bool	PASSWD extended operation helper
ldap_exop_refresh(LDAP\Connection $ldap, string $dn, int $ttl): int|false	Refresh extended operation helper
ldap_exop_sync(LDAP\Connection $ldap, string $request_oid, string|null $request_data = null, array|null $controls = null, string $response_data = null, string $response_oid = null): LDAP\Result|bool	Performs an extended operation
ldap_exop_whoami(LDAP\Connection $ldap): string|false	WHOAMI extended operation helper
ldap_exop(LDAP\Connection $ldap, string $request_oid, string $request_data = null, array $controls = null, string $response_data = ?, string $response_oid = ?): mixed	Performs an extended operation
ldap_explode_dn(string $dn, int $with_attrib): array|false	Divide un DN en sus partes componentes
ldap_first_attribute(LDAP\Connection $ldap, LDAP\ResultEntry $entry): string|false	Devolver el primer atributo
ldap_first_entry(LDAP\Connection $ldap, LDAP\Result $result): LDAP\ResultEntry|false	Devolver el primer resultado de identificación
ldap_first_reference(LDAP\Connection $ldap, LDAP\Result $result): LDAP\ResultEntry|false	Devolver la primera referencia
ldap_free_result(LDAP\Result $result): bool	Liberar la memoria de resultado
ldap_get_attributes(LDAP\Connection $ldap, LDAP\ResultEntry $entry): array	Obtener atributos de una entrada de búsqueda de resultados
ldap_get_dn(LDAP\Connection $ldap, LDAP\ResultEntry $entry): string|false	Get the DN of a result entry
ldap_get_entries(LDAP\Connection $ldap, LDAP\Result $result): array|false	Obtener todas las entradas de los resultados
ldap_get_option(LDAP\Connection $ldap, int $option, array|string|int $value = null): bool	Obtener el valor actual para la opción dada
ldap_get_values_len(LDAP\Connection $ldap, LDAP\ResultEntry $entry, string $attribute): array|false	Obtener todos los valores binarios desde una entrada de resultados
ldap_get_values(LDAP\Connection $ldap, LDAP\ResultEntry $entry, string $attribute): array|false	Obtener todos los valores de una entrada de resultados
ldap_list(LDAP\Connection|array $ldap, array|string $base, array|string $filter, array $attributes = [], int $attributes_only = ?, int $sizelimit = -1, int $timelimit = -1, int $deref = LDAP_DEREF_NEVER, array|null $controls = null): LDAP\Result|array|false	Búsqueda de un solo nivel
ldap_mod_add_ext(LDAP\Connection $ldap, string $dn, array $entry, array|null $controls = null): LDAP\Result|false	Add attribute values to current attributes
ldap_mod_add(LDAP\Connection $ldap, string $dn, array $entry, array|null $controls = null): bool	Agregar valores de atributo a los atributos actuales
ldap_mod_del_ext(LDAP\Connection $ldap, string $dn, array $entry, array|null $controls = null): LDAP\Result|false	Delete attribute values from current attributes
ldap_mod_del(LDAP\Connection $ldap, string $dn, array $entry, array|null $controls = null): bool	Borrar valores de atributo de los atributos actuales
ldap_mod_replace_ext(LDAP\Connection $ldap, string $dn, array $entry, array|null $controls = null): LDAP\Result|false	Replace attribute values with new ones
ldap_mod_replace(LDAP\Connection $ldap, string $dn, array $entry, array|null $controls = null): bool	Reemplazar valores de atributos con valores nuevos
ldap_modify_batch(LDAP\Connection $ldap, string $dn, array $modifications_info, array|null $controls = null): bool	Batch and execute modifications on an LDAP entry
ldap_modify()	Alias of ldap_mod_replace
ldap_next_attribute(LDAP\Connection $ldap, LDAP\ResultEntry $entry): string|false	Obtener el siguiente atributo en un resultado
ldap_next_entry(LDAP\Connection $ldap, LDAP\ResultEntry $entry): LDAP\ResultEntry|false	Obtener el siguiente resultado de entrada
ldap_next_reference(LDAP\Connection $ldap, LDAP\ResultEntry $entry): LDAP\ResultEntry|false	Obtener la siguiente referencia
ldap_parse_exop(LDAP\Connection $ldap, LDAP\Result $result, string $response_data = null, string $response_oid = null): bool	Parse result object from an LDAP extended operation
ldap_parse_reference(LDAP\Connection $ldap, LDAP\ResultEntry $entry, array $referrals): bool	Extraer información de la entrada de referencia
ldap_parse_result(LDAP\Connection $ldap, LDAP\Result $result, int $error_code, string $matched_dn = null, string $error_message = null, array $referrals = null, array $controls = null): bool	Extraer información del resultado
ldap_read(LDAP\Connection|array $ldap, array|string $base, array|string $filter, array $attributes = [], int $attributes_only = ?, int $sizelimit = -1, int $timelimit = -1, int $deref = LDAP_DEREF_NEVER, array|null $controls = null): LDAP\Result|array|false	Leer una entrada
ldap_rename_ext(LDAP\Connection $ldap, string $dn, string $new_rdn, string $new_parent, bool $delete_old_rdn, array|null $controls = null): LDAP\Result|false	Modify the name of an entry
ldap_rename(LDAP\Connection $ldap, string $dn, string $new_rdn, string $new_parent, bool $delete_old_rdn, array|null $controls = null): bool	Modificar el nombre de una entrada
ldap_sasl_bind(LDAP\Connection $ldap, string|null $dn = null, string|null $password = null, string|null $mech = null, string|null $realm = null, string|null $authc_id = null, string|null $authz_id = null, string|null $props = null): bool	Unirse a un directorio LDAP utilizando SASL
ldap_search(LDAP\Connection|array $ldap, array|string $base, array|string $filter, array $attributes = [], int $attributes_only = ?, int $sizelimit = -1, int $timelimit = -1, int $deref = LDAP_DEREF_NEVER, array|null $controls = null): LDAP\Result|array|false	Buscar el árbol LDAP
ldap_set_option(LDAP\Connection|null $ldap, int $option, array|string|int|bool $value): bool	Establecer el valor de la opción proporcionada
ldap_set_rebind_proc(LDAP\Connection $ldap, callable|null $callback): bool	Establece una función de devolución de llamada para realizar revinculaciones en el rastreo referencial
ldap_sort(resource $link, resource $result, string $sortfilter): bool	Clasificar entradas de resultados de LDAP en el lado del cliente
ldap_start_tls(LDAP\Connection $ldap): bool	Inciar TLS
ldap_t61_to_8859(string $value): string|false	Traduce del conjunto de caracteres t61 al conjunto de caracteres 8859
ldap_unbind(LDAP\Connection $ldap): bool	Desconecta de un servidor LDAP
LDAP\Connection()	(new) A fully opaque class which replaces a ldap resource as of PHP 8
LDAP\Result()	(new) A fully opaque class which replaces a ldap result resource as of PHP 8
LDAP\ResultEntry()	(new) A fully opaque class which replaces a ldap result entry resource as of PHP 8
libxml_clear_errors(): void	Limpia el buffer de errores de libxml
libxml_disable_entity_loader(bool $disable = true): bool	Deshabilita la capacidad de cargar entidades externas
libxml_get_errors(): array	Recupera un array de errores
libxml_get_external_entity_loader(): callable|null	Get the current external entity loader
libxml_get_last_error(): LibXMLError|false	Recupera el último error de libxml
libxml_set_external_entity_loader(callable|null $resolver_function): bool	Cambia el cargador externo por defecto de entidades
libxml_set_streams_context(resource $context): void	Configura el contexto de flujo para el próximo documento libxml cargado o escrito
libxml_use_internal_errors(bool|null $use_errors = null): bool	Deshabilita errores libxml y permite al usuario extraer información de errores según sea necesario
LibXMLError()	(new) Contiene diversa información sobre los errores lanzados por libxml
mysqli_connect()	Alias of mysqli::__construct
>escape_string()	(mysqli) Alias of mysqli_real_escape_string
mysqli_execute()	Alias of mysqli_stmt_execute
mysqli_get_client_stats(): array	Returns client per-process statistics
mysqli_get_links_stats(): array	Devolver información sobre enlaces abiertos y almacenados en caché
mysqli_report()	Alias of mysqli_driver->report_mode
>set_opt()	(mysqli) Alias of mysqli_options
mysqli_affected_rows(mysqli $mysql): int|string	Obtiene el número de filas afectadas en la última operación MySQL
>autocommit(bool $enable): bool	(mysqli) Activa o desactiva las modificaciones de la base de datos autoconsignadas
mysqli_autocommit(mysqli $mysql, bool $enable): bool	Activa o desactiva las modificaciones de la base de datos autoconsignadas
>begin_transaction(int $flags = ?, string|null $name = null): bool	(mysqli) Inicia una transacción
mysqli_begin_transaction(mysqli $mysql, int $flags = ?, string|null $name = null): bool	Inicia una transacción
>change_user(string $username, string $password, string|null $database): bool	(mysqli) Cambia el usuario de la conexión de bases de datos especificada
mysqli_change_user(mysqli $mysql, string $username, string $password, string|null $database): bool	Cambia el usuario de la conexión de bases de datos especificada
>character_set_name(): string	(mysqli) Devuelve el juego de caracteres predeterminado para la conexión a la base de datos
mysqli_character_set_name(mysqli $mysql): string	Devuelve el juego de caracteres predeterminado para la conexión a la base de datos
>close(): true	(mysqli) Cierra una conexión previamente abierta a una base de datos
mysqli_close(mysqli $mysql): true	Cierra una conexión previamente abierta a una base de datos
>commit(int $flags = ?, string|null $name = null): bool	(mysqli) Consigna la transacción actual
mysqli_commit(mysqli $mysql, int $flags = ?, string|null $name = null): bool	Consigna la transacción actual
mysqli_connect_errno(): int	Devuelve el código de error de la última llamada
mysqli_connect_error(): string|null	Devuelve una cadena con la descripción del último error de conexión
>connect(string|null $hostname = null, string|null $username = null, string|null $password = null, string|null $database = null, int|null $port = null, string|null $socket = null): bool	(mysqli) Abre una nueva conexión al servidor de MySQL
mysqli_connect(string|null $hostname = null, string|null $username = null, string|null $password = null, string|null $database = null, int|null $port = null, string|null $socket = null): mysqli|false	Abre una nueva conexión al servidor de MySQL
>debug(string $options): true	(mysqli) Realiza operaciones de depuración
mysqli_debug(string $options): true	Realiza operaciones de depuración
>dump_debug_info(): bool	(mysqli) Volcado de información de depuración en el registro
mysqli_dump_debug_info(mysqli $mysql): bool	Volcado de información de depuración en el registro
mysqli_errno(mysqli $mysql): int	Devuelve el código del error de la última función llamada
mysqli_error_list(mysqli $mysql): array	Devuelve una lista de errores desde el último comando ejecutado
mysqli_error(mysqli $mysql): string	Devuelve una cadena que describe el último error
>execute_query(string $query, array|null $params = null): mysqli_result|bool	(mysqli) Prepares, binds parameters, and executes SQL statement
mysqli_execute_query(mysqli $mysql, string $query, array|null $params = null): mysqli_result|bool	Prepares, binds parameters, and executes SQL statement
mysqli_field_count(mysqli $mysql): int	Devuelve el número de columnas para la consulta más reciente
>get_charset(): object|null	(mysqli) Devuelve un objeto que contiene el conjunto de caracteres
mysqli_get_charset(mysqli $mysql): object|null	Devuelve un objeto que contiene el conjunto de caracteres
>get_client_info(): string	(mysqli) Obtiene información de la biblioteca cliente de MySQL
mysqli_get_client_info(mysqli|null $mysql = null): string	Obtiene información de la biblioteca cliente de MySQL
mysqli_get_client_version(): int	Devuelve la versión clientes de MySQL como valor de tipo integer
>get_connection_stats(): array	(mysqli) Devuelve estadísticas sobre la conexión del cliente
mysqli_get_connection_stats(mysqli $mysql): array	Devuelve estadísticas sobre la conexión del cliente
mysqli_get_host_info(mysqli $mysql): string	Devuelve una cadena que representa el tipo de conexión usada
mysqli_get_proto_info(mysqli $mysql): int	Devuelve la versión del protocolo MySQL utilizada
>get_server_info(): string	(mysqli) Devuelve la versión del servidor MySQL
mysqli_get_server_info(mysqli $mysql): string	Devuelve la versión del servidor MySQL
mysqli_get_server_version(mysqli $mysql): int	Devuelve la versión del servidor MySQL como un valor entero
>get_warnings(): mysqli_warning|false	(mysqli) Obtiene el resultado de SHOW WARNINGS
mysqli_get_warnings(mysqli $mysql): mysqli_warning|false	Obtiene el resultado de SHOW WARNINGS
mysqli_info(mysqli $mysql): string|null	Obtiene la información de la última consulta ejecutada
>init(): bool|null	(mysqli) Inicializa y devuelve un recurso para utilizarlo con mysqli_real_connect()
mysqli_init(): mysqli|false	Inicializa y devuelve un recurso para utilizarlo con mysqli_real_connect()
mysqli_insert_id(mysqli $mysql): int|string	Devuelve el id autogenerado que se utilizó en la última consulta
>kill(int $process_id): bool	(mysqli) Pide al servidor poner fin a un hilo de MySQL
mysqli_kill(mysqli $mysql, int $process_id): bool	Pide al servidor poner fin a un hilo de MySQL
>more_results(): bool	(mysqli) Comprueba si hay más resultados de una multi consulta
mysqli_more_results(mysqli $mysql): bool	Comprueba si hay más resultados de una multi consulta
>multi_query(string $query): bool	(mysqli) Realiza una consulta a la base de datos
mysqli_multi_query(mysqli $mysql, string $query): bool	Realiza una consulta a la base de datos
>next_result(): bool	(mysqli) Prepara el siguiente resultado de multi_query
mysqli_next_result(mysqli $mysql): bool	Prepara el siguiente resultado de multi_query
>options(int $option, string|int $value): bool	(mysqli) Establecer opciones
mysqli_options(mysqli $mysql, int $option, string|int $value): bool	Establecer opciones
>ping(): bool	(mysqli) Comprueba la conexión al servidor, o trata de reconectar si se perdió la conexión
mysqli_ping(mysqli $mysql): bool	Comprueba la conexión al servidor, o trata de reconectar si se perdió la conexión
mysqli::poll(array|null $read, array|null $error, array $reject, int $seconds, int $microseconds = ?): int|false	Almacena en caché conexiones
mysqli_poll(array|null $read, array|null $error, array $reject, int $seconds, int $microseconds = ?): int|false	Almacena en caché conexiones
>prepare(string $query): mysqli_stmt|false	(mysqli) Prepara una sentencia SQL para su ejecución
mysqli_prepare(mysqli $mysql, string $query): mysqli_stmt|false	Prepara una sentencia SQL para su ejecución
>query(string $query, int $result_mode = MYSQLI_STORE_RESULT): mysqli_result|bool	(mysqli) Realiza una consulta a la base de datos
mysqli_query(mysqli $mysql, string $query, int $result_mode = MYSQLI_STORE_RESULT): mysqli_result|bool	Realiza una consulta a la base de datos
>real_connect(string|null $hostname = null, string|null $username = null, string|null $password = null, string|null $database = null, int|null $port = null, string|null $socket = null, int $flags = ?): bool	(mysqli) Abre una conexión a un servidor mysql
mysqli_real_connect(mysqli $mysql, string|null $hostname = null, string|null $username = null, string|null $password = null, string|null $database = null, int|null $port = null, string|null $socket = null, int $flags = ?): bool	Abre una conexión a un servidor mysql
>real_escape_string(string $string): string	(mysqli) Escapa los caracteres especiales de una cadena para usarla en una sentencia SQL, tomando en cuenta el conjunto de caracteres actual de la conexión
mysqli_real_escape_string(mysqli $mysql, string $string): string	Escapa los caracteres especiales de una cadena para usarla en una sentencia SQL, tomando en cuenta el conjunto de caracteres actual de la conexión
>real_query(string $query): bool	(mysqli) Ejecuta una consulta SQL
mysqli_real_query(mysqli $mysql, string $query): bool	Ejecuta una consulta SQL
>reap_async_query(): mysqli_result|bool	(mysqli) Obtener el resultado de una consulta asincrónica
mysqli_reap_async_query(mysqli $mysql): mysqli_result|bool	Obtener el resultado de una consulta asincrónica
>refresh(int $flags): bool	(mysqli) Refresca
mysqli_refresh(mysqli $mysql, int $flags): bool	Refresca
>release_savepoint(string $name): bool	(mysqli) Elimina el punto salvado con nombre del conjunto de puntos salvados de la transacción actual
mysqli_release_savepoint(mysqli $mysql, string $name): bool	Elimina el punto salvado con nombre del conjunto de puntos salvados de la transacción actual
>rollback(int $flags = ?, string|null $name = null): bool	(mysqli) Revierte la transacción actual
mysqli_rollback(mysqli $mysql, int $flags = ?, string|null $name = null): bool	Revierte la transacción actual
>savepoint(string $name): bool	(mysqli) Define el nombre de un punto de salvaguarda de la transacción
mysqli_savepoint(mysqli $mysql, string $name): bool	Define el nombre de un punto de salvaguarda de la transacción
>select_db(string $database): bool	(mysqli) Selecciona la base de datos por defecto para realizar las consultas
mysqli_select_db(mysqli $mysql, string $database): bool	Selecciona la base de datos por defecto para realizar las consultas
>set_charset(string $charset): bool	(mysqli) Establece el conjunto de caracteres predeterminado del cliente
mysqli_set_charset(mysqli $mysql, string $charset): bool	Establece el conjunto de caracteres predeterminado del cliente
mysqli_sqlstate(mysqli $mysql): string	Devuelve el error SQLSTATE de la operación de MySQL previa
>ssl_set(string|null $key, string|null $certificate, string|null $ca_certificate, string|null $ca_path, string|null $cipher_algos): true	(mysqli) Usada para establece conexiones seguras usando SSL
mysqli_ssl_set(mysqli $mysql, string|null $key, string|null $certificate, string|null $ca_certificate, string|null $ca_path, string|null $cipher_algos): true	Usada para establece conexiones seguras usando SSL
>stat(): string|false	(mysqli) Obtiene el estado actual del sistema
mysqli_stat(mysqli $mysql): string|false	Obtiene el estado actual del sistema
>stmt_init(): mysqli_stmt|false	(mysqli) Inicializa una sentencia y devuelve un objeto para usarlo con mysqli_stmt_prepare
mysqli_stmt_init(mysqli $mysql): mysqli_stmt|false	Inicializa una sentencia y devuelve un objeto para usarlo con mysqli_stmt_prepare
>store_result(int $mode = ?): mysqli_result|false	(mysqli) Transfiere un conjunto de resultados de la última consulta
mysqli_store_result(mysqli $mysql, int $mode = ?): mysqli_result|false	Transfiere un conjunto de resultados de la última consulta
mysqli_thread_id(mysqli $mysql): int	Deveulve el ID del hilo de la conexión actual
>thread_safe(): bool	(mysqli) Devuelve si la seguridad a nivel de hilos está dada o no
mysqli_thread_safe(): bool	Devuelve si la seguridad a nivel de hilos está dada o no
>use_result(): mysqli_result|false	(mysqli) Inicia la recuperación de un conjunto de resultados
mysqli_use_result(mysqli $mysql): mysqli_result|false	Inicia la recuperación de un conjunto de resultados
mysqli_warning_count(mysqli $mysql): int	Devuelve el número de mensajes de advertencia de la última consulta para un enlace dado
>embedded_server_end(): void	(mysqli_driver) Detener el servidor incrustado
mysqli_embedded_server_end(): void	Detener el servidor incrustado
>embedded_server_start(int $start, array $arguments, array $groups): bool	(mysqli_driver) Inicializa e inicia el servidor embebido
mysqli_embedded_server_start(int $start, array $arguments, array $groups): bool	Inicializa e inicia el servidor embebido
mysqli_report(int $flags): true	Habilita o desabilita las funciones internas de notificación
mysqli_result(mysqli $mysql, int $result_mode = MYSQLI_STORE_RESULT)	(new) Constructs a mysqli_result object
mysqli_field_tell(mysqli_result $result): int	Obtener posición del campo actual de un puntero a un resultado
>data_seek(int $offset): bool	(mysqli_result) Ajustar el puntero de resultado a una fila arbitraria del resultado
mysqli_data_seek(mysqli_result $result, int $offset): bool	Ajustar el puntero de resultado a una fila arbitraria del resultado
>fetch_all(int $mode = MYSQLI_NUM): array	(mysqli_result) Obtener todas las filas en un array asociativo, numérico, o en ambos
mysqli_fetch_all(mysqli_result $result, int $mode = MYSQLI_NUM): array	Obtener todas las filas en un array asociativo, numérico, o en ambos
>fetch_array(int $mode = MYSQLI_BOTH): array|null|false	(mysqli_result) Obtiene una fila de resultados como un array asociativo, numérico, o ambos
mysqli_fetch_array(mysqli_result $result, int $mode = MYSQLI_BOTH): array|null|false	Obtiene una fila de resultados como un array asociativo, numérico, o ambos
>fetch_assoc(): array|null|false	(mysqli_result) Obtener una fila de resultado como un array asociativo
mysqli_fetch_assoc(mysqli_result $result): array|null|false	Obtener una fila de resultado como un array asociativo
>fetch_column(int $column = ?): null|int|float|string|false	(mysqli_result) Fetch a single column from the next row of a result set
mysqli_fetch_column(mysqli_result $result, int $column = ?): null|int|float|string|false	Fetch a single column from the next row of a result set
>fetch_field_direct(int $index): object|false	(mysqli_result) Obtener los metadatos de un único campo
mysqli_fetch_field_direct(mysqli_result $result, int $index): object|false	Obtener los metadatos de un único campo
>fetch_field(): object|false	(mysqli_result) Retorna el próximo campo del resultset
mysqli_fetch_field(mysqli_result $result): object|false	Retorna el próximo campo del resultset
>fetch_fields(): array	(mysqli_result) Devuelve un array de objetos que representan los campos de un conjunto de resultados
mysqli_fetch_fields(mysqli_result $result): array	Devuelve un array de objetos que representan los campos de un conjunto de resultados
>fetch_object(string $class = "stdClass", array $constructor_args = []): object|null|false	(mysqli_result) Devuelve la fila actual de un conjunto de resultados como un objeto
mysqli_fetch_object(mysqli_result $result, string $class = "stdClass", array $constructor_args = []): object|null|false	Devuelve la fila actual de un conjunto de resultados como un objeto
>fetch_row(): array|null|false	(mysqli_result) Obtener una fila de resultados como un array enumerado
mysqli_fetch_row(mysqli_result $result): array|null|false	Obtener una fila de resultados como un array enumerado
mysqli_num_fields(mysqli_result $result): int	Obtiene el número de campos de un resultado
>field_seek(int $index): true	(mysqli_result) Establecer el puntero del resultado al índice del campo especificado
mysqli_field_seek(mysqli_result $result, int $index): true	Establecer el puntero del resultado al índice del campo especificado
>free(): void	(mysqli_result) Libera la memoria asociada a un resultado
>close(): void	(mysqli_result) Libera la memoria asociada a un resultado
>free_result(): void	(mysqli_result) Libera la memoria asociada a un resultado
mysqli_free_result(mysqli_result $result): void	Libera la memoria asociada a un resultado
>getIterator(): Iterator	(mysqli_result) Retrieve an external iterator
mysqli_fetch_lengths(mysqli_result $result): array|false	Retorna los largos de las columnas de la fila actual en el resultset
mysqli_num_rows(mysqli_result $result): int|string	Obtiene el número de filas de un resultado
>getSqlState(): string	(mysqli_sql_exception) Returns the SQLSTATE error code
mysqli_stmt_affected_rows(mysqli_stmt $statement): int|string	Devuelve el número total de filas cambiadas, borradas, o insertadas por la última sentencia ejecutada
>attr_get(int $attribute): int	(mysqli_stmt) Se utiliza para obtener el valor actual de un atributo de la sentencia
mysqli_stmt_attr_get(mysqli_stmt $statement, int $attribute): int	Se utiliza para obtener el valor actual de un atributo de la sentencia
>attr_set(int $attribute, int $value): bool	(mysqli_stmt) Se utiliza para modificar el comportamiento de una sentencia preparada
mysqli_stmt_attr_set(mysqli_stmt $statement, int $attribute, int $value): bool	Se utiliza para modificar el comportamiento de una sentencia preparada
>bind_param(string $types, mixed $var, mixed ...$vars): bool	(mysqli_stmt) Agrega variables a una sentencia preparada como parámetros
mysqli_stmt_bind_param(mysqli_stmt $statement, string $types, mixed $var, mixed ...$vars): bool	Agrega variables a una sentencia preparada como parámetros
>bind_result(mixed $var, mixed ...$vars): bool	(mysqli_stmt) Vincula variables a una sentencia preparada para el almacenamiento de resultados
mysqli_stmt_bind_result(mysqli_stmt $statement, mixed $var, mixed ...$vars): bool	Vincula variables a una sentencia preparada para el almacenamiento de resultados
>close(): true	(mysqli_stmt) Cierra una sentencia preparada
mysqli_stmt_close(mysqli_stmt $statement): true	Cierra una sentencia preparada
mysqli_stmt(mysqli $mysql, string|null $query = null)	(new) Construye un nuevo objeto mysqli_stmt
>data_seek(int $offset): void	(mysqli_stmt) Busca una fila arbitraria en un conjunto de resultados de una sentencia
mysqli_stmt_data_seek(mysqli_stmt $statement, int $offset): void	Busca una fila arbitraria en un conjunto de resultados de una sentencia
mysqli_stmt_errno(mysqli_stmt $statement): int	Devuelve el código de error de la llamada de la sentencia más reciente
mysqli_stmt_error_list(mysqli_stmt $statement): array	Devuelve una lista de errores de la última sentencia ejecutada
mysqli_stmt_error(mysqli_stmt $statement): string	Devuelve una descripción en forma de string del último error de una sentencia
>execute(array|null $params = null): bool	(mysqli_stmt) Ejecuta una consulta preparada
mysqli_stmt_execute(mysqli_stmt $statement, array|null $params = null): bool	Ejecuta una consulta preparada
>fetch(): bool|null	(mysqli_stmt) Obtiene los resultados de una sentencia preparadas en las variables vinculadas
mysqli_stmt_fetch(mysqli_stmt $statement): bool|null	Obtiene los resultados de una sentencia preparadas en las variables vinculadas
mysqli_stmt_field_count(mysqli_stmt $statement): int	Devuelve el número de campos de la sentencia dada
>free_result(): void	(mysqli_stmt) Libera la memoria de los resultados almacenados del gestor de sentencia dado
mysqli_stmt_free_result(mysqli_stmt $statement): void	Libera la memoria de los resultados almacenados del gestor de sentencia dado
>get_result(): mysqli_result|false	(mysqli_stmt) Obtiene un conjunto de resultados de una sentencia preparada
mysqli_stmt_get_result(mysqli_stmt $statement): mysqli_result|false	Obtiene un conjunto de resultados de una sentencia preparada
>get_warnings(): mysqli_warning|false	(mysqli_stmt) Obtener los resultados de SHOW WARNINGS
mysqli_stmt_get_warnings(mysqli_stmt $statement): mysqli_warning|false	Obtener los resultados de SHOW WARNINGS
mysqli_stmt_insert_id(mysqli_stmt $statement): int|string	Obtener el ID generado en la operación INSERT anterior
>more_results(): bool	(mysqli_stmt) Comprobar si existen más resultados de una consulta de consultas múltiples
mysqli_stmt_more_results(mysqli_stmt $statement): bool	Comprobar si existen más resultados de una consulta de consultas múltiples
>next_result(): bool	(mysqli_stmt) Lee el siguiente resultado de una consulta múltiple
mysqli_stmt_next_result(mysqli_stmt $statement): bool	Lee el siguiente resultado de una consulta múltiple
>num_rows(): int|string	(mysqli_stmt) Devuelve el número de filas de un conjunto de resultados de una sentencia
mysqli_stmt_num_rows(mysqli_stmt $statement): int|string	Devuelve el número de filas de un conjunto de resultados de una sentencia
mysqli_stmt_param_count(mysqli_stmt $statement): int	Devuelve el número de parámetros de la sentencia dada
>prepare(string $query): bool	(mysqli_stmt) Preparar una sentencia SQL para su ejecución
mysqli_stmt_prepare(mysqli_stmt $statement, string $query): bool	Preparar una sentencia SQL para su ejecución
>reset(): bool	(mysqli_stmt) Reinicia una sentencia preparada
mysqli_stmt_reset(mysqli_stmt $statement): bool	Reinicia una sentencia preparada
>result_metadata(): mysqli_result|false	(mysqli_stmt) Devuelve los metadatos del conjunto de resultados de una sentencia preparada
mysqli_stmt_result_metadata(mysqli_stmt $statement): mysqli_result|false	Devuelve los metadatos del conjunto de resultados de una sentencia preparada
>send_long_data(int $param_num, string $data): bool	(mysqli_stmt) Enviar datos en bloques
mysqli_stmt_send_long_data(mysqli_stmt $statement, int $param_num, string $data): bool	Enviar datos en bloques
mysqli_stmt_sqlstate(mysqli_stmt $statement): string	Devuelve el error SQLSTATE de la operación de sentencia previa
>store_result(): bool	(mysqli_stmt) Transfiere un conjunto de resultados desde una sentencia preparada
mysqli_stmt_store_result(mysqli_stmt $statement): bool	Transfiere un conjunto de resultados desde una sentencia preparada
mysqli_warning()	(new) Private constructor to disallow direct instantiation
>next(): bool	(mysqli_warning) El propósito next
mysqli()	(new) Representa una conexión entre PHP y una base de datos MySQL
mysqli_driver()	(new) MySQLi Driver
mysqli_sql_exception()	(new) La clase que gestiona las excepciones mysqli
openssl_cipher_iv_length(string $cipher_algo): int|false	Obtener la longitud del iv de cipher
openssl_cipher_key_length(string $cipher_algo): int|false	Gets the cipher key length
openssl_cms_decrypt(string $input_filename, string $output_filename, OpenSSLCertificate|string $certificate, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string|null $private_key = null, int $encoding = OPENSSL_ENCODING_SMIME): bool	Decrypt a CMS message
openssl_cms_encrypt(string $input_filename, string $output_filename, OpenSSLCertificate|array|string $certificate, array|null $headers, int $flags = ?, int $encoding = OPENSSL_ENCODING_SMIME, int $cipher_algo = OPENSSL_CIPHER_AES_128_CBC): bool	Encrypt a CMS message
openssl_cms_read(string $input_filename, array $certificates): bool	Export the CMS file to an array of PEM certificates
openssl_cms_sign(string $input_filename, string $output_filename, OpenSSLCertificate|string $certificate, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, array|null $headers, int $flags = ?, int $encoding = OPENSSL_ENCODING_SMIME, string|null $untrusted_certificates_filename = null): bool	Sign a file
openssl_cms_verify(string $input_filename, int $flags = ?, string|null $certificates = null, array $ca_info = [], string|null $untrusted_certificates_filename = null, string|null $content = null, string|null $pk7 = null, string|null $sigfile = null, int $encoding = OPENSSL_ENCODING_SMIME): bool	Verify a CMS signature
openssl_csr_export_to_file(OpenSSLCertificateSigningRequest|string $csr, string $output_filename, bool $no_text = true): bool	Exporta una CSR a un archivo
openssl_csr_export(OpenSSLCertificateSigningRequest|string $csr, string $output, bool $no_text = true): bool	Exporta una CSR como una cadena
openssl_csr_get_public_key(OpenSSLCertificateSigningRequest|string $csr, bool $short_names = true): OpenSSLAsymmetricKey|false	Devuelve la clave púbilca de un CERT
openssl_csr_get_subject(OpenSSLCertificateSigningRequest|string $csr, bool $short_names = true): array|false	Devuelve el sujeto de un CERT
openssl_csr_new(array $distinguished_names, OpenSSLAsymmetricKey|null $private_key, array|null $options = null, array|null $extra_attributes = null): OpenSSLCertificateSigningRequest|bool	Genera una CSR
openssl_csr_sign(OpenSSLCertificateSigningRequest|string $csr, OpenSSLCertificate|string|null $ca_certificate, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, int $days, array|null $options = null, int $serial = ?, string|null $serial_hex = null): OpenSSLCertificate|false	Firmar una CSR con otro certificado (o autofirmar) y generar un certificado
openssl_decrypt(string $data, string $cipher_algo, string $passphrase, int $options = ?, string $iv = "", string|null $tag = null, string $aad = ""): string|false	Desencripta datos
openssl_dh_compute_key(string $public_key, OpenSSLAsymmetricKey $private_key): string|false	Computa el secreto compartido para un valor público de una clave DH remota y una clave DH local
openssl_digest(string $data, string $digest_algo, bool $binary = false): string|false	Computa un método de resumen
openssl_encrypt(string $data, string $cipher_algo, string $passphrase, int $options = ?, string $iv = "", string $tag = null, string $aad = "", int $tag_length = 16): string|false	Cifra datos
openssl_error_string(): string|false	Devolver un mensaje de error openSSL
openssl_free_key(OpenSSLAsymmetricKey $key): void	Liberar el recurso de clave
openssl_get_cert_locations(): array	Obtener las ubicaciones de certificados disponibles
openssl_get_cipher_methods(bool $aliases = false): array	Obtiene los métodos de cifrado disponibles
openssl_get_curve_names(): array|false	Gets list of available curve names for ECC
openssl_get_md_methods(bool $aliases = false): array	Obtener los métodos de resumen disponibles
openssl_get_privatekey()	Alias of openssl_pkey_get_private
openssl_get_publickey()	Alias of openssl_pkey_get_public
openssl_open(string $data, string $output, string $encrypted_key, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, string $cipher_algo, string|null $iv = null): bool	Abre información sellada
openssl_pbkdf2(string $password, string $salt, int $key_length, int $iterations, string $digest_algo = "sha1"): string|false	Genera un string PKCS5 v2 PBKDF2, predeterminado a SHA-1
openssl_pkcs12_export_to_file(OpenSSLCertificate|string $certificate, string $output_filename, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, string $passphrase, array $options = []): bool	Exporta un Archivo de Almacén de Certificado Compatible con PKCS#12
openssl_pkcs12_export(OpenSSLCertificate|string $certificate, string $output, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, string $passphrase, array $options = []): bool	Exporta un Archivo de Almacén de Certificado Compatible con PKCS#12 a una variable
openssl_pkcs12_read(string $pkcs12, array $certificates, string $passphrase): bool	Convierte un Almacén de Certificado PKCS#12 a una matriz
openssl_pkcs7_decrypt(string $input_filename, string $output_filename, OpenSSLCertificate|string $certificate, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string|null $private_key = null): bool	Desencripta un mensaje S/MIME encriptado
openssl_pkcs7_encrypt(string $input_filename, string $output_filename, OpenSSLCertificate|array|string $certificate, array|null $headers, int $flags = ?, int $cipher_algo = OPENSSL_CIPHER_AES_128_CBC): bool	Encriptar un mensaje S/MIME
openssl_pkcs7_read(string $data, array $certificates): bool	Export the PKCS7 file to an array of PEM certificates
openssl_pkcs7_sign(string $input_filename, string $output_filename, OpenSSLCertificate|string $certificate, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, array|null $headers, int $flags = PKCS7_DETACHED, string|null $untrusted_certificates_filename = null): bool	Firma un mensaje S/MIME
openssl_pkcs7_verify(string $input_filename, int $flags, string|null $signers_certificates_filename = null, array $ca_info = [], string|null $untrusted_certificates_filename = null, string|null $content = null, string|null $output_filename = null): bool|int	Verifica la firma de un mensaje S/MIME firmado
openssl_pkey_derive(OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, int $key_length = ?): string|false	Computes shared secret for public value of remote and local DH or ECDH key
openssl_pkey_export_to_file(OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $key, string $output_filename, string|null $passphrase = null, array|null $options = null): bool	Obtiene una representación de una clave exportable a un archivo
openssl_pkey_export(OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $key, string $output, string|null $passphrase = null, array|null $options = null): bool	Obtiene una representación de una clave exportable a una cadena
openssl_pkey_free(OpenSSLAsymmetricKey $key): void	Libera una clave privada
openssl_pkey_get_details(OpenSSLAsymmetricKey $key): array|false	Devuelve una matriz con los detalles de la clave
openssl_pkey_get_private(OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, string|null $passphrase = null): OpenSSLAsymmetricKey|false	Obtener una clave privada
openssl_pkey_get_public(OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key): OpenSSLAsymmetricKey|false	Extrae la clave pública del certificado y la prepara para usarla
openssl_pkey_new(array|null $options = null): OpenSSLAsymmetricKey|false	Genera una clave privada nueva
openssl_private_decrypt(string $data, string $decrypted_data, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, int $padding = OPENSSL_PKCS1_PADDING): bool	Desencripta información con la clave privada
openssl_private_encrypt(string $data, string $encrypted_data, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, int $padding = OPENSSL_PKCS1_PADDING): bool	Encripta información con la clave privada
openssl_public_decrypt(string $data, string $decrypted_data, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key, int $padding = OPENSSL_PKCS1_PADDING): bool	Desencripta información con la clave pública
openssl_public_encrypt(string $data, string $encrypted_data, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key, int $padding = OPENSSL_PKCS1_PADDING): bool	Encripta información con una clave pública
openssl_random_pseudo_bytes(int $length, bool $strong_result = null): string	Genera una cadena de bytes pseudo-aleatoria
openssl_seal(string $data, string $sealed_data, array $encrypted_keys, array $public_key, string $cipher_algo, string $iv = null): int|false	Sellar (encriptar) información
openssl_sign(string $data, string $signature, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key, string|int $algorithm = OPENSSL_ALGO_SHA1): bool	Genera una firma
openssl_spki_export_challenge(string $spki): string|false	Exporta el desafío asociados con una clave pública y desafío firmados
openssl_spki_export(string $spki): string|false	Exports a valid PEM formatted public key signed public key and challenge
openssl_spki_new(OpenSSLAsymmetricKey $private_key, string $challenge, int $digest_algo = OPENSSL_ALGO_MD5): string|false	Generate a new signed public key and challenge
openssl_spki_verify(string $spki): bool	Verifies a signed public key and challenge
openssl_verify(string $data, string $signature, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key, string|int $algorithm = OPENSSL_ALGO_SHA1): int|false	Verificar una firma
openssl_x509_check_private_key(OpenSSLCertificate|string $certificate, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key): bool	Comprueba si una clave privada se corresponde a un certificado
openssl_x509_checkpurpose(OpenSSLCertificate|string $certificate, int $purpose, array $ca_info = [], string|null $untrusted_certificates_file = null): bool|int	Verifica si un certificado se puede usar para un propósito en particular
openssl_x509_export_to_file(OpenSSLCertificate|string $certificate, string $output_filename, bool $no_text = true): bool	Exporta un certificado a un archivo
openssl_x509_export(OpenSSLCertificate|string $certificate, string $output, bool $no_text = true): bool	Exporta un certificado como una cadena
openssl_x509_fingerprint(OpenSSLCertificate|string $certificate, string $digest_algo = "sha1", bool $binary = false): string|false	Calculates the fingerprint, or digest, of a given X.509 certificate
openssl_x509_free(OpenSSLCertificate $certificate): void	Liberar un recurso de certificado
openssl_x509_parse(OpenSSLCertificate|string $certificate, bool $short_names = true): array|false	Analiza un certificado X509 y devuelve la información como un matriz
openssl_x509_read(OpenSSLCertificate|string $certificate): OpenSSLCertificate|false	Analiza un certificado X.509 y devuelve un identificador de recurso para él
openssl_x509_verify(OpenSSLCertificate|string $certificate, OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $public_key): int	Verifies digital signature of x509 certificate against a public key
OpenSSLAsymmetricKey()	(new) A fully opaque class which replaces OpenSSL key resources as of PHP 8
OpenSSLCertificate()	(new) A fully opaque class which replaces OpenSSL X
OpenSSLCertificateSigningRequest()	(new) A fully opaque class which replaces OpenSSL X
Pdo\Dblib()	(new) A PDO subclass representing a connection using the DBLib PDO driver
Pdo\Firebird::getApiVersion(): int	Get the API version
Pdo\Firebird()	(new) A PDO subclass representing a connection using the Firebird PDO driver
>getWarningCount(): int	(Pdo\Mysql) Returns the number of warnings from the last executed query
Pdo\Mysql()	(new) This driver supports a dedicated SQL query parser for the MySQL dialect
Pdo\Odbc()	(new) A PDO subclass representing a connection using the ODBC PDO driver
>copyFromArray(string $tableName, array $rows, string $separator = "\t", string $nullAs = "\\\\N", string|null $fields = null): bool	(Pdo\Pgsql) Copy data from a PHP array into a table
>copyFromFile(string $tableName, string $filename, string $separator = "\t", string $nullAs = "\\\\N", string|null $fields = null): bool	(Pdo\Pgsql) Copy data from file into table
>copyToArray(string $tableName, string $separator = "\t", string $nullAs = "\\\\N", string|null $fields = null): array|false	(Pdo\Pgsql) Copy data from database table into PHP array
>copyToFile(string $tableName, string $filename, string $separator = "\t", string $nullAs = "\\\\N", string|null $fields = null): bool	(Pdo\Pgsql) Copy data from table into file
>escapeIdentifier(string $input): string	(Pdo\Pgsql) Escapes a string for use as an SQL identifier
>getNotify(int $fetchMode = PDO::FETCH_DEFAULT, int $timeoutMilliseconds = ?): array|false	(Pdo\Pgsql) Get asynchronous notification
>getPid(): int	(Pdo\Pgsql) Get the PID of the backend process handling this connection
>lobCreate(): string|false	(Pdo\Pgsql) Creates a new large object
>lobOpen(string $oid, string $mode = "rb"): resource|false	(Pdo\Pgsql) Opens an existing large object stream
>lobUnlink(string $oid): bool	(Pdo\Pgsql) Deletes the large object
>setNoticeCallback(callable|null $callback): void	(Pdo\Pgsql) Set a callback to handle notice and warning messages generated by the backend
>pgsqlCopyFromArray(string $tableName, array $rows, string $separator = "\t", string $nullAs = "\\\\N", string|null $fields = null): bool	(PDO) Copiar datos de un array de PHP a una tabla
>pgsqlCopyFromFile(string $tableName, string $filename, string $separator = "\t", string $nullAs = "\\\\N", string|null $fields = null): bool	(PDO) Copiar datos de un fichero a una tabla
>pgsqlCopyToArray(string $tableName, string $separator = "\t", string $nullAs = "\\\\N", string|null $fields = null): array|false	(PDO) Copiar datos de una tabla de una base de datos a un array de PHP
>pgsqlCopyToFile(string $tableName, string $filename, string $separator = "\t", string $nullAs = "\\\\N", string|null $fields = null): bool	(PDO) Copiar datos desde una tabla a un fichero
>pgsqlGetNotify(int $fetchMode = PDO::FETCH_DEFAULT, int $timeoutMilliseconds = ?): array|false	(PDO) Obtener una notificación asíncrona
>pgsqlGetPid(): int	(PDO) Obtener el PID del servidor
>pgsqlLOBCreate(): string	(PDO) Crear un nuevo objeto grande
>pgsqlLOBOpen(string $oid, string $mode = "rb"): resource|false	(PDO) Abrir un flujo de un objeto grande existente
>pgsqlLOBUnlink(string $oid): bool	(PDO) Eliminar un objeto grande
Pdo\Pgsql()	(new) This driver supports a dedicated SQL query parser for the PostgreSQL dialect
>createAggregate(string $name, callable $step, callable $finalize, int $numArgs = -1): bool	(Pdo\Sqlite) Registers an aggregating user-defined function for use in SQL statements
>createCollation(string $name, callable $callback): bool	(Pdo\Sqlite) Registers a user-defined function for use as a collating function in SQL statements
>createFunction(string $function_name, callable $callback, int $num_args = -1, int $flags = ?): bool	(Pdo\Sqlite) Registers a user-defined function for use in SQL statements
>loadExtension(string $name): void	(Pdo\Sqlite) Description
>openBlob(string $table, string $column, int $rowid, string|null $dbname = "main", int $flags = Pdo\Sqlite::OPEN_READONLY): resource|false	(Pdo\Sqlite) Description
>sqliteCreateAggregate(string $name, callable $step, callable $finalize, int $numArgs = -1): bool	(PDO) Registra una función acumuladora definida por el usuario para usarla en sentencias SQL
>sqliteCreateCollation(string $name, callable $callback): bool	(PDO) Registra una función definida por el usuario para emplearla como función de cotejo en sentencias SQL
>sqliteCreateFunction(string $function_name, callable $callback, int $num_args = -1, int $flags = ?): bool	(PDO) Registra una función definida por el usuario para utilizarla en sentencias SQL
Pdo\Sqlite()	(new) This driver supports a dedicated SQL query parser for the SQLite dialect
pg_affected_rows(PgSql\Result $result): int	Devuelve el número de registros afectados (filas)
pg_cancel_query(PgSql\Connection $connection): bool	Cancelar una consulta asíncrona
pg_client_encoding(PgSql\Connection|null $connection = null): string	Obtiene la codificación del cliente
pg_close(PgSql\Connection|null $connection = null): true	Cierra una conexión PostgreSQL
pg_connect_poll(PgSql\Connection $connection): int	Verifica el estado de un intento de conexión asíncrono en curso de PostgreSQL
pg_connect(string $connection_string, int $flags = ?): PgSql\Connection|false	Abre una conexión a PostgreSQL
pg_connection_busy(PgSql\Connection $connection): bool	Permite saber si la conexión esta ocupada o no
pg_connection_reset(PgSql\Connection $connection): bool	Restablece conexión (reconectar)
pg_connection_status(PgSql\Connection $connection): int	Obtener estado de la conexión
pg_consume_input(PgSql\Connection $connection): bool	Reads input on the connection
pg_convert(PgSql\Connection $connection, string $table_name, array $values, int $flags = ?): array|false	Conviertir valores de un array asociativo en valores adecuados para sentencias SQL
pg_copy_from(PgSql\Connection $connection, string $table_name, array $rows, string $separator = "\t", string $null_as = "\\\\N"): bool	Insertar registros dentro de una tabla desde un array
pg_copy_to(PgSql\Connection $connection, string $table_name, string $separator = "\t", string $null_as = "\\\\N"): array|false	Copiar una tabla a un array
pg_dbname(PgSql\Connection|null $connection = null): string	Obtiene el nombre de la base de datos
pg_delete(PgSql\Connection $connection, string $table_name, array $conditions, int $flags = PGSQL_DML_EXEC): string|bool	Borra registros
pg_end_copy(PgSql\Connection|null $connection = null): bool	Sincroniza con el servidor PostgreSQL
pg_escape_bytea(PgSql\Connection $connection = ?, string $data): string	Protege una cadena para insertarla en un campo bytea
pg_escape_identifier(PgSql\Connection $connection = ?, string $data): string	Escape a identifier for insertion into a text field
pg_escape_literal(PgSql\Connection $connection = ?, string $data): string	Escape a literal for insertion into a text field
pg_escape_string(PgSql\Connection $connection = ?, string $data): string	Escape a string for query
pg_execute(PgSql\Connection $connection = ?, string $stmtname, array $params): PgSql\Result|false	Envía una solicitud para ejecutar una setencia preparada con parámetros dados, y espera el resultado
pg_fetch_all_columns(PgSql\Result $result, int $field = ?): array	Fetches all rows in a particular result column as an array
pg_fetch_all(PgSql\Result $result, int $mode = PGSQL_ASSOC): array	Obtiene todas las filas de un resultado como un array
pg_fetch_array(PgSql\Result $result, int|null $row = null, int $mode = PGSQL_BOTH): array|false	Fetch a row as an array
pg_fetch_assoc(PgSql\Result $result, int|null $row = null): array|false	Fetch a row as an associative array
pg_fetch_object(PgSql\Result $result, int|null $row = null, string $class = "stdClass", array $constructor_args = []): object|false	Fetch a row as an object
pg_fetch_result(PgSql\Result $result, string|false|null $row, mixed $field): string|false|null	Returns values from a result instance
pg_fetch_result(PgSql\Result $result, mixed $field): string|false|null	Returns values from a result instance
pg_fetch_row(PgSql\Result $result, int|null $row = null, int $mode = PGSQL_NUM): array|false	Get a row as an enumerated array
pg_field_is_null(PgSql\Result $result, string|false|null $row, mixed $field): int	Test if a field is SQL NULL
pg_field_is_null(PgSql\Result $result, mixed $field): int	Test if a field is SQL NULL
pg_field_name(PgSql\Result $result, int $field): string	Returns the name of a field
pg_field_num(PgSql\Result $result, string $field): int	Returns the field number of the named field
pg_field_prtlen(PgSql\Result $result, string|false|null $row, mixed $field_name_or_number): int	Returns the printed length
pg_field_prtlen(PgSql\Result $result, mixed $field_name_or_number): int	Returns the printed length
pg_field_size(PgSql\Result $result, int $field): int	Returns the internal storage size of the named field
pg_field_table(PgSql\Result $result, int $field, bool $oid_only = false): string|int|false	Returns the name or oid of the tables field
pg_field_type_oid(PgSql\Result $result, int $field): string|int	Returns the type ID (OID) for the corresponding field number
pg_field_type(PgSql\Result $result, int $field): string	Devuelve el nombre de tipo para el número de campo correspondiente
pg_flush(PgSql\Connection $connection): int|bool	Flush outbound query data on the connection
pg_free_result(PgSql\Result $result): bool	Free result memory
pg_get_notify(PgSql\Connection $connection, int $mode = PGSQL_ASSOC): array|false	Gets SQL NOTIFY message
pg_get_pid(PgSql\Connection $connection): int	Obtiene la ID del proceso del backend
pg_get_result(PgSql\Connection $connection): PgSql\Result|false	Get asynchronous query result
pg_host(PgSql\Connection|null $connection = null): string	Devuelve el nombre de host asociado a la conexión
pg_insert(PgSql\Connection $connection, string $table_name, array $values, int $flags = PGSQL_DML_EXEC): PgSql\Result|string|bool	Insert array into table
pg_last_error(PgSql\Connection|null $connection = null): string	Obtiene una cadena con el último mensaje de error de la conexión
pg_last_notice(PgSql\Connection $connection, int $mode = PGSQL_NOTICE_LAST): array|string|bool	Devuelve el último aviso del servidor PostgreSQL
pg_last_oid(PgSql\Result $result): string|int|false	Returns the last row's OID
pg_lo_close(PgSql\Lob $lob): bool	Close a large object
pg_lo_create(PgSql\Connection $connection = ?, mixed $object_id = ?): int	Create a large object
pg_lo_create(mixed $object_id): int	Create a large object
pg_lo_export(PgSql\Connection $connection = ?, int $oid, string $pathname): bool	Export a large object to file
pg_lo_import(PgSql\Connection $connection = ?, string $pathname, mixed $object_id = ?): int	Import a large object from file
pg_lo_open(PgSql\Connection $connection, int $oid, string $mode): PgSql\Lob|false	Open a large object
pg_lo_read_all(PgSql\Lob $lob): int	Reads an entire large object and send straight to browser
pg_lo_read(PgSql\Lob $lob, int $length = 8192): string|false	Read a large object
pg_lo_seek(PgSql\Lob $lob, int $offset, int $whence = SEEK_CUR): bool	Seeks position within a large object
pg_lo_tell(PgSql\Lob $lob): int	Returns current seek position a of large object
pg_lo_truncate(PgSql\Lob $lob, int $size): bool	Truncates a large object
pg_lo_unlink(PgSql\Connection $connection, int $oid): bool	Delete a large object
pg_lo_write(PgSql\Lob $lob, string $data, int|null $length = null): int|false	Write to a large object
pg_meta_data(PgSql\Connection $connection, string $table_name, bool $extended = false): array|false	Get meta data for table
pg_num_fields(PgSql\Result $result): int	Returns the number of fields in a result
pg_num_rows(PgSql\Result $result): int	Returns the number of rows in a result
pg_options(PgSql\Connection|null $connection = null): string	Obtener las opciones asociadas con la conexión
pg_parameter_status(PgSql\Connection $connection = ?, string $param_name): string	Looks up a current parameter setting of the server
pg_pconnect(string $connection_string, int $flags = ?): PgSql\Connection|false	Abre una conexión persistente a PostgreSQL
pg_ping(PgSql\Connection|null $connection = null): bool	Ping a conexión de base de datos
pg_port(PgSql\Connection|null $connection = null): string	Devuelve el número de puerto asociado con la conexión
pg_prepare(PgSql\Connection $connection = ?, string $stmtname, string $query): PgSql\Result|false	Envía una solicitud para crear una sentencia preparada con los parámetros dados, y espera que se complete
pg_put_line(PgSql\Connection $connection = ?, string $data): bool	Send a NULL-terminated string to PostgreSQL backend
pg_query_params(PgSql\Connection $connection = ?, string $query, array $params): PgSql\Result|false	Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text
pg_query(PgSql\Connection $connection = ?, string $query): PgSql\Result|false	Ejecutar una consulta
pg_result_error_field(PgSql\Result $result, int $field_code): string|false|null	Returns an individual field of an error report
pg_result_error(PgSql\Result $result): string|false	Get error message associated with result
pg_result_memory_size(PgSql\Result $result): int	Returns the amount of memory allocated for a query result
pg_result_seek(PgSql\Result $result, int $row): bool	Set internal row offset in result instance
pg_result_status(PgSql\Result $result, int $mode = PGSQL_STATUS_LONG): string|int	Get status of query result
pg_select(PgSql\Connection $connection, string $table_name, array $conditions = [], int $flags = PGSQL_DML_EXEC, int $mode = PGSQL_ASSOC): array|string|false	Select records
pg_send_execute(PgSql\Connection $connection, string $statement_name, array $params): int|bool	Sends a request to execute a prepared statement with given parameters, without waiting for the result(s)
pg_send_prepare(PgSql\Connection $connection, string $statement_name, string $query): int|bool	Envía una solicitud para crear una instrucción preparada con los parámetros dados, sin esperar la finalización
pg_send_query_params(PgSql\Connection $connection, string $query, array $params): int|bool	Submits a command and separate parameters to the server without waiting for the result(s)
pg_send_query(PgSql\Connection $connection, string $query): int|bool	Sends asynchronous query
pg_set_chunked_rows_size(PgSql\Connection $connection, int $size): bool	Set the query results to be retrieved in chunk mode
pg_set_client_encoding(PgSql\Connection $connection = ?, string $encoding): int	Set the client encoding
pg_set_error_context_visibility(PgSql\Connection $connection, int $visibility): int	Determines the visibility of the context's error messages returned by pg_last_error and pg_result_error
pg_set_error_verbosity(PgSql\Connection $connection = ?, int $verbosity): int	Determines the verbosity of messages returned by pg_last_error and pg_result_error
pg_socket(PgSql\Connection $connection): resource|false	Obtener un identificador de sólo lectura en el socket subyacente a una conexión de PostgreSQL
pg_trace(string $filename, string $mode = "w", PgSql\Connection|null $connection = null, int $trace_mode = ?): bool	Enable tracing a PostgreSQL connection
pg_transaction_status(PgSql\Connection $connection): int	Devuelve el estado actual de la transaccion del servidor
pg_tty(PgSql\Connection|null $connection = null): string	Devolver el nombre TTY asociado con la conexión
pg_unescape_bytea(string $string): string	Unescape binary for bytea type
pg_untrace(PgSql\Connection|null $connection = null): true	Desactivar el rastreo de una conexión de PostgreSQL
pg_update(PgSql\Connection $connection, string $table_name, array $values, array $conditions, int $flags = PGSQL_DML_EXEC): string|bool	Actualizar tabla
pg_version(PgSql\Connection|null $connection = null): array	Devuelve un array con el cliente, protocolo y versión del servidor (si está disponible)
PgSql\Connection()	(new) A fully opaque class which replaces a pgsql link resource as of PHP 8
PgSql\Lob()	(new) A fully opaque class which replaces a pgsql large object resource as of PHP 8
PgSql\Result()	(new) A fully opaque class which replaces a pgsql result resource as of PHP 8
readline_add_history(string $prompt): true	Agrega una línea a la historia
readline_callback_handler_install(string $prompt, callable $callback): true	Inicializa la interfaz de llamada de readline y la terminal, imprime el mensaje y retorna inmediatamente
readline_callback_handler_remove(): bool	Elimina una interfaz de llamada anteriormente agregada y retaura la configuración de terminal
readline_callback_read_char(): void	Lee un carácter e informa a la interfaz de llamada de readline cuando una línea es recibida
readline_clear_history(): true	Limpia el historial
readline_completion_function(callable $callback): bool	Registra una función de autocompletado
readline_info(string|null $var_name = null, int|string|bool|null $value = null): mixed	Obtiene/Modifica variables internas a readline
readline_list_history(): array	Obtener el historial
readline_on_new_line(): void	Informar a readline que el cursor se ha movido a una nueva línea
readline_read_history(string|null $filename = null): bool	Lee el historial
readline_redisplay(): void	Redibuja la vista
readline_write_history(string|null $filename = null): bool	Escribe el historial
readline(string|null $prompt = null): string|false	Lee una línea
simplexml_import_dom(object $node, string|null $class_name = SimpleXMLElement::class): SimpleXMLElement|null	Obtiene un objeto SimpleXMLElement de un nodo DOM
simplexml_load_file(string $filename, string|null $class_name = SimpleXMLElement::class, int $options = ?, string $namespace_or_prefix = "", bool $is_prefix = false): SimpleXMLElement|false	Interpreta un fichero XML en un objeto
simplexml_load_string(string $data, string|null $class_name = SimpleXMLElement::class, int $options = ?, string $namespace_or_prefix = "", bool $is_prefix = false): SimpleXMLElement|false	Interpreta un string de XML en un objeto
>addAttribute(string $qualifiedName, string $value, string|null $namespace = null): void	(SimpleXMLElement) Añade un atributo al elemento SimpleXML
>addChild(string $qualifiedName, string|null $value = null, string|null $namespace = null): SimpleXMLElement|null	(SimpleXMLElement) Añade un elemento hijo al nodo XML
>asXML(string|null $filename = null): string|bool	(SimpleXMLElement) Retorna un string XML correcto basado en un elemento SimpleXML
>attributes(string|null $namespaceOrPrefix = null, bool $isPrefix = false): SimpleXMLElement|null	(SimpleXMLElement) Identifica el atributo de un elemento
>children(string|null $namespaceOrPrefix = null, bool $isPrefix = false): SimpleXMLElement|null	(SimpleXMLElement) Encuentra los hijos del nodo dado
SimpleXMLElement(string $data, int $options = ?, bool $dataIsURL = false, string $namespaceOrPrefix = "", bool $isPrefix = false)	(new) Crea un nuevo objeto SimpleXMLElement
>count(): int	(SimpleXMLElement) Cuenta los hijos de un elemento
>current(): SimpleXMLElement	(SimpleXMLElement) Returns the current element
>getDocNamespaces(bool $recursive = false, bool $fromRoot = true): array|false	(SimpleXMLElement) Devuelve los espacios de nombre declarados en el documento
>getName(): string	(SimpleXMLElement) Retorna el nombre del elemento XML
>getNamespaces(bool $recursive = false): array	(SimpleXMLElement) Devuelve los espacios de nombre usados en el documento
>getChildren(): SimpleXMLElement|null	(SimpleXMLElement) Returns the sub-elements of the current element
>hasChildren(): bool	(SimpleXMLElement) Checks whether the current element has sub elements
>key(): string	(SimpleXMLElement) Return current key
>next(): void	(SimpleXMLElement) Move to next element
>registerXPathNamespace(string $prefix, string $namespace): bool	(SimpleXMLElement) Crea un contexto prefijo/ns para la siguiente petición XPath
>rewind(): void	(SimpleXMLElement) Rewind to the first element
>saveXML()	(SimpleXMLElement) Alias of SimpleXMLElement::asXML
>__toString(): string	(SimpleXMLElement) Returns the string content
>valid(): bool	(SimpleXMLElement) Check whether the current element is valid
>xpath(string $expression): array|null|false	(SimpleXMLElement) Ejecuta una petición XPath sobre los datos XML
SimpleXMLIterator()	(new) El clase SimpleXMLIterator proporciona una iteración recursiva sobre todos los nodos de un objeto SimpleXMLElement
snmp_get_quick_print(): bool	Fetches the current value of the NET-SNMP library's quick_print setting
snmp_get_valueretrieval(): int	Return the method how the SNMP values will be returned
snmp_read_mib(string $filename): bool	Reads and parses a MIB file into the active MIB tree
snmp_set_enum_print(bool $enable): true	Return all values that are enums with their enum value instead of the raw integer
snmp_set_oid_numeric_print()	Alias of snmp_set_oid_output_format
snmp_set_oid_output_format(int $format): true	Set the OID output format
snmp_set_quick_print(bool $enable): true	Set the value of $enable within the NET-SNMP library
snmp_set_valueretrieval(int $method): true	Specify the method how the SNMP values will be returned
snmp2_get(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): mixed	Fetch an SNMP object
snmp2_getnext(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): mixed	Fetch the SNMP object which follows the given object id
snmp2_real_walk(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): array|false	Return all objects including their respective object ID within the specified one
snmp2_set(string $hostname, string $community, array|string $object_id, array|string $type, array|string $value, int $timeout = -1, int $retries = -1): bool	Set the value of an SNMP object
snmp2_walk(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): array|false	Fetch all the SNMP objects from an agent
snmp3_get(string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase, array|string $object_id, int $timeout = -1, int $retries = -1): mixed	Fetch an SNMP object
snmp3_getnext(string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase, array|string $object_id, int $timeout = -1, int $retries = -1): mixed	Fetch the SNMP object which follows the given object id
snmp3_real_walk(string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase, array|string $object_id, int $timeout = -1, int $retries = -1): array|false	Return all objects including their respective object ID within the specified one
snmp3_set(string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase, array|string $object_id, array|string $type, array|string $value, int $timeout = -1, int $retries = -1): bool	Set the value of an SNMP object
snmp3_walk(string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase, array|string $object_id, int $timeout = -1, int $retries = -1): array|false	Fetch all the SNMP objects from an agent
snmpget(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): mixed	Fetch an SNMP object
snmpgetnext(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): mixed	Fetch the SNMP object which follows the given object id
snmprealwalk(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): array|false	Return all objects including their respective object ID within the specified one
snmpset(string $hostname, string $community, array|string $object_id, array|string $type, array|string $value, int $timeout = -1, int $retries = -1): bool	Set the value of an SNMP object
snmpwalk(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): array|false	Fetch all the SNMP objects from an agent
snmpwalkoid(string $hostname, string $community, array|string $object_id, int $timeout = -1, int $retries = -1): array|false	Query for a tree of information about a network entity
>close(): bool	(SNMP) Cerrar sesión SNMP
SNMP(int $version, string $hostname, string $community, int $timeout = -1, int $retries = -1)	(new) Creates SNMP instance representing session to remote SNMP agent
>get(array|string $objectId, bool $preserveKeys = false): mixed	(SNMP) Fetch an SNMP object
>getErrno(): int	(SNMP) Get last error code
>getError(): string	(SNMP) Obtiene el último mensaje de error
>getnext(array|string $objectId): mixed	(SNMP) Fetch an SNMP object which follows the given object id
>set(array|string $objectId, array|string $type, array|string $value): bool	(SNMP) Set the value of an SNMP object
>setSecurity(string $securityLevel, string $authProtocol = "", string $authPassphrase = "", string $privacyProtocol = "", string $privacyPassphrase = "", string $contextName = "", string $contextEngineId = ""): bool	(SNMP) Configures security-related SNMPv3 session parameters
>walk(array|string $objectId, bool $suffixAsKey = false, int $maxRepetitions = -1, int $nonRepeaters = -1): array|false	(SNMP) Fetch SNMP object subtree
SNMPException()	(new) Represents an error raised by SNMP
is_soap_fault(mixed $object): bool	Comprueba si una llamada SOAP ha fallado
use_soap_error_handler(bool $enable = true): bool	Establecer si se desea utilizar el manejador de errores de SOAP
>__call(string $name, array $args): mixed	(SoapClient) Llama a una función de SOAP (obsoleto)
SoapClient(string|null $wsdl, array $options = [])	(new) Constructor de SoapClient
>__doRequest(string $request, string $location, string $action, int $version, bool $oneWay = false): string|null	(SoapClient) Realiza una petición SOAP
>__getCookies(): array	(SoapClient) Get list of cookies
>__getFunctions(): array|null	(SoapClient) Devuelve una lista de todas las funciones SOAP disponibles
>__getLastRequest(): string|null	(SoapClient) Devuelve la última petición SOAP
>__getLastRequestHeaders(): string|null	(SoapClient) Devuelve los encabezados SOAP de la última petición
>__getLastResponse(): string|null	(SoapClient) Devuelve la última respuesta SOAP
>__getLastResponseHeaders(): string|null	(SoapClient) Devuelve los encabezados SOAP de la última respuesta
>__getTypes(): array|null	(SoapClient) Devuelve una lista de los tipos SOAP
>__setCookie(string $name, string|null $value = null): void	(SoapClient) El propósito de __setCookie
>__setLocation(string|null $location = null): string|null	(SoapClient) Define la localización del servicio Web a utilizar
>__setSoapHeaders(SoapHeader|array|null $headers = null): bool	(SoapClient) Define los encabezados SOAP para las subsiguentes llamadas
>__soapCall(string $name, array $args, array|null $options = null, SoapHeader|array|null $inputHeaders = null, array $outputHeaders = null): mixed	(SoapClient) Llama a una función SOAP
SoapFault(array|string|null $code, string $string, string|null $actor = null, mixed $details = null, string|null $name = null, mixed $headerFault = null)	(new) Constructor de SoapFault
>__toString(): string	(SoapFault) Obtiene una representación en formato cadena de SoapFault
SoapHeader(string $namespace, string $name, mixed $data = ?, bool $mustunderstand = ?, string $actor = ?)	(new) Constructor de SoapHeader
SoapParam(mixed $data, string $name)	(new) Constructor de SoapParam
>addFunction(array|string|int $functions): void	(SoapServer) Añade una o más funciones al controlador de peticiones SOAP
>addSoapHeader(SoapHeader $header): void	(SoapServer) Añade un encabezado SOAP a la respuesta
SoapServer(string|null $wsdl, array $options = [])	(new) Constructor de SoapServer
>fault(string $code, string $string, string $actor = "", mixed $details = null, string $name = ""): void	(SoapServer) SoapServer indica que ocurrió un fallo
>getFunctions(): array	(SoapServer) Devuelve una lista de las funciones definidas
>__getLastResponse(): string|null	(SoapServer) Returns last SOAP response
>handle(string|null $request = null): void	(SoapServer) Controla la petición SOAP
>setClass(string $class, mixed ...$args): void	(SoapServer) Define la clase que controla las peticiones SOAP
>setObject(object $object): void	(SoapServer) Define el objecto que será usado para controlar las peticiones SOAP
>setPersistence(int $mode): void	(SoapServer) Establece el modo de persistencia de SoapServer
SoapVar(mixed $data, int|null $encoding, string|null $typeName = null, string|null $typeNamespace = null, string|null $nodeName = null, string|null $nodeNamespace = null)	(new) Constructor de SoapVar
sodium_add(string $string1, string $string2): void	Add large numbers
sodium_base642bin(string $string, int $id, string $ignore = ""): string	Decodes a base64-encoded string into raw binary.
sodium_bin2base64(string $string, int $id): string	Encodes a raw binary string with base64.
sodium_bin2hex(string $string): string	Encode to hexadecimal
sodium_compare(string $string1, string $string2): int	Compare large numbers
sodium_crypto_aead_aegis128l_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false	Verify then decrypt a message with AEGIS-128L
sodium_crypto_aead_aegis128l_encrypt(string $message, string $additional_data, string $nonce, string $key): string	Encrypt then authenticate a message with AEGIS-128L
sodium_crypto_aead_aegis128l_keygen(): string	Generate a random AEGIS-128L key
sodium_crypto_aead_aegis256_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false	Verify then decrypt a message with AEGIS-256
sodium_crypto_aead_aegis256_encrypt(string $message, string $additional_data, string $nonce, string $key): string	Encrypt then authenticate a message with AEGIS-256
sodium_crypto_aead_aegis256_keygen(): string	Generate a random AEGIS-256 key
sodium_crypto_aead_aes256gcm_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false	Verify then decrypt a message with AES-256-GCM
sodium_crypto_aead_aes256gcm_encrypt(string $message, string $additional_data, string $nonce, string $key): string	Encrypt then authenticate with AES-256-GCM
sodium_crypto_aead_aes256gcm_is_available(): bool	Check if hardware supports AES256-GCM
sodium_crypto_aead_aes256gcm_keygen(): string	Generate a random AES-256-GCM key
sodium_crypto_aead_chacha20poly1305_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false	Verify then decrypt with ChaCha20-Poly1305
sodium_crypto_aead_chacha20poly1305_encrypt(string $message, string $additional_data, string $nonce, string $key): string	Encrypt then authenticate with ChaCha20-Poly1305
sodium_crypto_aead_chacha20poly1305_ietf_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false	Verify that the ciphertext includes a valid tag
sodium_crypto_aead_chacha20poly1305_ietf_encrypt(string $message, string $additional_data, string $nonce, string $key): string	Encrypt a message
sodium_crypto_aead_chacha20poly1305_ietf_keygen(): string	Generate a random ChaCha20-Poly1305 (IETF) key.
sodium_crypto_aead_chacha20poly1305_keygen(): string	Generate a random ChaCha20-Poly1305 key.
sodium_crypto_aead_xchacha20poly1305_ietf_decrypt(string $ciphertext, string $additional_data, string $nonce, string $key): string|false	(Preferred) Verify then decrypt with XChaCha20-Poly1305
sodium_crypto_aead_xchacha20poly1305_ietf_encrypt(string $message, string $additional_data, string $nonce, string $key): string	(Preferred) Encrypt then authenticate with XChaCha20-Poly1305
sodium_crypto_aead_xchacha20poly1305_ietf_keygen(): string	Generate a random XChaCha20-Poly1305 key.
sodium_crypto_auth_keygen(): string	Generate a random key for sodium_crypto_auth
sodium_crypto_auth_verify(string $mac, string $message, string $key): bool	Verifies that the tag is valid for the message
sodium_crypto_auth(string $message, string $key): string	Compute a tag for the message
sodium_crypto_box_keypair_from_secretkey_and_publickey(string $secret_key, string $public_key): string	Create a unified keypair string from a secret key and public key
sodium_crypto_box_keypair(): string	Randomly generate a secret key and a corresponding public key
sodium_crypto_box_open(string $ciphertext, string $nonce, string $key_pair): string|false	Authenticated public-key decryption
sodium_crypto_box_publickey_from_secretkey(string $secret_key): string	Calculate the public key from a secret key
sodium_crypto_box_publickey(string $key_pair): string	Extract the public key from a crypto_box keypair
sodium_crypto_box_seal_open(string $ciphertext, string $key_pair): string|false	Anonymous public-key decryption
sodium_crypto_box_seal(string $message, string $public_key): string	Anonymous public-key encryption
sodium_crypto_box_secretkey(string $key_pair): string	Extracts the secret key from a crypto_box keypair
sodium_crypto_box_seed_keypair(string $seed): string	Deterministically derive the key pair from a single key
sodium_crypto_box(string $message, string $nonce, string $key_pair): string	Authenticated public-key encryption
sodium_crypto_core_ristretto255_add(string $p, string $q): string	Adds an element
sodium_crypto_core_ristretto255_from_hash(string $s): string	Maps a vector
sodium_crypto_core_ristretto255_is_valid_point(string $s): bool	Determines if a point on the ristretto255 curve
sodium_crypto_core_ristretto255_random(): string	Generates a random key
sodium_crypto_core_ristretto255_scalar_add(string $x, string $y): string	Adds a scalar value
sodium_crypto_core_ristretto255_scalar_complement(string $s): string	The sodium_crypto_core_ristretto255_scalar_complement purpose
sodium_crypto_core_ristretto255_scalar_invert(string $s): string	Inverts a scalar value
sodium_crypto_core_ristretto255_scalar_mul(string $x, string $y): string	Multiplies a scalar value
sodium_crypto_core_ristretto255_scalar_negate(string $s): string	Negates a scalar value
sodium_crypto_core_ristretto255_scalar_random(): string	Generates a random key
sodium_crypto_core_ristretto255_scalar_reduce(string $s): string	Reduces a scalar value
sodium_crypto_core_ristretto255_scalar_sub(string $x, string $y): string	Subtracts a scalar value
sodium_crypto_core_ristretto255_sub(string $p, string $q): string	Subtracts an element
sodium_crypto_generichash_final(string $state, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES): string	Complete the hash
sodium_crypto_generichash_init(string $key = "", int $length = SODIUM_CRYPTO_GENERICHASH_BYTES): string	Initialize a hash for streaming
sodium_crypto_generichash_keygen(): string	Generate a random generichash key
sodium_crypto_generichash_update(string $state, string $message): true	Add message to a hash
sodium_crypto_generichash(string $message, string $key = "", int $length = SODIUM_CRYPTO_GENERICHASH_BYTES): string	Get a hash of the message
sodium_crypto_kdf_derive_from_key(int $subkey_length, int $subkey_id, string $context, string $key): string	Derive a subkey
sodium_crypto_kdf_keygen(): string	Generate a random root key for the KDF interface
sodium_crypto_kx_client_session_keys(string $client_key_pair, string $server_key): array	Calculate the client-side session keys.
sodium_crypto_kx_keypair(): string	Creates a new sodium keypair
sodium_crypto_kx_publickey(string $key_pair): string	Extract the public key from a crypto_kx keypair
sodium_crypto_kx_secretkey(string $key_pair): string	Extract the secret key from a crypto_kx keypair.
sodium_crypto_kx_seed_keypair(string $seed): string	Description
sodium_crypto_kx_server_session_keys(string $server_key_pair, string $client_key): array	Calculate the server-side session keys.
sodium_crypto_pwhash_scryptsalsa208sha256_str_verify(string $hash, string $password): bool	Verify that the password is a valid password verification string
sodium_crypto_pwhash_scryptsalsa208sha256_str(string $password, int $opslimit, int $memlimit): string	Get an ASCII encoded hash
sodium_crypto_pwhash_scryptsalsa208sha256(int $length, string $password, string $salt, int $opslimit, int $memlimit): string	Derives a key from a password, using scrypt
sodium_crypto_pwhash_str_needs_rehash(string $password, int $opslimit, int $memlimit): bool	Determine whether or not to rehash a password
sodium_crypto_pwhash_str_verify(string $hash, string $password): bool	Verifies that a password matches a hash
sodium_crypto_pwhash_str(string $password, int $opslimit, int $memlimit): string	Get an ASCII-encoded hash
sodium_crypto_pwhash(int $length, string $password, string $salt, int $opslimit, int $memlimit, int $algo = SODIUM_CRYPTO_PWHASH_ALG_DEFAULT): string	Derive a key from a password, using Argon2
sodium_crypto_scalarmult_base()	Alias of sodium_crypto_box_publickey_from_secretkey
sodium_crypto_scalarmult_ristretto255_base(string $n): string	Calculates the public key from a secret key
sodium_crypto_scalarmult_ristretto255(string $n, string $p): string	Computes a shared secret
sodium_crypto_scalarmult(string $n, string $p): string	Compute a shared secret given a user's secret key and another user's public key
sodium_crypto_secretbox_keygen(): string	Generate random key for sodium_crypto_secretbox
sodium_crypto_secretbox_open(string $ciphertext, string $nonce, string $key): string|false	Authenticated shared-key decryption
sodium_crypto_secretbox(string $message, string $nonce, string $key): string	Authenticated shared-key encryption
sodium_crypto_secretstream_xchacha20poly1305_init_pull(string $header, string $key): string	Initialize a secretstream context for decryption
sodium_crypto_secretstream_xchacha20poly1305_init_push(string $key): array	Initialize a secretstream context for encryption
sodium_crypto_secretstream_xchacha20poly1305_keygen(): string	Generate a random secretstream key.
sodium_crypto_secretstream_xchacha20poly1305_pull(string $state, string $ciphertext, string $additional_data = ""): array|false	Decrypt a chunk of data from an encrypted stream
sodium_crypto_secretstream_xchacha20poly1305_push(string $state, string $message, string $additional_data = "", int $tag = SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE): string	Encrypt a chunk of data so that it can safely be decrypted in a streaming API
sodium_crypto_secretstream_xchacha20poly1305_rekey(string $state): void	Explicitly rotate the key in the secretstream state
sodium_crypto_shorthash_keygen(): string	Get random bytes for key
sodium_crypto_shorthash(string $message, string $key): string	Compute a short hash of a message and key
sodium_crypto_sign_detached(string $message, string $secret_key): string	Sign the message
sodium_crypto_sign_ed25519_pk_to_curve25519(string $public_key): string	Convert an Ed25519 public key to a Curve25519 public key
sodium_crypto_sign_ed25519_sk_to_curve25519(string $secret_key): string	Convert an Ed25519 secret key to a Curve25519 secret key
sodium_crypto_sign_keypair_from_secretkey_and_publickey(string $secret_key, string $public_key): string	Join a secret key and public key together
sodium_crypto_sign_keypair(): string	Randomly generate a secret key and a corresponding public key
sodium_crypto_sign_open(string $signed_message, string $public_key): string|false	Check that the signed message has a valid signature
sodium_crypto_sign_publickey_from_secretkey(string $secret_key): string	Extract the Ed25519 public key from the secret key
sodium_crypto_sign_publickey(string $key_pair): string	Extract the Ed25519 public key from a keypair
sodium_crypto_sign_secretkey(string $key_pair): string	Extract the Ed25519 secret key from a keypair
sodium_crypto_sign_seed_keypair(string $seed): string	Deterministically derive the key pair from a single key
sodium_crypto_sign_verify_detached(string $signature, string $message, string $public_key): bool	Verify signature for the message
sodium_crypto_sign(string $message, string $secret_key): string	Sign a message
sodium_crypto_stream_keygen(): string	Generate a random sodium_crypto_stream key.
sodium_crypto_stream_xchacha20_keygen(): string	Returns a secure random key
sodium_crypto_stream_xchacha20_xor_ic(string $message, string $nonce, int $counter, string $key): string	Encrypts a message using a nonce and a secret key (no authentication)
sodium_crypto_stream_xchacha20_xor(string $message, string $nonce, string $key): string	Encrypts a message using a nonce and a secret key (no authentication)
sodium_crypto_stream_xchacha20(int $length, string $nonce, string $key): string	Expands the key and nonce into a keystream of pseudorandom bytes
sodium_crypto_stream_xor(string $message, string $nonce, string $key): string	Encrypt a message without authentication
sodium_crypto_stream(int $length, string $nonce, string $key): string	Generate a deterministic sequence of bytes from a seed
sodium_hex2bin(string $string, string $ignore = ""): string	Decodes a hexadecimally encoded binary string
sodium_increment(string $string): void	Increment large number
sodium_memcmp(string $string1, string $string2): int	Test for equality in constant-time
sodium_memzero(string $string): void	Overwrite a string with NUL characters
sodium_pad(string $string, int $block_size): string	Add padding data
sodium_unpad(string $string, int $block_size): string	Remove padding data
SodiumException()	(new) Exceptions thrown by the sodium functions
ob_tidyhandler(string $input, int $mode = ?): string	Función callback de ob_start para reparar el buffer
tidy_access_count(tidy $tidy): int	Devuelve el número de alertas de accesibilidad Tidy encontradas en un documento dado
tidy_config_count(tidy $tidy): int	Devuelve el número de errores de configuración Tidy encontrados en un documento dado
tidy_error_count(tidy $tidy): int	Devuelve el número de errores Tidy encontrados en un documento dado
tidy_get_output(tidy $tidy): string	Devuelve una cadena que contiene las etiquetas analizadas por Tidy
tidy_warning_count(tidy $tidy): int	Devuelve el número de alertas encontradas en un documendo dado
>body(): tidyNode|null	(tidy) Devuelve un objeto tidyNode empezando con la etiqueta ltbodygt
tidy_get_body(tidy $tidy): tidyNode|null	Devuelve un objeto tidyNode empezando con la etiqueta ltbodygt
>cleanRepair(): bool	(tidy) Ejecuta una operación de limpieza y reparación de las etiquetas HTML
tidy_clean_repair(tidy $tidy): bool	Ejecuta una operación de limpieza y reparación de las etiquetas HTML
tidy(string|null $filename = null, array|string|null $config = null, string|null $encoding = null, bool $useIncludePath = false)	(new) Construye un nuevo objeto tidy
>diagnose(): bool	(tidy) Ejecuta un diagnóstico sobre documento analizado y reparado
tidy_diagnose(tidy $tidy): bool	Ejecuta un diagnóstico sobre documento analizado y reparado
tidy_get_error_buffer(tidy $tidy): string|false	Devuelve advertencias y errores que ocurrieron al analizar el documento especificado
>getConfig(): array	(tidy) Obtiene la configuración actual de Tidy
tidy_get_config(tidy $tidy): array	Obtiene la configuración actual de Tidy
>getHtmlVer(): int	(tidy) Obtiene la versión detectada de HTML en un documento especificado
tidy_get_html_ver(tidy $tidy): int	Obtiene la versión detectada de HTML en un documento especificado
>getOpt(string $option): string|int|bool	(tidy) Devuelve el valor de la opción de configuración especificada para el documento tidy
tidy_getopt(tidy $tidy, string $option): string|int|bool	Devuelve el valor de la opción de configuración especificada para el documento tidy
>getOptDoc(string $option): string|false	(tidy) Devuelve la documentación correspondiente a un nombre de opción dado
tidy_get_opt_doc(tidy $tidy, string $option): string|false	Devuelve la documentación correspondiente a un nombre de opción dado
>getRelease(): string	(tidy) Obtiene la fecha de lanzamiento (versión) de la librería Tidy
tidy_get_release(): string	Obtiene la fecha de lanzamiento (versión) de la librería Tidy
>getStatus(): int	(tidy) Obtiene el status de un documento especificado
tidy_get_status(tidy $tidy): int	Obtiene el status de un documento especificado
>head(): tidyNode|null	(tidy) Devuelve un objeto tidyNode empezando con la etiqueta ltheadgt
tidy_get_head(tidy $tidy): tidyNode|null	Devuelve un objeto tidyNode empezando con la etiqueta ltheadgt
>html(): tidyNode|null	(tidy) Devuelve un objeto tidyNode empezando con la etiqueta lthtmlgt
tidy_get_html(tidy $tidy): tidyNode|null	Devuelve un objeto tidyNode empezando con la etiqueta lthtmlgt
>isXhtml(): bool	(tidy) Indica si el documento es XHTML
tidy_is_xhtml(tidy $tidy): bool	Indica si el documento es XHTML
>isXml(): bool	(tidy) Indica si el documento es XML (no HTML/XHTML)
tidy_is_xml(tidy $tidy): bool	Indica si el documento es XML (no HTML/XHTML)
>parseFile(string $filename, array|string|null $config = null, string|null $encoding = null, bool $useIncludePath = false): bool	(tidy) Analiza las etiquetas de un fichero o de una URI
tidy_parse_file(string $filename, array|string|null $config = null, string|null $encoding = null, bool $useIncludePath = false): tidy|false	Analiza las etiquetas de un fichero o de una URI
>parseString(string $string, array|string|null $config = null, string|null $encoding = null): bool	(tidy) Analiza un documento HTML contenido en una string
tidy_parse_string(string $string, array|string|null $config = null, string|null $encoding = null): tidy|false	Analiza un documento HTML contenido en una string
tidy::repairFile(string $filename, array|string|null $config = null, string|null $encoding = null, bool $useIncludePath = false): string|false	Repara un archivo y lo devuelve como una cadena
tidy_repair_file(string $filename, array|string|null $config = null, string|null $encoding = null, bool $useIncludePath = false): string|false	Repara un archivo y lo devuelve como una cadena
tidy::repairString(string $string, array|string|null $config = null, string|null $encoding = null): string|false	Repara una cadena HTML usando un archivo de configuración opcional
tidy_repair_string(string $string, array|string|null $config = null, string|null $encoding = null): string|false	Repara una cadena HTML usando un archivo de configuración opcional
>root(): tidyNode|null	(tidy) Devuelve un objeto tidyNode que representa la raíz del árbol analizado por tidy
tidy_get_root(tidy $tidy): tidyNode|null	Devuelve un objeto tidyNode que representa la raíz del árbol analizado por tidy
tidyNode()	(new) Constructor privado para prohibir la instanciación directa
>getNextSibling(): tidyNode|null	(tidyNode) Devuelve el nodo hermano siguiente del nodo actual
>getParent(): tidyNode|null	(tidyNode) Devuelve el nodo padre del nodo actual
>getPreviousSibling(): tidyNode|null	(tidyNode) Devuelve el nodo hermano anterior del nodo actual
>hasChildren(): bool	(tidyNode) Indica si un nodo tiene hijos
>hasSiblings(): bool	(tidyNode) Indica si un nodo tiene hermanos
>isAsp(): bool	(tidyNode) Comprueba si el nodo es ASP
>isComment(): bool	(tidyNode) Comprueba el nodo actual es un comentario
>isHtml(): bool	(tidyNode) Indica si el nodo es un nodo de elemento
>isJste(): bool	(tidyNode) Comprueba si el nodo es JSTE
>isPhp(): bool	(tidyNode) Comprueba si el nodo es PHP
>isText(): bool	(tidyNode) Comprueba si un nodo representa un texto (no HTML)
odbc_autocommit(Odbc\Connection $odbc, bool|null $enable = null): int|bool	Activa el comportamiento automático de envío
odbc_binmode(Odbc\Result $statement, int $mode): true	Manejo de información de columna binaria
odbc_close_all(): void	Cerrar todas las conexiones ODBC
odbc_close(Odbc\Connection $odbc): void	Cerrar una conexión ODBC
odbc_columnprivileges(Odbc\Connection $odbc, string|null $catalog, string $schema, string $table, string $column): Odbc\Result|false	Lista las columnas y los privilegios asociados para la tabla dada
odbc_columns(Odbc\Connection $odbc, string|null $catalog = null, string|null $schema = null, string|null $table = null, string|null $column = null): Odbc\Result|false	Lista los nombres de columnas de la tabla especificada
odbc_commit(Odbc\Connection $odbc): bool	Envía una transacción ODBC
odbc_connect(string $dsn, string|null $user = null, string|null $password = null, int $cursor_option = SQL_CUR_USE_DRIVER): Odbc\Connection|false	Conectar a una fuente de datos
odbc_connection_string_is_quoted(string $str): bool	Determina si un string de conexión ODBC está entre comillas
odbc_connection_string_quote(string $str): string	Pone entre comillas un valor de string de conexión ODBC
odbc_connection_string_should_quote(string $str): bool	Determina si un valor de string de conexión ODBC debe ser puesto entre comillas
odbc_cursor(Odbc\Result $statement): string|false	Obtener el nombre del cursor
odbc_data_source(Odbc\Connection $odbc, int $fetch_type): array|null|false	Devuelve información sobre una conexión actual
odbc_do()	Alias of odbc_exec
odbc_error(Odbc\Connection|null $odbc = null): string	Obtener el último código de error
odbc_errormsg(Odbc\Connection|null $odbc = null): string	Obtener el último mensaje de error
odbc_exec(Odbc\Connection $odbc, string $query): Odbc\Result|false	Preparar y ejecutar una sentencia SQL
odbc_execute(Odbc\Result $statement, array $params = []): bool	Ejecutar una declaración preparada
odbc_fetch_array(Odbc\Result $statement, int|null $row = null): array|false	Obtener una fila de resultados como una matriz asociativa
odbc_fetch_into(Odbc\Result $statement, array $array, int|null $row = null): int|false	Traer una fila de resultados en una matriz
odbc_fetch_object(Odbc\Result $statement, int|null $row = null): stdClass|false	Obtener una fila de resultados como un objeto
odbc_fetch_row(Odbc\Result $statement, int|null $row = null): bool	Traer una fila
odbc_field_len(Odbc\Result $statement, int $field): int|false	Obtener la longitud (precisión) de un campo
odbc_field_name(Odbc\Result $statement, int $field): string|false	Obtener el nombre de una columna
odbc_field_num(Odbc\Result $statement, string $field): int|false	Devolver el número de columna
odbc_field_precision()	Alias of odbc_field_len
odbc_field_scale(Odbc\Result $statement, int $field): int|false	Obtener la escala de un campo
odbc_field_type(Odbc\Result $statement, int $field): string|false	Tipo de datos de un campo
odbc_foreignkeys(Odbc\Connection $odbc, string|null $pk_catalog, string $pk_schema, string $pk_table, string $fk_catalog, string $fk_schema, string $fk_table): Odbc\Result|false	Recupera información de una lista de claves extranjeras
odbc_free_result(Odbc\Result $statement): true	Liberar los recursos asociados con un resultado
odbc_gettypeinfo(Odbc\Connection $odbc, int $data_type = ?): Odbc\Result|false	Recupera información sobre los tipos de datos soportados por la fuente de datos
odbc_longreadlen(Odbc\Result $statement, int $length): true	Manejo de columnas LONG
odbc_next_result(Odbc\Result $statement): bool	Verifica si están disponibles múltiples resultados
odbc_num_fields(Odbc\Result $statement): int	Número de columnas de un resultado
odbc_num_rows(Odbc\Result $statement): int	Número de filas de un resultado
odbc_pconnect(string $dsn, string|null $user = null, string|null $password = null, int $cursor_option = SQL_CUR_USE_DRIVER): Odbc\Connection|false	Abrir una conexión persistente a una base de datos
odbc_prepare(Odbc\Connection $odbc, string $query): Odbc\Result|false	Prepara una declaración para su ejecución
odbc_primarykeys(Odbc\Connection $odbc, string|null $catalog, string $schema, string $table): Odbc\Result|false	Obtiene las claves primarias de una tabla
odbc_procedurecolumns(Odbc\Connection $odbc, string|null $catalog = null, string|null $schema = null, string|null $procedure = null, string|null $column = null): Odbc\Result|false	Recuperar información sobre los parámetros a procedimientos
odbc_procedures(Odbc\Connection $odbc, string|null $catalog = null, string|null $schema = null, string|null $procedure = null): Odbc\Result|false	Obtener la lista de procedimientos almacenados en una fuente de datos específica
odbc_result_all(Odbc\Result $statement, string $format = ""): int|false	Imprimir el resultado como una tabla HTML
odbc_result(Odbc\Result $statement, string|int $field): string|bool|null	Obtener información de resultado
odbc_rollback(Odbc\Connection $odbc): bool	Revertir una transacción
odbc_setoption(Odbc\Connection|Odbc\Result $odbc, int $which, int $option, int $value): bool	Ajustar la configuración de ODBC
odbc_specialcolumns(Odbc\Connection $odbc, int $type, string|null $catalog, string $schema, string $table, int $scope, int $nullable): Odbc\Result|false	Recupera columnas especiales
odbc_statistics(Odbc\Connection $odbc, string|null $catalog, string $schema, string $table, int $unique, int $accuracy): Odbc\Result|false	Recuperar las estadísticas de un tabla
odbc_tableprivileges(Odbc\Connection $odbc, string|null $catalog, string $schema, string $table): Odbc\Result|false	Lista las tablas y los privilegios asociados con cada tabla
odbc_tables(Odbc\Connection $odbc, string|null $catalog = null, string|null $schema = null, string|null $table = null, string|null $types = null): Odbc\Result|false	Obtener la lista de los nombres de las tablas almacenados en una fuente de datos específica
xml_error_string(int $error_code): string|null	Obtiene la cadena de un error dado en un intérprete XML
xml_get_current_byte_index(XMLParser $parser): int	Obtiene la indexación del byte actual en un intérprete XML
xml_get_current_column_number(XMLParser $parser): int	Obtiene el número de columna actual para un intérprete XML
xml_get_current_line_number(XMLParser $parser): int	Obtiene el número de línea actual para un intérprete XML
xml_get_error_code(XMLParser $parser): int	Obtiene un código de error en un intérprete XML
xml_parse_into_struct(XMLParser $parser, string $data, array $values, array $index = null): int|false	Interpreta datos XML en una estructura de array
xml_parse(XMLParser $parser, string $data, bool $is_final = false): int	Inicia un intérprete sobre un documento XML
xml_parser_create_ns(string|null $encoding = null, string $separator = ":"): XMLParser	Crea un analizador XML con soporte para espacios de nombres
xml_parser_create(string|null $encoding = null): XMLParser	Crea un intérprete XML
xml_parser_free(XMLParser $parser): bool	Liberar una analizador XML
xml_parser_get_option(XMLParser $parser, int $option): string|int|bool	Obtiene el valor de las opciones de un intérprete XML
xml_parser_set_option(XMLParser $parser, int $option, string|int|bool $value): bool	Configura las opciones en un intérprete XML
xml_set_character_data_handler(XMLParser $parser, callable|string|null $handler): true	Configura el manejador de los datos de caracteres
xml_set_default_handler(XMLParser $parser, callable|string|null $handler): true	Configura el manejador predeterminado
xml_set_element_handler(XMLParser $parser, callable|string|null $start_handler, callable|string|null $end_handler): true	Configura los manejadores para los elementos de inicio y final
xml_set_end_namespace_decl_handler(XMLParser $parser, callable|string|null $handler): true	Configura el manejador de declaración de final del namespace
xml_set_external_entity_ref_handler(XMLParser $parser, callable|string|null $handler): true	Configura el manejador de referencia a entidades externas
xml_set_notation_decl_handler(XMLParser $parser, callable|string|null $handler): true	Configura el manejador de declaraciones de notación
xml_set_object(XMLParser $parser, object $object): true	Usa un intérprete XML Parser dentro de un objeto
xml_set_processing_instruction_handler(XMLParser $parser, callable|string|null $handler): true	Configura el manejador de instrucciones de proceso (PI)
xml_set_start_namespace_decl_handler(XMLParser $parser, callable|string|null $handler): true	Configura el manejador de declaración de inicio del namespace
xml_set_unparsed_entity_decl_handler(XMLParser $parser, callable|string|null $handler): true	Configura el manejador de declaración de entidades no analizadas
XMLParser()	(new) Una clase completamente opaca que reemplaza a los recursos xml a partir de PHP 8
>close(): true	(XMLReader) Cierra la entrada del XMLReader
>expand(DOMNode|null $baseNode = null): DOMNode|false	(XMLReader) Devuelve una copia del nodo actual como un nodo de objeto DOM
XMLReader::fromStream(resource $stream, string|null $encoding = null, int $flags = ?, string|null $documentUri = null): static	Crear un XMLReader a partir de un flujo para leer
XMLReader::fromString(string $source, string|null $encoding = null, int $flags = ?): static	Crear un XMLReader a partir de una cadena XML
XMLReader::fromUri(string $uri, string|null $encoding = null, int $flags = ?): static	Crear un XMLReader a partir de una URI para leer
>getAttribute(string $name): string|null	(XMLReader) Obtiener el valor del atributo nombrado
>getAttributeNo(int $index): string|null	(XMLReader) Obtiene el valor de un atributo por el indice
>getAttributeNs(string $name, string $namespace): string|null	(XMLReader) Recupera el valor de un atributo por nombre local y URI
>getParserProperty(int $property): bool	(XMLReader) Indica si la porpiedad especificada ha sido establecida
>isValid(): bool	(XMLReader) Indica si el documento analizado es válido
>lookupNamespace(string $prefix): string|null	(XMLReader) Consulta el espacio de nombres para un prefijo
>moveToAttribute(string $name): bool	(XMLReader) Mueve el cursor a un atributo nombrado
>moveToAttributeNo(int $index): bool	(XMLReader) Mueve el cursor a un atributo por su índice
>moveToAttributeNs(string $name, string $namespace): bool	(XMLReader) Mover el cursor a un atributo dado
>moveToElement(): bool	(XMLReader) Posiciona el cursor en el eleménto padre del actual atributo
>moveToFirstAttribute(): bool	(XMLReader) Posiciona el cursor en el primer atributo
>moveToNextAttribute(): bool	(XMLReader) Posiciona el cursor en el siguiente atributo
>next(string|null $name = null): bool	(XMLReader) Mueve el cursor al siguiente nodo saltandose todos los subárboles
XMLReader::open(string $uri, string|null $encoding = null, int $flags = ?): XMLReader	Fija el URI que contiene el XML a analizar
>open(string $uri, string|null $encoding = null, int $flags = ?): bool	(XMLReader) Fija el URI que contiene el XML a analizar
>read(): bool	(XMLReader) Se mueve al siguiente nodo en el documento
>readInnerXml(): string	(XMLReader) Recupera el XML del actual nodo
>readOuterXml(): string	(XMLReader) Recupera el XML del actual nodo, incluyendo él mismo
>readString(): string	(XMLReader) Lee el contenido del nodo actual como string
>setParserProperty(int $property, bool $value): bool	(XMLReader) Establecer las opciones del analizador
>setRelaxNGSchema(string|null $filename): bool	(XMLReader) Establece el nomb re del archivo o el URI para un esquema RelaxNG
>setRelaxNGSchemaSource(string|null $source): bool	(XMLReader) Establece los datos contenidos en un esquema RelaxNG
>setSchema(string|null $filename): bool	(XMLReader) Valida el documento en contra del XSD
XMLReader::XML(string $source, string|null $encoding = null, int $flags = ?): XMLReader	Establece los datos que contienen el XML a analizar
>XML(string $source, string|null $encoding = null, int $flags = ?): bool	(XMLReader) Establece los datos que contienen el XML a analizar
XMLReader()	(new) La extensión XMLReader es un analizador de XML
>endAttribute(): bool	(XMLWriter) Fin del atributo
xmlwriter_end_attribute(XMLWriter $writer): bool	Fin del atributo
>endCdata(): bool	(XMLWriter) Fin del actual CDATA
xmlwriter_end_cdata(XMLWriter $writer): bool	Fin del actual CDATA
>endComment(): bool	(XMLWriter) Crea un comentario final
xmlwriter_end_comment(XMLWriter $writer): bool	Crea un comentario final
>endDocument(): bool	(XMLWriter) Finaliza el actual documento
xmlwriter_end_document(XMLWriter $writer): bool	Finaliza el actual documento
>endDtd(): bool	(XMLWriter) Finaliza la actual DTD
xmlwriter_end_dtd(XMLWriter $writer): bool	Finaliza la actual DTD
>endDtdAttlist(): bool	(XMLWriter) Finaliza la actual attList DTD
xmlwriter_end_dtd_attlist(XMLWriter $writer): bool	Finaliza la actual attList DTD
>endDtdElement(): bool	(XMLWriter) Finaliza el actual elemento DTD
xmlwriter_end_dtd_element(XMLWriter $writer): bool	Finaliza el actual elemento DTD
>endDtdEntity(): bool	(XMLWriter) Finaliza el actual ente DTD
xmlwriter_end_dtd_entity(XMLWriter $writer): bool	Finaliza el actual ente DTD
>endElement(): bool	(XMLWriter) Finaliza el actual elemento
xmlwriter_end_element(XMLWriter $writer): bool	Finaliza el actual elemento
>endPi(): bool	(XMLWriter) Finaliza el actual IP
xmlwriter_end_pi(XMLWriter $writer): bool	Finaliza el actual IP
>flush(bool $empty = true): string|int	(XMLWriter) Vacía el búfer actual
xmlwriter_flush(XMLWriter $writer, bool $empty = true): string|int	Vacía el búfer actual
>fullEndElement(): bool	(XMLWriter) Fin del elemento actual
xmlwriter_full_end_element(XMLWriter $writer): bool	Fin del elemento actual
>openMemory(): bool	(XMLWriter) Crea un nuevo xmlwriter utilizando la memoria para la visualización del string
xmlwriter_open_memory(): XMLWriter|false	Crea un nuevo xmlwriter utilizando la memoria para la visualización del string
>openUri(string $uri): bool	(XMLWriter) Crea un nuevo XMLWriter, utilizando el URI fuente para la visualización
xmlwriter_open_uri(string $uri): XMLWriter|false	Crea un nuevo XMLWriter, utilizando el URI fuente para la visualización
>outputMemory(bool $flush = true): string	(XMLWriter) Devuelve el actual buffer
xmlwriter_output_memory(XMLWriter $writer, bool $flush = true): string	Devuelve el actual buffer
>setIndent(bool $enable): bool	(XMLWriter) Activa o no la indentación
xmlwriter_set_indent(XMLWriter $writer, bool $enable): bool	Activa o no la indentación
>setIndentString(string $indentation): bool	(XMLWriter) Define la string a utilizar para la indentación
xmlwriter_set_indent_string(XMLWriter $writer, string $indentation): bool	Define la string a utilizar para la indentación
>startAttribute(string $name): bool	(XMLWriter) Crea un atributo
xmlwriter_start_attribute(XMLWriter $writer, string $name): bool	Crea un atributo
>startAttributeNs(string|null $prefix, string $name, string|null $namespace): bool	(XMLWriter) Crea un atributo para el espacio de nombres
xmlwriter_start_attribute_ns(XMLWriter $writer, string|null $prefix, string $name, string|null $namespace): bool	Crea un atributo para el espacio de nombres
>startCdata(): bool	(XMLWriter) Crea la etiqueta de inicio de CDATA
xmlwriter_start_cdata(XMLWriter $writer): bool	Crea la etiqueta de inicio de CDATA
>startComment(): bool	(XMLWriter) Crea un comentario inicial
xmlwriter_start_comment(XMLWriter $writer): bool	Crea un comentario inicial
>startDocument(string|null $version = "1.0", string|null $encoding = null, string|null $standalone = null): bool	(XMLWriter) Crea un documento
xmlwriter_start_document(XMLWriter $writer, string|null $version = "1.0", string|null $encoding = null, string|null $standalone = null): bool	Crea un documento
>startDtd(string $qualifiedName, string|null $publicId = null, string|null $systemId = null): bool	(XMLWriter) Crea la etiqueta DTD inicial
xmlwriter_start_dtd(XMLWriter $writer, string $qualifiedName, string|null $publicId = null, string|null $systemId = null): bool	Crea la etiqueta DTD inicial
>startDtdAttlist(string $name): bool	(XMLWriter) Crea el DTD AttList inicial
xmlwriter_start_dtd_attlist(XMLWriter $writer, string $name): bool	Crea el DTD AttList inicial
>startDtdElement(string $qualifiedName): bool	(XMLWriter) Crea un elemento DTD
xmlwriter_start_dtd_element(XMLWriter $writer, string $qualifiedName): bool	Crea un elemento DTD
>startDtdEntity(string $name, bool $isParam): bool	(XMLWriter) Crea un ente DTD inicial
xmlwriter_start_dtd_entity(XMLWriter $writer, string $name, bool $isParam): bool	Crea un ente DTD inicial
>startElement(string $name): bool	(XMLWriter) Crea la etiqueta del elemento inicial
xmlwriter_start_element(XMLWriter $writer, string $name): bool	Crea la etiqueta del elemento inicial
>startElementNs(string|null $prefix, string $name, string|null $namespace): bool	(XMLWriter) Crea un elemento de un espacio de nombres
xmlwriter_start_element_ns(XMLWriter $writer, string|null $prefix, string $name, string|null $namespace): bool	Crea un elemento de un espacio de nombres
>startPi(string $target): bool	(XMLWriter) Crea la etiqueta PI inicial
xmlwriter_start_pi(XMLWriter $writer, string $target): bool	Crea la etiqueta PI inicial
>text(string $content): bool	(XMLWriter) Escribe texto
xmlwriter_text(XMLWriter $writer, string $content): bool	Escribe texto
XMLWriter::toMemory(): static	Crear un nuevo XMLWriter utilizando la memoria para la salida de cadena
XMLWriter::toStream(resource $stream): static	Crear un nuevo XMLWriter utilizando un flujo para la salida
XMLWriter::toUri(string $uri): static	Crear un nuevo XMLWriter utilizando un URI para la salida
>writeAttribute(string $name, string $value): bool	(XMLWriter) Escribe un atributo
xmlwriter_write_attribute(XMLWriter $writer, string $name, string $value): bool	Escribe un atributo
>writeAttributeNs(string|null $prefix, string $name, string|null $namespace, string $value): bool	(XMLWriter) Escribe un atributo de un espacio de nombres
xmlwriter_write_attribute_ns(XMLWriter $writer, string|null $prefix, string $name, string|null $namespace, string $value): bool	Escribe un atributo de un espacio de nombres
>writeCdata(string $content): bool	(XMLWriter) Escribe un bloque CDATA
xmlwriter_write_cdata(XMLWriter $writer, string $content): bool	Escribe un bloque CDATA
>writeComment(string $content): bool	(XMLWriter) EScribe la etiqueta del comentario completa
xmlwriter_write_comment(XMLWriter $writer, string $content): bool	EScribe la etiqueta del comentario completa
>writeDtd(string $name, string|null $publicId = null, string|null $systemId = null, string|null $content = null): bool	(XMLWriter) Escribe una etiqueta completa del DTD
xmlwriter_write_dtd(XMLWriter $writer, string $name, string|null $publicId = null, string|null $systemId = null, string|null $content = null): bool	Escribe una etiqueta completa del DTD
>writeDtdAttlist(string $name, string $content): bool	(XMLWriter) Escribe la etiqueta completa del DTD AttList
xmlwriter_write_dtd_attlist(XMLWriter $writer, string $name, string $content): bool	Escribe la etiqueta completa del DTD AttList
>writeDtdElement(string $name, string $content): bool	(XMLWriter) Escribe la etiqueta completa de un elemento DTD
xmlwriter_write_dtd_element(XMLWriter $writer, string $name, string $content): bool	Escribe la etiqueta completa de un elemento DTD
>writeDtdEntity(string $name, string $content, bool $isParam = false, string|null $publicId = null, string|null $systemId = null, string|null $notationData = null): bool	(XMLWriter) Escribe una entidad DTD
xmlwriter_write_dtd_entity(XMLWriter $writer, string $name, string $content, bool $isParam = false, string|null $publicId = null, string|null $systemId = null, string|null $notationData = null): bool	Escribe una entidad DTD
>writeElement(string $name, string|null $content = null): bool	(XMLWriter) Escribe una etiqueta completa del elemento
xmlwriter_write_element(XMLWriter $writer, string $name, string|null $content = null): bool	Escribe una etiqueta completa del elemento
>writeElementNs(string|null $prefix, string $name, string|null $namespace, string|null $content = null): bool	(XMLWriter) Escribe un elemento de un espacio de nombres
xmlwriter_write_element_ns(XMLWriter $writer, string|null $prefix, string $name, string|null $namespace, string|null $content = null): bool	Escribe un elemento de un espacio de nombres
>writePi(string $target, string $content): bool	(XMLWriter) Escribe un IP
xmlwriter_write_pi(XMLWriter $writer, string $target, string $content): bool	Escribe un IP
>writeRaw(string $content): bool	(XMLWriter) Escribe un texto sin formato del XML
xmlwriter_write_raw(XMLWriter $writer, string $content): bool	Escribe un texto sin formato del XML
XMLWriter()	(new) 
XSLTProcessor()	(new) Crea un nuevo objeto XSLTProcessor
>getParameter(string $namespace, string $name): string|false	(XSLTProcessor) Obtiene el valor de un parámetro
>getSecurityPrefs(): int	(XSLTProcessor) Obtiene las preferencias de seguridad
>hasExsltSupport(): bool	(XSLTProcessor) Determina si PHP tiene soporte para EXSLT
>importStylesheet(object $stylesheet): bool	(XSLTProcessor) Importa una hoja de estilo
>registerPHPFunctionNS(string $namespaceURI, string $name, callable $callable): void	(XSLTProcessor) Registra una función PHP como una función XSLT en un espacio de nombres
>registerPHPFunctions(array|string|null $functions = null): void	(XSLTProcessor) Activa el uso de PHP en las hojas de estilo XSLT
>removeParameter(string $namespace, string $name): bool	(XSLTProcessor) Elimina un parámetro
>setParameter(string $namespace, string $name, string $value): bool	(XSLTProcessor) Define el valor de un parámetro
>setParameter(string $namespace, array $options): bool	(XSLTProcessor) Define el valor de un parámetro
>setProfiling(string|null $filename): true	(XSLTProcessor) Establece el fichero de salida para la información resultado del proceso
>setSecurityPrefs(int $preferences): int	(XSLTProcessor) Establece las preferencias de seguridad
>transformToDoc(object $document, string|null $returnClass = null): object|false	(XSLTProcessor) Transforma en un documento
>transformToUri(object $document, string $uri): int	(XSLTProcessor) Transforma en URI
>transformToXml(object $document): string|null|false	(XSLTProcessor) Transformar en XML
zip_close(resource $zip): void	Cierra un archivo Zip
zip_entry_close(resource $zip_entry): bool	Cierra un directorio de archivo
zip_entry_compressedsize(resource $zip_entry): int|false	Lee el tamaño comprimido de un directorio de archivo
zip_entry_compressionmethod(resource $zip_entry): string|false	Lee el método de compresión usado en un directorio de archivo
zip_entry_filesize(resource $zip_entry): int|false	Lee el tamaño descomprimido de un directorio de archivo
zip_entry_name(resource $zip_entry): string|false	Lee el nombre de un directorio de archivo
zip_entry_open(resource $zip_dp, resource $zip_entry, string $mode = "rb"): bool	Abre un directorio de archivo para lectura
zip_entry_read(resource $zip_entry, int $len = 1024): string|false	Lee el contenido de un archivo en un directorio
zip_open(string $filename): resource|int|false	Abre un archivo ZIP
zip_read(resource $zip): resource|false	Lee la siguiente entrada en un archivo ZIP
>addEmptyDir(string $dirname, int $flags = ?): bool	(ZipArchive) Añadir un nuevo directorio
>addFile(string $filepath, string $entryname = "", int $start = ?, int $length = ZipArchive::LENGTH_TO_END, int $flags = ZipArchive::FL_OVERWRITE): bool	(ZipArchive) Añade un fichero al archivo ZIP para la ruta dada
>addFromString(string $name, string $content, int $flags = ZipArchive::FL_OVERWRITE): bool	(ZipArchive) Añadir un fichero al archivo ZIP usando su contenido
>addGlob(string $pattern, int $flags = ?, array $options = []): array|false	(ZipArchive) Añadir ficheros de un directorio mediante un patrón glob
>addPattern(string $pattern, string $path = ".", array $options = []): array|false	(ZipArchive) Añade ficheros de un directorio a partir de un patrón PCRE
>clearError(): void	(ZipArchive) Borra el mensaje de error, los mensajes del sistema y/o zip
>close(): bool	(ZipArchive) Cierra el fichero activo (abierto o el nuevo creado)
>count(): int	(ZipArchive) Cuenta el número de archivos en el archivo
>deleteIndex(int $index): bool	(ZipArchive) Elimina una entrada en el archivo usando su índice
>deleteName(string $name): bool	(ZipArchive) Elimina una entrada en el archivo por su nombre
>extractTo(string $pathto, array|string|null $files = null): bool	(ZipArchive) Extraer el contenido del archivo
>getArchiveComment(int $flags = ?): string|false	(ZipArchive) Devuelve el comentario del archivo ZIP
>getArchiveFlag(int $flag, int $flags = ?): int	(ZipArchive) Devuelve el valor de una bandera global del archivo
>getCommentIndex(int $index, int $flags = ?): string|false	(ZipArchive) Devuelve el comentario de una entrada usando la entrada díndice
>getCommentName(string $name, int $flags = ?): string|false	(ZipArchive) Devuelve el comentario de una entrada usando el nombre de la entrada
>getExternalAttributesIndex(int $index, int $opsys, int $attr, int $flags = ?): bool	(ZipArchive) Obtener los atributos externos de una entrada definida por su índice
>getExternalAttributesName(string $name, int $opsys, int $attr, int $flags = ?): bool	(ZipArchive) Obtener los atributos externos de una entrada definida por su nombre
>getFromIndex(int $index, int $len = ?, int $flags = ?): string|false	(ZipArchive) Devuelve el contenido de la entrada usando su índice
>getFromName(string $name, int $len = ?, int $flags = ?): string|false	(ZipArchive) Devuelve el contenido de la entrada utilizando su nombre
>getNameIndex(int $index, int $flags = ?): string|false	(ZipArchive) Devuelve el nombre de una entrada utilizando su índice
>getStatusString(): string	(ZipArchive) Devuelve mensajes de: estado de error, de sistema y/o mensajes de zip
>getStream(string $name): resource|false	(ZipArchive) Obtener un manejador de fichero para la entrada definido por su nombre (sólo lectura)
>getStreamIndex(int $index, int $flags = ?): resource|false	(ZipArchive) Recupera un manejador de archivo para la entrada definida por su índice (solo lectura)
>getStreamName(string $name, int $flags = ?): resource|false	(ZipArchive) Recupera un manejador de archivo para la entrada definida por su nombre (solo lectura)
ZipArchive::isCompressionMethodSupported(int $method, bool $enc = true): bool	Verifica si un método de compresión es soportado por libzip
ZipArchive::isEncryptionMethodSupported(int $method, bool $enc = true): bool	Verifica si un método de cifrado es soportado por libzip
>locateName(string $name, int $flags = ?): int|false	(ZipArchive) Devuelve el índice de la entrada en el archivo
>open(string $filename, int $flags = ?): bool|int	(ZipArchive) Abrir un fichero de archivo en formato ZIP
>registerCancelCallback(callable $callback): bool	(ZipArchive) Registrar una llamada para permitir la cancelación durante el cierre del archivo
>registerProgressCallback(float $rate, callable $callback): bool	(ZipArchive) Registra una llamada para proporcionar actualizaciones durante el cierre del archivo
>renameIndex(int $index, string $new_name): bool	(ZipArchive) Renombra una entrada definida por su índice
>renameName(string $name, string $new_name): bool	(ZipArchive) Renombra una entrada definida por su nombre
>replaceFile(string $filepath, int $index, int $start = ?, int $length = ZipArchive::LENGTH_TO_END, int $flags = ?): bool	(ZipArchive) Reemplaza fichero en el archivo ZIP con una ruta determinada
>setArchiveComment(string $comment): bool	(ZipArchive) Establece el comentario de un archivo ZIP
>setArchiveFlag(int $flag, int $value): bool	(ZipArchive) Define una bandera global de un archivo ZIP
>setCommentIndex(int $index, string $comment): bool	(ZipArchive) Establece el comentario de una entrada definido por su índice
>setCommentName(string $name, string $comment): bool	(ZipArchive) Establece el comentario de una entrada definido por su nombre
>setCompressionIndex(int $index, int $method, int $compflags = ?): bool	(ZipArchive) Establecer el método de compresión de una entrada definida por su índice
>setCompressionName(string $name, int $method, int $compflags = ?): bool	(ZipArchive) Establecer el método de compresión de una entrada definida por su nombre
>setEncryptionIndex(int $index, int $method, string|null $password = null): bool	(ZipArchive) Establece el método de cifrado de una entrada definida por su índice
>setEncryptionName(string $name, int $method, string|null $password = null): bool	(ZipArchive) Establece el método de cifrado de una entrada definida por su nombre
>setExternalAttributesIndex(int $index, int $opsys, int $attr, int $flags = ?): bool	(ZipArchive) Establece los atributos externos de una entrada definida por su índice
>setExternalAttributesName(string $name, int $opsys, int $attr, int $flags = ?): bool	(ZipArchive) Establece los atributos externos de una entrada definida por su nombre
>setMtimeIndex(int $index, int $timestamp, int $flags = ?): bool	(ZipArchive) Establece el tiempo de modificación de una entrada definido por su índice
>setMtimeName(string $name, int $timestamp, int $flags = ?): bool	(ZipArchive) Establece la hora de modificación de una entrada definida por su nombre
>setPassword(string $password): bool	(ZipArchive) Establece la contraseña para el archivo activo
>statIndex(int $index, int $flags = ?): array|false	(ZipArchive) Obtiene los detalles de una entrada definida por su índice
>statName(string $name, int $flags = ?): array|false	(ZipArchive) Obtener los detalles de una entrada definida por su nombre
>unchangeAll(): bool	(ZipArchive) Deshacer todos los cambios hechos en el archivo
>unchangeArchive(): bool	(ZipArchive) Revertir todos los cambios globales hechos en el archivo
>unchangeIndex(int $index): bool	(ZipArchive) Revertir todos los cambios hechos a una entrada en el índice dado
>unchangeName(string $name): bool	(ZipArchive) Deshace todos los cambios realizados a una entrada con un nombre dado
ZipArchive()	(new) Un fichero, comprimido con Zip
CASE_LOWER
CASE_UPPER
SORT_ASC
SORT_DESC
SORT_REGULAR
SORT_NUMERIC
SORT_STRING
SORT_LOCALE_STRING
SORT_NATURAL
SORT_FLAG_CASE
ARRAY_FILTER_USE_KEY
ARRAY_FILTER_USE_BOTH
COUNT_NORMAL
COUNT_RECURSIVE
EXTR_OVERWRITE
EXTR_SKIP
EXTR_PREFIX_SAME
EXTR_PREFIX_ALL
EXTR_PREFIX_INVALID
EXTR_PREFIX_IF_EXISTS
EXTR_IF_EXISTS
EXTR_REFS
SUNFUNCS_RET_TIMESTAMP
SUNFUNCS_RET_STRING
SUNFUNCS_RET_DOUBLE
DATE_ATOM
DATE_COOKIE
DATE_ISO8601
DATE_ISO8601_EXPANDED
DATE_RFC822
DATE_RFC850
DATE_RFC1036
DATE_RFC1123
DATE_RFC7231
DATE_RFC2822
DATE_RFC3339
DATE_RFC3339_EXTENDED
DATE_RSS
DATE_W3C
DIRECTORY_SEPARATOR
PATH_SEPARATOR
SCANDIR_SORT_ASCENDING
SCANDIR_SORT_DESCENDING
SCANDIR_SORT_NONE
E_ERROR
E_WARNING
E_PARSE
E_NOTICE
E_CORE_ERROR
E_CORE_WARNING
E_COMPILE_ERROR
E_COMPILE_WARNING
E_DEPRECATED
E_USER_ERROR
E_USER_WARNING
E_USER_NOTICE
E_USER_DEPRECATED
E_STRICT
E_RECOVERABLE_ERROR
E_ALL
SEEK_SET
SEEK_CUR
SEEK_END
LOCK_SH
LOCK_EX
LOCK_UN
LOCK_NB
FILE_USE_INCLUDE_PATH
FILE_NO_DEFAULT_CONTEXT
FILE_APPEND
FILE_IGNORE_NEW_LINES
FILE_SKIP_EMPTY_LINES
FILE_BINARY
FILE_TEXT
GLOB_AVAILABLE_FLAGS
GLOB_BRACE
GLOB_ERR
GLOB_MARK
GLOB_NOCHECK
GLOB_NOESCAPE
GLOB_NOSORT
GLOB_ONLYDIR
PATHINFO_ALL
PATHINFO_DIRNAME
PATHINFO_BASENAME
PATHINFO_EXTENSION
PATHINFO_FILENAME
INI_SCANNER_NORMAL
INI_SCANNER_RAW
INI_SCANNER_TYPED
FNM_NOESCAPE
FNM_PATHNAME
FNM_PERIOD
FNM_CASEFOLD
UPLOAD_ERR_CANT_WRITE
UPLOAD_ERR_EXTENSION
UPLOAD_ERR_FORM_SIZE
UPLOAD_ERR_INI_SIZE
UPLOAD_ERR_NO_FILE
UPLOAD_ERR_NO_TMP_DIR
UPLOAD_ERR_OK
UPLOAD_ERR_PARTIAL
HASH_HMAC
CREDITS_GROUP
CREDITS_GENERAL
CREDITS_SAPI
CREDITS_MODULES
CREDITS_DOCS
CREDITS_FULLPAGE
CREDITS_QA
CREDITS_ALL
INFO_GENERAL
INFO_CREDITS
INFO_CONFIGURATION
INFO_MODULES
INFO_ENVIRONMENT
INFO_VARIABLES
INFO_LICENSE
INFO_ALL
INI_USER
INI_PERDIR
INI_SYSTEM
INI_ALL
ASSERT_ACTIVE
ASSERT_CALLBACK
ASSERT_BAIL
ASSERT_EXCEPTION
ASSERT_WARNING
ASSERT_QUIET_EVAL
PHP_WINDOWS_VERSION_MAJOR
PHP_WINDOWS_VERSION_MINOR
PHP_WINDOWS_VERSION_BUILD
PHP_WINDOWS_VERSION_PLATFORM
PHP_WINDOWS_VERSION_SP_MAJOR
PHP_WINDOWS_VERSION_SP_MINOR
PHP_WINDOWS_VERSION_SUITEMASK
PHP_WINDOWS_VERSION_PRODUCTTYPE
PHP_WINDOWS_NT_DOMAIN_CONTROLLER
PHP_WINDOWS_NT_SERVER
PHP_WINDOWS_NT_WORKSTATION
JSON_ERROR_NONE
JSON_ERROR_DEPTH
JSON_ERROR_STATE_MISMATCH
JSON_ERROR_CTRL_CHAR
JSON_ERROR_SYNTAX
JSON_ERROR_UTF8
JSON_ERROR_RECURSION
JSON_ERROR_INF_OR_NAN
JSON_ERROR_UNSUPPORTED_TYPE
JSON_ERROR_INVALID_PROPERTY_NAME
JSON_ERROR_UTF16
JSON_ERROR_NON_BACKED_ENUM
JSON_BIGINT_AS_STRING
JSON_OBJECT_AS_ARRAY
JSON_HEX_TAG
JSON_HEX_AMP
JSON_HEX_APOS
JSON_HEX_QUOT
JSON_FORCE_OBJECT
JSON_NUMERIC_CHECK
JSON_PRETTY_PRINT
JSON_UNESCAPED_SLASHES
JSON_UNESCAPED_UNICODE
JSON_PARTIAL_OUTPUT_ON_ERROR
JSON_PRESERVE_ZERO_FRACTION
JSON_UNESCAPED_LINE_TERMINATORS
JSON_INVALID_UTF8_IGNORE
JSON_INVALID_UTF8_SUBSTITUTE
JSON_THROW_ON_ERROR
M_PI
M_E
M_LOG2E
M_LOG10E
M_LN2
M_LN10
M_PI_2
M_PI_4
M_1_PI
M_2_PI
M_SQRTPI
M_2_SQRTPI
M_SQRT2
M_SQRT3
M_SQRT1_2
M_LNPI
M_EULER
NAN
INF
PHP_ROUND_HALF_UP
PHP_ROUND_HALF_DOWN
PHP_ROUND_HALF_EVEN
PHP_ROUND_HALF_ODD
CONNECTION_ABORTED
CONNECTION_NORMAL
CONNECTION_TIMEOUT
__COMPILER_HALT_OFFSET__
LOG_CONS
LOG_NDELAY
LOG_ODELAY
LOG_NOWAIT
LOG_PERROR
LOG_PID
LOG_AUTH
LOG_AUTHPRIV
LOG_CRON
LOG_DAEMON
LOG_KERN
LOG_LOCAL0
LOG_LOCAL1
LOG_LOCAL2
LOG_LOCAL3
LOG_LOCAL4
LOG_LOCAL5
LOG_LOCAL6
LOG_LOCAL7
LOG_LPR
LOG_MAIL
LOG_NEWS
LOG_SYSLOG
LOG_USER
LOG_UUCP
LOG_EMERG
LOG_ALERT
LOG_CRIT
LOG_ERR
LOG_WARNING
LOG_NOTICE
LOG_INFO
LOG_DEBUG
DNS_ANY
DNS_ALL
DNS_A
DNS_AAAA
DNS_A6
DNS_CAA
DNS_CNAME
DNS_HINFO
DNS_MX
DNS_NAPTR
DNS_NS
DNS_PTR
DNS_SOA
DNS_SRV
DNS_TXT
PHP_OUTPUT_HANDLER_START
PHP_OUTPUT_HANDLER_WRITE
PHP_OUTPUT_HANDLER_FLUSH
PHP_OUTPUT_HANDLER_CLEAN
PHP_OUTPUT_HANDLER_FINAL
PHP_OUTPUT_HANDLER_CONT
PHP_OUTPUT_HANDLER_END
PHP_OUTPUT_HANDLER_CLEANABLE
PHP_OUTPUT_HANDLER_FLUSHABLE
PHP_OUTPUT_HANDLER_REMOVABLE
PHP_OUTPUT_HANDLER_STDFLAGS
PHP_OUTPUT_HANDLER_STARTED
PHP_OUTPUT_HANDLER_DISABLED
PHP_OUTPUT_HANDLER_PROCESSED
PASSWORD_BCRYPT
PASSWORD_BCRYPT_DEFAULT_COST
PASSWORD_ARGON2I
PASSWORD_ARGON2ID
PASSWORD_ARGON2_DEFAULT_MEMORY_COST
PASSWORD_ARGON2_DEFAULT_TIME_COST
PASSWORD_ARGON2_DEFAULT_THREADS
PASSWORD_ARGON2_PROVIDER
PASSWORD_DEFAULT
PREG_PATTERN_ORDER
PREG_SET_ORDER
PREG_OFFSET_CAPTURE
PREG_SPLIT_NO_EMPTY
PREG_SPLIT_DELIM_CAPTURE
PREG_SPLIT_OFFSET_CAPTURE
PREG_UNMATCHED_AS_NULL
PREG_NO_ERROR
PREG_INTERNAL_ERROR
PREG_BACKTRACK_LIMIT_ERROR
PREG_RECURSION_LIMIT_ERROR
PREG_BAD_UTF8_ERROR
PREG_BAD_UTF8_OFFSET_ERROR
PREG_JIT_STACKLIMIT_ERROR
PCRE_VERSION
PCRE_VERSION_MAJOR
PCRE_VERSION_MINOR
PCRE_JIT_SUPPORT
PREG_GREP_INVERT
MT_RAND_MT19937
MT_RAND_PHP
STREAM_CLIENT_ASYNC_CONNECT
STREAM_CLIENT_CONNECT
STREAM_CLIENT_PERSISTENT
STREAM_SERVER_BIND
STREAM_SERVER_LISTEN
STREAM_SHUT_RD
STREAM_SHUT_WR
STREAM_SHUT_RDWR
STREAM_OOB
STREAM_PEEK
STREAM_FILTER_READ
STREAM_FILTER_WRITE
STREAM_FILTER_ALL
STREAM_CRYPTO_METHOD_ANY_CLIENT
STREAM_CRYPTO_METHOD_SSLv2_CLIENT
STREAM_CRYPTO_METHOD_SSLv3_CLIENT
STREAM_CRYPTO_METHOD_SSLv23_CLIENT
STREAM_CRYPTO_METHOD_TLS_CLIENT
STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT
STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT
STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT
STREAM_CRYPTO_METHOD_TLSv1_3_CLIENT
STREAM_CRYPTO_METHOD_ANY_SERVER
STREAM_CRYPTO_METHOD_SSLv2_SERVER
STREAM_CRYPTO_METHOD_SSLv3_SERVER
STREAM_CRYPTO_METHOD_SSLv23_SERVER
STREAM_CRYPTO_METHOD_TLS_SERVER
STREAM_CRYPTO_METHOD_TLSv1_0_SERVER
STREAM_CRYPTO_METHOD_TLSv1_1_SERVER
STREAM_CRYPTO_METHOD_TLSv1_2_SERVER
STREAM_CRYPTO_METHOD_TLSv1_3_SERVER
STREAM_CRYPTO_PROTO_SSLv3
STREAM_CRYPTO_PROTO_TLSv1_0
STREAM_CRYPTO_PROTO_TLSv1_1
STREAM_CRYPTO_PROTO_TLSv1_2
STREAM_CRYPTO_PROTO_TLSv1_3
STREAM_MUST_SEEK
STREAM_IGNORE_URL
STREAM_PF_INET
STREAM_PF_INET6
STREAM_PF_UNIX
STREAM_SOCK_DGRAM
STREAM_SOCK_RAW
STREAM_SOCK_RDM
STREAM_SOCK_SEQPACKET
STREAM_SOCK_STREAM
STREAM_IPPROTO_ICMP
STREAM_IPPROTO_IP
STREAM_IPPROTO_RAW
STREAM_IPPROTO_TCP
STREAM_IPPROTO_UDP
STREAM_NOTIFY_RESOLVE
STREAM_NOTIFY_CONNECT
STREAM_NOTIFY_AUTH_REQUIRED
STREAM_NOTIFY_MIME_TYPE_IS
STREAM_NOTIFY_FILE_SIZE_IS
STREAM_NOTIFY_REDIRECTED
STREAM_NOTIFY_PROGRESS
STREAM_NOTIFY_COMPLETED
STREAM_NOTIFY_FAILURE
STREAM_NOTIFY_AUTH_RESULT
STREAM_NOTIFY_SEVERITY_INFO
STREAM_NOTIFY_SEVERITY_WARN
STREAM_NOTIFY_SEVERITY_ERR
STREAM_IS_URL
STREAM_CAST_FOR_SELECT
STREAM_CAST_AS_STREAM
STREAM_META_TOUCH
STREAM_META_OWNER
STREAM_META_OWNER_NAME
STREAM_META_GROUP
STREAM_META_GROUP_NAME
STREAM_META_ACCESS
STREAM_MKDIR_RECURSIVE
STREAM_USE_PATH
STREAM_REPORT_ERRORS
STREAM_OPTION_BLOCKING
STREAM_OPTION_READ_BUFFER
STREAM_BUFFER_NONE
STREAM_BUFFER_LINE
STREAM_BUFFER_FULL
STREAM_OPTION_READ_TIMEOUT
STREAM_OPTION_WRITE_BUFFER
STREAM_URL_STAT_LINK
STREAM_URL_STAT_QUIET
PSFS_PASS_ON
PSFS_FEED_ME
PSFS_ERR_FATAL
PSFS_FLAG_NORMAL
PSFS_FLAG_FLUSH_INC
PSFS_FLAG_FLUSH_CLOSE
CRYPT_SALT_LENGTH
CRYPT_STD_DES
CRYPT_EXT_DES
CRYPT_MD5
CRYPT_BLOWFISH
CRYPT_SHA256
CRYPT_SHA512
HTML_SPECIALCHARS
HTML_ENTITIES
ENT_COMPAT
ENT_QUOTES
ENT_NOQUOTES
ENT_IGNORE
ENT_SUBSTITUTE
ENT_DISALLOWED
ENT_HTML401
ENT_XML1
ENT_XHTML
ENT_HTML5
CHAR_MAX
LC_CTYPE
LC_NUMERIC
LC_TIME
LC_COLLATE
LC_MONETARY
LC_ALL
LC_MESSAGES
STR_PAD_LEFT
STR_PAD_RIGHT
STR_PAD_BOTH
ABDAY_1
ABDAY_2
ABDAY_3
ABDAY_4
ABDAY_5
ABDAY_6
ABDAY_7
DAY_1
DAY_2
DAY_3
DAY_4
DAY_5
DAY_6
DAY_7
ABMON_1
ABMON_2
ABMON_3
ABMON_4
ABMON_5
ABMON_6
ABMON_7
ABMON_8
ABMON_9
ABMON_10
ABMON_11
ABMON_12
MON_1
MON_2
MON_3
MON_4
MON_5
MON_6
MON_7
MON_8
MON_9
MON_10
MON_11
MON_12
AM_STR
PM_STR
D_T_FMT
D_FMT
T_FMT
T_FMT_AMPM
ERA
ERA_YEAR
ERA_D_T_FMT
ERA_D_FMT
ERA_T_FMT
ALT_DIGITS
INT_CURR_SYMBOL
CURRENCY_SYMBOL
CRNCYSTR
MON_DECIMAL_POINT
MON_THOUSANDS_SEP
MON_GROUPING
POSITIVE_SIGN
NEGATIVE_SIGN
INT_FRAC_DIGITS
FRAC_DIGITS
P_CS_PRECEDES
P_SEP_BY_SPACE
N_CS_PRECEDES
N_SEP_BY_SPACE
P_SIGN_POSN
N_SIGN_POSN
DECIMAL_POINT
RADIXCHAR
THOUSANDS_SEP
THOUSEP
GROUPING
YESEXPR
NOEXPR
YESSTR
NOSTR
CODESET
PHP_URL_SCHEME
PHP_URL_HOST
PHP_URL_PORT
PHP_URL_USER
PHP_URL_PASS
PHP_URL_PATH
PHP_URL_QUERY
PHP_URL_FRAGMENT
PHP_QUERY_RFC1738
PHP_QUERY_RFC3986
CAL_EASTER_DEFAULT
CAL_EASTER_ROMAN
CAL_EASTER_ALWAYS_GREGORIAN
CAL_EASTER_ALWAYS_JULIAN
CAL_GREGORIAN
CAL_JULIAN
CAL_JEWISH
CAL_FRENCH
CAL_NUM_CALS
CAL_JEWISH_ADD_ALAFIM_GERESH
CAL_JEWISH_ADD_ALAFIM
CAL_JEWISH_ADD_GERESHAYIM
CAL_DOW_DAYNO
CAL_DOW_SHORT
CAL_DOW_LONG
CAL_MONTH_GREGORIAN_SHORT
CAL_MONTH_GREGORIAN_LONG
CAL_MONTH_JULIAN_SHORT
CAL_MONTH_JULIAN_LONG
CAL_MONTH_JEWISH
CAL_MONTH_FRENCH
CLSCTX_INPROC_SERVER
CLSCTX_INPROC_HANDLER
CLSCTX_LOCAL_SERVER
CLSCTX_REMOTE_SERVER
CLSCTX_SERVER
CLSCTX_ALL
VT_NULL
VT_EMPTY
VT_INT
VT_I1
VT_I2
VT_I4
VT_I8
VT_UINT
VT_UI1
VT_UI2
VT_UI4
VT_UI8
VT_R4
VT_R8
VT_BOOL
VT_ERROR
VT_CY
VT_DATE
VT_BSTR
VT_DECIMAL
VT_UNKNOWN
VT_DISPATCH
VT_VARIANT
VT_ARRAY
VT_BYREF
CP_ACP
CP_MACCP
CP_OEMCP
CP_UTF7
CP_UTF8
CP_SYMBOL
CP_THREAD_ACP
VARCMP_LT
VARCMP_EQ
VARCMP_GT
VARCMP_NULL
NORM_IGNORECASE
NORM_IGNORENONSPACE
NORM_IGNORESYMBOLS
NORM_IGNOREWIDTH
NORM_IGNOREKANATYPE
NORM_IGNOREKASHIDA
DISP_E_DIVBYZERO
DISP_E_OVERFLOW
DISP_E_BADINDEX
DISP_E_PARAMNOTFOUND
MK_E_UNAVAILABLE
LOCALE_NEUTRAL
LOCALE_SYSTEM_DEFAULT
DBA_LMDB_USE_SUB_DIR
DBA_LMDB_NO_SUB_DIR
EXIF_USE_MBSTRING
FILEINFO_NONE
FILEINFO_SYMLINK
FILEINFO_MIME_TYPE
FILEINFO_MIME_ENCODING
FILEINFO_MIME
FILEINFO_COMPRESS
FILEINFO_DEVICES
FILEINFO_CONTINUE
FILEINFO_PRESERVE_ATIME
FILEINFO_RAW
FILEINFO_EXTENSION
FILEINFO_APPLE
INPUT_POST
INPUT_GET
INPUT_COOKIE
INPUT_ENV
INPUT_SERVER
INPUT_SESSION
INPUT_REQUEST
FILTER_FLAG_NONE
FILTER_REQUIRE_SCALAR
FILTER_REQUIRE_ARRAY
FILTER_FORCE_ARRAY
FILTER_NULL_ON_FAILURE
FILTER_FLAG_STRIP_LOW
FILTER_FLAG_STRIP_HIGH
FILTER_FLAG_STRIP_BACKTICK
FILTER_FLAG_ENCODE_LOW
FILTER_FLAG_ENCODE_HIGH
FILTER_FLAG_ENCODE_AMP
FILTER_FLAG_NO_ENCODE_QUOTES
FILTER_FLAG_EMPTY_STRING_NULL
FILTER_VALIDATE_BOOL
FILTER_VALIDATE_BOOLEAN
FILTER_VALIDATE_INT
FILTER_FLAG_ALLOW_OCTAL
FILTER_FLAG_ALLOW_HEX
FILTER_VALIDATE_FLOAT
FILTER_FLAG_ALLOW_THOUSAND
FILTER_VALIDATE_REGEXP
FILTER_VALIDATE_URL
FILTER_FLAG_SCHEME_REQUIRED
FILTER_FLAG_HOST_REQUIRED
FILTER_FLAG_PATH_REQUIRED
FILTER_FLAG_QUERY_REQUIRED
FILTER_VALIDATE_DOMAIN
FILTER_FLAG_HOSTNAME
FILTER_VALIDATE_EMAIL
FILTER_FLAG_EMAIL_UNICODE
FILTER_VALIDATE_IP
FILTER_FLAG_IPV4
FILTER_FLAG_IPV6
FILTER_FLAG_NO_RES_RANGE
FILTER_FLAG_NO_PRIV_RANGE
FILTER_FLAG_GLOBAL_RANGE
FILTER_VALIDATE_MAC
FILTER_UNSAFE_RAW
FILTER_DEFAULT
FILTER_SANITIZE_STRING
FILTER_SANITIZE_STRIPPED
FILTER_SANITIZE_ENCODED
FILTER_SANITIZE_SPECIAL_CHARS
FILTER_SANITIZE_FULL_SPECIAL_CHARS
FILTER_SANITIZE_EMAIL
FILTER_SANITIZE_URL
FILTER_SANITIZE_NUMBER_INT
FILTER_SANITIZE_NUMBER_FLOAT
FILTER_FLAG_ALLOW_FRACTION
FILTER_FLAG_ALLOW_THOUSAND
FILTER_FLAG_ALLOW_SCIENTIFIC
FILTER_SANITIZE_ADD_SLASHES
FILTER_SANITIZE_MAGIC_QUOTES
FILTER_CALLBACK
FTP_ASCII
FTP_AUTOSEEK
FTP_AUTORESUME
FTP_FAILED
FTP_FINISHED
FTP_MOREDATA
FTP_TEXT
FTP_BINARY
FTP_IMAGE
FTP_TIMEOUT_SEC
FTP_USEPASVADDRESS
ICONV_IMPL
ICONV_VERSION
ICONV_MIME_DECODE_STRICT
ICONV_MIME_DECODE_CONTINUE_ON_ERROR
GD_VERSION
GD_MAJOR_VERSION
GD_MINOR_VERSION
GD_RELEASE_VERSION
GD_EXTRA_VERSION
GD_BUNDLED
IMG_AVIF
IMG_BMP
IMG_GIF
IMG_JPG
IMG_JPEG
IMG_PNG
IMG_TGA
IMG_WBMP
IMG_XPM
IMG_WEBP
IMG_WEBP_LOSSLESS
IMG_COLOR_TILED
IMG_COLOR_STYLED
IMG_COLOR_BRUSHED
IMG_COLOR_STYLEDBRUSHED
IMG_COLOR_TRANSPARENT
IMG_AFFINE_TRANSLATE
IMG_AFFINE_SCALE
IMG_AFFINE_ROTATE
IMG_AFFINE_SHEAR_HORIZONTAL
IMG_AFFINE_SHEAR_VERTICAL
IMG_ARC_ROUNDED
IMG_ARC_PIE
IMG_ARC_CHORD
IMG_ARC_NOFILL
IMG_ARC_EDGED
IMG_GD2_RAW
IMG_GD2_COMPRESSED
IMG_EFFECT_REPLACE
IMG_EFFECT_ALPHABLEND
IMG_EFFECT_NORMAL
IMG_EFFECT_OVERLAY
IMG_EFFECT_MULTIPLY
IMG_FILTER_NEGATE
IMG_FILTER_GRAYSCALE
IMG_FILTER_BRIGHTNESS
IMG_FILTER_CONTRAST
IMG_FILTER_COLORIZE
IMG_FILTER_EDGEDETECT
IMG_FILTER_GAUSSIAN_BLUR
IMG_FILTER_SELECTIVE_BLUR
IMG_FILTER_EMBOSS
IMG_FILTER_MEAN_REMOVAL
IMG_FILTER_SMOOTH
IMG_FILTER_PIXELATE
IMG_FILTER_SCATTER
IMAGETYPE_GIF
IMAGETYPE_JPEG
IMAGETYPE_JPEG2000
IMAGETYPE_PNG
IMAGETYPE_SWF
IMAGETYPE_PSD
IMAGETYPE_BMP
IMAGETYPE_WBMP
IMAGETYPE_XBM
IMAGETYPE_TIFF_II
IMAGETYPE_TIFF_MM
IMAGETYPE_IFF
IMAGETYPE_JB2
IMAGETYPE_JPC
IMAGETYPE_JP2
IMAGETYPE_JPX
IMAGETYPE_SWC
IMAGETYPE_ICO
IMAGETYPE_WEBP
IMAGETYPE_AVIF
IMAGETYPE_UNKNOWN
IMAGETYPE_COUNT
PNG_NO_FILTER
PNG_FILTER_NONE
PNG_FILTER_SUB
PNG_FILTER_UP
PNG_FILTER_AVG
PNG_FILTER_PAETH
PNG_ALL_FILTERS
IMG_FLIP_VERTICAL
IMG_FLIP_HORIZONTAL
IMG_FLIP_BOTH
IMG_BELL
IMG_BESSEL
IMG_BILINEAR_FIXED
IMG_BICUBIC
IMG_BICUBIC_FIXED
IMG_BLACKMAN
IMG_BOX
IMG_BSPLINE
IMG_CATMULLROM
IMG_GAUSSIAN
IMG_GENERALIZED_CUBIC
IMG_HERMITE
IMG_HAMMING
IMG_HANNING
IMG_MITCHELL
IMG_POWER
IMG_QUADRATIC
IMG_SINC
IMG_NEAREST_NEIGHBOUR
IMG_WEIGHTED4
IMG_TRIANGLE
IMG_CROP_BLACK
IMG_CROP_DEFAULT
IMG_CROP_SIDES
IMG_CROP_THRESHOLD
IMG_CROP_TRANSPARENT
IMG_CROP_WHITE
INTL_ICU_DATA_VERSION
INTL_ICU_VERSION
INTL_MAX_LOCALE_LEN
IDNA_DEFAULT
IDNA_ALLOW_UNASSIGNED
IDNA_USE_STD3_RULES
IDNA_CHECK_BIDI
IDNA_CHECK_CONTEXTJ
IDNA_NONTRANSITIONAL_TO_ASCII
IDNA_NONTRANSITIONAL_TO_UNICODE
INTL_IDNA_VARIANT_2003
INTL_IDNA_VARIANT_UTS46
GRAPHEME_EXTR_COUNT
GRAPHEME_EXTR_MAXBYTES
GRAPHEME_EXTR_MAXCHARS
IDNA_ERROR_EMPTY_LABEL
IDNA_ERROR_LABEL_TOO_LONG
IDNA_ERROR_DOMAIN_NAME_TOO_LONG
IDNA_ERROR_LEADING_HYPHEN
IDNA_ERROR_TRAILING_HYPHEN
IDNA_ERROR_HYPHEN_3_4
IDNA_ERROR_LEADING_COMBINING_MARK
IDNA_ERROR_DISALLOWED
IDNA_ERROR_PUNYCODE
IDNA_ERROR_LABEL_HAS_DOT
IDNA_ERROR_INVALID_ACE_LABEL
IDNA_ERROR_BIDI
IDNA_ERROR_CONTEXTJ
ULOC_ACTUAL_LOCALE
ULOC_VALID_LOCALE
U_AMBIGUOUS_ALIAS_WARNING
U_BAD_VARIABLE_DEFINITION
U_BRK_ASSIGN_ERROR
U_BRK_ERROR_LIMIT
U_BRK_ERROR_START
U_BRK_HEX_DIGITS_EXPECTED
U_BRK_INIT_ERROR
U_BRK_INTERNAL_ERROR
U_BRK_MALFORMED_RULE_TAG
U_BRK_MISMATCHED_PAREN
U_BRK_NEW_LINE_IN_QUOTED_STRING
U_BRK_RULE_EMPTY_SET
U_BRK_RULE_SYNTAX
U_BRK_SEMICOLON_EXPECTED
U_BRK_UNCLOSED_SET
U_BRK_UNDEFINED_VARIABLE
U_BRK_UNRECOGNIZED_OPTION
U_BRK_VARIABLE_REDFINITION
U_BUFFER_OVERFLOW_ERROR
U_CE_NOT_FOUND_ERROR
U_COLLATOR_VERSION_MISMATCH
U_DIFFERENT_UCA_VERSION
U_ENUM_OUT_OF_SYNC_ERROR
U_ERROR_LIMIT
U_ERROR_WARNING_LIMIT
U_ERROR_WARNING_START
U_FILE_ACCESS_ERROR
U_FMT_PARSE_ERROR_LIMIT
U_FMT_PARSE_ERROR_START
U_IDNA_ACE_PREFIX_ERROR
U_IDNA_CHECK_BIDI_ERROR
U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR
U_IDNA_ERROR_LIMIT
U_IDNA_ERROR_START
U_IDNA_LABEL_TOO_LONG_ERROR
U_IDNA_PROHIBITED_ERROR
U_IDNA_STD3_ASCII_RULES_ERROR
U_IDNA_UNASSIGNED_ERROR
U_IDNA_VERIFICATION_ERROR
U_IDNA_ZERO_LENGTH_LABEL_ERROR
U_ILLEGAL_ARGUMENT_ERROR
U_ILLEGAL_CHAR_FOUND
U_ILLEGAL_CHAR_IN_SEGMENT
U_ILLEGAL_CHARACTER
U_ILLEGAL_ESCAPE_SEQUENCE
U_ILLEGAL_PAD_POSITION
U_INDEX_OUTOFBOUNDS_ERROR
U_INTERNAL_PROGRAM_ERROR
U_INTERNAL_TRANSLITERATOR_ERROR
U_INVALID_CHAR_FOUND
U_INVALID_FORMAT_ERROR
U_INVALID_FUNCTION
U_INVALID_ID
U_INVALID_PROPERTY_PATTERN
U_INVALID_RBT_SYNTAX
U_INVALID_STATE_ERROR
U_INVALID_TABLE_FILE
U_INVALID_TABLE_FORMAT
U_INVARIANT_CONVERSION_ERROR
U_MALFORMED_EXPONENTIAL_PATTERN
U_MALFORMED_PRAGMA
U_MALFORMED_RULE
U_MALFORMED_SET
U_MALFORMED_SYMBOL_REFERENCE
U_MALFORMED_UNICODE_ESCAPE
U_MALFORMED_VARIABLE_DEFINITION
U_MALFORMED_VARIABLE_REFERENCE
U_MEMORY_ALLOCATION_ERROR
U_MESSAGE_PARSE_ERROR
U_MISMATCHED_SEGMENT_DELIMITERS
U_MISPLACED_ANCHOR_START
U_MISPLACED_COMPOUND_FILTER
U_MISPLACED_CURSOR_OFFSET
U_MISPLACED_QUANTIFIER
U_MISSING_OPERATOR
U_MISSING_RESOURCE_ERROR
U_MISSING_SEGMENT_CLOSE
U_MULTIPLE_ANTE_CONTEXTS
U_MULTIPLE_COMPOUND_FILTERS
U_MULTIPLE_CURSORS
U_MULTIPLE_DECIMAL_SEPARATORS
U_MULTIPLE_DECIMAL_SEPERATORS
U_MULTIPLE_EXPONENTIAL_SYMBOLS
U_MULTIPLE_PAD_SPECIFIERS
U_MULTIPLE_PERCENT_SYMBOLS
U_MULTIPLE_PERMILL_SYMBOLS
U_MULTIPLE_POST_CONTEXTS
U_NO_SPACE_AVAILABLE
U_NO_WRITE_PERMISSION
U_PARSE_ERROR
U_PARSE_ERROR_LIMIT
U_PARSE_ERROR_START
U_PATTERN_SYNTAX_ERROR
U_PRIMARY_TOO_LONG_ERROR
U_REGEX_BAD_ESCAPE_SEQUENCE
U_REGEX_BAD_INTERVAL
U_REGEX_ERROR_LIMIT
U_REGEX_ERROR_START
U_REGEX_INTERNAL_ERROR
U_REGEX_INVALID_BACK_REF
U_REGEX_INVALID_FLAG
U_REGEX_INVALID_STATE
U_REGEX_LOOK_BEHIND_LIMIT
U_REGEX_MAX_LT_MIN
U_REGEX_MISMATCHED_PAREN
U_REGEX_NUMBER_TOO_BIG
U_REGEX_PROPERTY_SYNTAX
U_REGEX_RULE_SYNTAX
U_REGEX_SET_CONTAINS_STRING
U_REGEX_UNIMPLEMENTED
U_RESOURCE_TYPE_MISMATCH
U_RULE_MASK_ERROR
U_SAFECLONE_ALLOCATED_WARNING
U_SORT_KEY_TOO_SHORT_WARNING
U_STANDARD_ERROR_LIMIT
U_STATE_OLD_WARNING
U_STATE_TOO_OLD_ERROR
U_STRING_NOT_TERMINATED_WARNING
U_STRINGPREP_CHECK_BIDI_ERROR
U_STRINGPREP_PROHIBITED_ERROR
U_STRINGPREP_UNASSIGNED_ERROR
U_TOO_MANY_ALIASES_ERROR
U_TRAILING_BACKSLASH
U_TRUNCATED_CHAR_FOUND
U_UNCLOSED_SEGMENT
U_UNDEFINED_SEGMENT_REFERENCE
U_UNDEFINED_VARIABLE
U_UNEXPECTED_TOKEN
U_UNMATCHED_BRACES
U_UNQUOTED_SPECIAL
U_UNSUPPORTED_ATTRIBUTE
U_UNSUPPORTED_ERROR
U_UNSUPPORTED_ESCAPE_SEQUENCE
U_UNSUPPORTED_PROPERTY
U_UNTERMINATED_QUOTE
U_USELESS_COLLATOR_ERROR
U_USING_DEFAULT_WARNING
U_USING_FALLBACK_WARNING
U_VARIABLE_RANGE_EXHAUSTED
U_VARIABLE_RANGE_OVERLAP
U_ZERO_ERROR
MB_OVERLOAD_MAIL
MB_OVERLOAD_STRING
MB_OVERLOAD_REGEX
MB_CASE_UPPER
MB_CASE_LOWER
MB_CASE_TITLE
MB_CASE_FOLD
MB_CASE_LOWER_SIMPLE
MB_CASE_UPPER_SIMPLE
MB_CASE_TITLE_SIMPLE
MB_CASE_FOLD_SIMPLE
MB_ONIGURUMA_VERSION
MHASH_ADLER32
MHASH_CRC32
MHASH_CRC32B
MHASH_CRC32C
MHASH_FNV132
MHASH_FNV1A32
MHASH_FNV164
MHASH_FNV1A64
MHASH_GOST
MHASH_HAVAL128
MHASH_HAVAL160
MHASH_HAVAL192
MHASH_HAVAL224
MHASH_HAVAL256
MHASH_JOAAT
MHASH_MD2
MHASH_MD4
MHASH_MD5
MHASH_MURMUR3A
MHASH_MURMUR3C
MHASH_MURMUR3F
MHASH_RIPEMD128
MHASH_RIPEMD160
MHASH_RIPEMD256
MHASH_RIPEMD320
MHASH_SHA1
MHASH_SHA224
MHASH_SHA256
MHASH_SHA384
MHASH_SHA512
MHASH_SNEFRU256
MHASH_TIGER
MHASH_TIGER128
MHASH_TIGER160
MHASH_WHIRLPOOL
MHASH_XXH32
MHASH_XXH64
MHASH_XXH3
MHASH_XXH128
WNOHANG
WUNTRACED
WCONTINUED
WEXITED
WSTOPPED
WNOWAIT
SIG_IGN
SIG_DFL
SIG_ERR
SIGHUP
SIGINFO
SIGINT
SIGQUIT
SIGILL
SIGTRAP
SIGABRT
SIGIOT
SIGBUS
SIGFPE
SIGKILL
SIGUSR1
SIGSEGV
SIGUSR2
SIGPIPE
SIGALRM
SIGTERM
SIGSTKFLT
SIGCLD
SIGCHLD
SIGCONT
SIGSTOP
SIGTSTP
SIGTTIN
SIGTTOU
SIGURG
SIGXCPU
SIGXFSZ
SIGVTALRM
SIGPROF
SIGWINCH
SIGPOLL
SIGIO
SIGPWR
SIGSYS
SIGBABY
SIGRTMIN
SIGRTMAX
SIG_BLOCK
SIG_UNBLOCK
SIG_SETMASK
SIGCKPT
SIGCKPTEXIT
SI_USER
SI_NOINFO
SI_KERNEL
SI_QUEUE
SI_TIMER
SI_MSGGQ
SI_ASYNCIO
SI_SIGIO
SI_TKILL
SI_MESGQ
CLD_EXITED
CLD_KILLED
CLD_DUMPED
CLD_TRAPPED
CLD_STOPPED
CLD_CONTINUED
TRAP_BRKPT
TRAP_TRACE
POLL_IN
POLL_OUT
POLL_MSG
POLL_ERR
POLL_PRI
POLL_HUP
ILL_ILLOPC
ILL_ILLOPN
ILL_ILLADR
ILL_ILLTRP
ILL_PRVOPC
ILL_PRVREG
ILL_COPROC
ILL_BADSTK
FPE_INTDIV
FPE_INTOVF
FPE_FLTDIV
FPE_FLTOVF
FPE_FLTUND
FPE_FLTRES
FPE_FLTINV
FPE_FLTSUB
SEGV_MAPERR
SEGV_ACCERR
BUS_ADRALN
BUS_ADRERR
BUS_OBJERR
CLONE_NEWNS
CLONE_NEWIPC
CLONE_NEWUTS
CLONE_NEWNET
CLONE_NEWPID
CLONE_NEWUSER
CLONE_NEWCGROUP
PRIO_PGRP
PRIO_USER
PRIO_PROCESS
PRIO_DARWIN_BG
PRIO_DARWIN_THREAD
PCNTL_E2BIG
PCNTL_EACCES
PCNTL_EAGAIN
PCNTL_ECAPMODE
PCNTL_ECHILD
PCNTL_EFAULT
PCNTL_EINTR
PCNTL_EINVAL
PCNTL_EIO
PCNTL_EISDIR
PCNTL_ELIBBAD
PCNTL_ELOOP
PCNTL_EMFILE
PCNTL_ENAMETOOLONG
PCNTL_ENFILE
PCNTL_ENOENT
PCNTL_ENOEXEC
PCNTL_ENOMEM
PCNTL_ENOSPC
PCNTL_ENOTDIR
PCNTL_EPERM
PCNTL_ESRCH
PCNTL_ETXTBSY
PCNTL_EUSERS
FORK_NOSIGCHLD
FORK_WAITPID
RFCFDG
RFFDG
RFLINUXTHPN
RFNOWAIT
RFPROC
RFTHREAD
RFTSIGZMB
P_ALL
P_PID
P_PGID
P_PIDFD
P_UID
P_GID
P_SID
P_JAILID
PDO::PARAM_BOOL
PDO::PARAM_NULL
PDO::PARAM_INT
PDO::PARAM_STR
PDO::PARAM_STR_NATL
PDO::PARAM_STR_CHAR
PDO::PARAM_LOB
PDO::PARAM_STMT
PDO::PARAM_INPUT_OUTPUT
PDO::FETCH_DEFAULT
PDO::FETCH_LAZY
PDO::FETCH_ASSOC
PDO::FETCH_NAMED
PDO::FETCH_NUM
PDO::FETCH_BOTH
PDO::FETCH_OBJ
PDO::FETCH_BOUND
PDO::FETCH_COLUMN
PDO::FETCH_CLASS
PDO::FETCH_INTO
PDO::FETCH_FUNC
PDO::FETCH_GROUP
PDO::FETCH_UNIQUE
PDO::FETCH_KEY_PAIR
PDO::FETCH_CLASSTYPE
PDO::FETCH_SERIALIZE
PDO::FETCH_PROPS_LATE
PDO::ATTR_AUTOCOMMIT
PDO::ATTR_PREFETCH
PDO::ATTR_TIMEOUT
PDO::ATTR_ERRMODE
PDO::ATTR_SERVER_VERSION
PDO::ATTR_CLIENT_VERSION
PDO::ATTR_SERVER_INFO
PDO::ATTR_CONNECTION_STATUS
PDO::ATTR_CASE
PDO::ATTR_CURSOR_NAME
PDO::ATTR_CURSOR
PDO::ATTR_DRIVER_NAME
PDO::ATTR_ORACLE_NULLS
PDO::ATTR_PERSISTENT
PDO::ATTR_STATEMENT_CLASS
PDO::ATTR_FETCH_CATALOG_NAMES
PDO::ATTR_FETCH_TABLE_NAMES
PDO::ATTR_STRINGIFY_FETCHES
PDO::ATTR_MAX_COLUMN_LEN
PDO::ATTR_DEFAULT_FETCH_MODE
PDO::ATTR_EMULATE_PREPARES
PDO::ATTR_DEFAULT_STR_PARAM
PDO::ERRMODE_SILENT
PDO::ERRMODE_WARNING
PDO::ERRMODE_EXCEPTION
PDO::CASE_NATURAL
PDO::CASE_LOWER
PDO::CASE_UPPER
PDO::NULL_NATURAL
PDO::NULL_EMPTY_STRING
PDO::NULL_TO_STRING
PDO::FETCH_ORI_NEXT
PDO::FETCH_ORI_PRIOR
PDO::FETCH_ORI_FIRST
PDO::FETCH_ORI_LAST
PDO::FETCH_ORI_ABS
PDO::FETCH_ORI_REL
PDO::CURSOR_FWDONLY
PDO::CURSOR_SCROLL
PDO::ERR_NONE
PDO::PARAM_EVT_ALLOC
PDO::PARAM_EVT_FREE
PDO::PARAM_EVT_EXEC_PRE
PDO::PARAM_EVT_EXEC_POST
PDO::PARAM_EVT_FETCH_PRE
PDO::PARAM_EVT_FETCH_POST
PDO::PARAM_EVT_NORMALIZE
PDO::SQLITE_DETERMINISTIC
Phar::NONE
Phar::COMPRESSED
Phar::GZ
Phar::BZ2
Phar::PHAR
Phar::TAR
Phar::ZIP
Phar::MD5
Phar::SHA1
Phar::SHA256
Phar::SHA512
Phar::OPENSSL
Phar::OPENSSL_SHA256
Phar::OPENSSL_SHA512
Phar::PHP
Phar::PHPS
PHPDBG_VERSION
PHPDBG_FILE
PHPDBG_METHOD
PHPDBG_LINENO
PHPDBG_FUNC
PHPDBG_COLOR_PROMPT
PHPDBG_COLOR_NOTICE
PHPDBG_COLOR_ERROR
POSIX_F_OK
POSIX_R_OK
POSIX_W_OK
POSIX_X_OK
POSIX_S_IFBLK
POSIX_S_IFCHR
POSIX_S_IFIFO
POSIX_S_IFREG
POSIX_S_IFSOCK
POSIX_RLIMIT_AS
POSIX_RLIMIT_CORE
POSIX_RLIMIT_CPU
POSIX_RLIMIT_DATA
POSIX_RLIMIT_FSIZE
POSIX_RLIMIT_LOCKS
POSIX_RLIMIT_MEMLOCK
POSIX_RLIMIT_MSGQUEUE
POSIX_RLIMIT_NICE
POSIX_RLIMIT_NOFILE
POSIX_RLIMIT_NPROC
POSIX_RLIMIT_RSS
POSIX_RLIMIT_RTPRIO
POSIX_RLIMIT_RTTIME
POSIX_RLIMIT_SIGPENDING
POSIX_RLIMIT_STACK
POSIX_RLIMIT_INFINITY
POSIX_RLIMIT_KQUEUES
POSIX_RLIMIT_NPTS
POSIX_PC_LINK_MAX
POSIX_PC_MAX_CANON
POSIX_PC_MAX_INPUT
POSIX_PC_NAME_MAX
POSIX_PC_PATH_MAX
POSIX_PC_PIPE_BUF
POSIX_PC_CHOWN_RESTRICTED
POSIX_PC_NO_TRUNC
POSIX_PC_ALLOC_SIZE_MIN
POSIX_PC_ALLOC_SYMLINK_MAX
POSIX_PC_SYMLINK_MAX
POSIX_SC_ARG_MAX
POSIX_SC_PAGESIZE
POSIX_SC_NPROCESSORS_CONF
POSIX_SC_NPROCESSORS_ONLN
POSIX_SC_CHILD_MAX
POSIX_SC_CLK_TCK
MSG_IPC_NOWAIT
MSG_EAGAIN
MSG_ENOMSG
MSG_NOERROR
MSG_EXCEPT
SID
PHP_SESSION_DISABLED
PHP_SESSION_NONE
PHP_SESSION_ACTIVE
AF_UNIX
AF_INET
AF_INET6
AF_DIVERT
SOCK_STREAM
SOCK_DGRAM
SOCK_RAW
SOCK_SEQPACKET
SOCK_RDM
SOCK_CONN_DGRAM
SOCK_DCCP
SOCK_NONBLOCK
SOCK_CLOEXEC
MSG_OOB
MSG_WAITALL
MSG_PEEK
MSG_DONTROUTE
MSG_EOR
MSG_EOF
MSG_ZEROCOPY
SO_DEBUG
SO_REUSEADDR
SO_REUSEPORT
SO_KEEPALIVE
SO_DONTROUTE
SO_LINGER
SO_BROADCAST
SO_OOBINLINE
SO_SNDBUF
SO_RCVBUF
SO_SNDLOWAT
SO_RCVLOWAT
SO_SNDTIMEO
SO_RCVTIMEO
SO_TYPE
SO_ERROR
SO_ZEROCOPY
TCP_NODELAY
TCP_KEEPCNT
TCP_KEEPIDLE
TCP_KEEPINTVL
TCP_KEEPALIVE
TCP_NOTSENT_LOWAT
SO_MARK
SO_USER_COOKIE
SO_RTABLE
SO_ACCEPTFILTER
SO_DONTTRUNC
SO_WANTMORE
SO_INCOMING_CPU
SO_MEMINFO
SO_BPF_EXTENSIONS
SO_SETFIB
SO_ATTACH_REUSEPORT_CBPF
SO_DETACH_BPF
SO_DETACH_FILTER
SO_RERROR
SO_ZEROIZE
SO_SPLICE
SO_REUSEPORT_LB
SOL_FILTER
SOL_UDPLITE
UDPLITE_RECV_CSCOV
UDPLITE_SEND_CSCOV
TCP_DEFER_ACCEPT
TCP_CONGESTION
TCP_QUICKACK
TCP_REPAIR
TCP_SYNCNT
IP_DONTFRAG
IP_MTU_DISCOVER
IP_PMTUDISC_DO
IP_PMTUDISC_DONT
IP_PMTUDISC_WANT
IP_PMTUDISC_PROBE
IP_PMTUDISC_INTERFACE
IP_PMTUDISC_OMIT
IP_BIND_ADDRESS_NO_PORT
SOL_SOCKET
PHP_NORMAL_READ
PHP_BINARY_READ
SOL_TCP
SOL_UDP
SOCKET_EINTR
SOCKET_EBADF
SOCKET_EACCES
SOCKET_EFAULT
SOCKET_EINVAL
SOCKET_EMFILE
SOCKET_ENAMETOOLONG
SOCKET_ENOTEMPTY
SOCKET_ELOOP
SOCKET_EWOULDBLOCK
SOCKET_EREMOTE
SOCKET_EUSERS
SOCKET_ENOTSOCK
SOCKET_EDESTADDRREQ
SOCKET_EMSGSIZE
SOCKET_EPROTOTYPE
SOCKET_EPROTONOSUPPORT
SOCKET_ESOCKTNOSUPPORT
SOCKET_EOPNOTSUPP
SOCKET_EPFNOSUPPORT
SOCKET_EAFNOSUPPORT
SOCKET_EADDRNOTAVAIL
SOCKET_ENETDOWN
SOCKET_ENETUNREACH
SOCKET_ENETRESET
SOCKET_ECONNABORTED
SOCKET_ECONNRESET
SOCKET_ENOBUFS
SOCKET_EISCONN
SOCKET_ENOTCONN
SOCKET_ESHUTDOWN
SOCKET_ETIMEDOUT
SOCKET_ECONNREFUSED
SOCKET_EHOSTDOWN
SOCKET_EHOSTUNREACH
SOCKET_EALREADY
SOCKET_EINPROGRESS
SOCKET_ENOPROTOOPT
SOCKET_EADDRINUSE
SOCKET_ETOOMYREFS
SOCKET_EPROCLIM
SOCKET_EDUOT
SOCKET_ESTALE
SOCKET_EDISCON
SOCKET_SYSNOTREADY
SOCKET_VERNOTSUPPORTED
SOCKET_NOTINITIALISED
SOCKET_HOST_NOT_FOUND
SOCKET_TRY_AGAIN
SOCKET_NO_RECOVERY
SOCKET_NO_DATA
SOCKET_NO_ADDRESS
SOCKET_EPERM
SOCKET_ENOENT
SOCKET_EIO
SOCKET_ENXIO
SOCKET_E2BIG
SOCKET_EAGAIN
SOCKET_ENOMEM
SOCKET_ENOTBLK
SOCKET_EBUSY
SOCKET_EEXIST
SOCKET_EXDEV
SOCKET_ENODEV
SOCKET_ENOTDIR
SOCKET_EISDIR
SOCKET_ENFILE
SOCKET_ENOTTY
SOCKET_ENOSPC
SOCKET_ESPIPE
SOCKET_EROFS
SOCKET_EMLINK
SOCKET_EPIPE
SOCKET_ENOLCK
SOCKET_ENOSYS
SOCKET_ENOMSG
SOCKET_EIDRM
SOCKET_ECHRNG
SOCKET_EL2NSYNC
SOCKET_EL3HLT
SOCKET_EL3RST
SOCKET_ELNRNG
SOCKET_EUNATCH
SOCKET_ENOCSI
SOCKET_EL2HLT
SOCKET_EBADE
SOCKET_EBADR
SOCKET_EXFULL
SOCKET_ENOANO
SOCKET_EBADRQC
SOCKET_EBADSLT
SOCKET_ENOSTR
SOCKET_ENODATA
SOCKET_ETIME
SOCKET_ENOSR
SOCKET_ENONET
SOCKET_ENOLINK
SOCKET_EADV
SOCKET_ESRMNT
SOCKET_ECOMM
SOCKET_EPROTO
SOCKET_EMULTIHOP
SOCKET_EBADMSG
SOCKET_ENOTUNIQ
SOCKET_EBADFD
SOCKET_EREMCHG
SOCKET_ERESTART
SOCKET_ESTRPIPE
SOCKET_EPROTOOPT
SOCKET_ADDRINUSE
SOCKET_ETOOMANYREFS
SOCKET_EISNAM
SOCKET_EREMOTEIO
SOCKET_EDQUOT
SOCKET_ENOMEDIUM
SOCKET_EMEDIUMTYPE
SCM_RIGHTS
SCM_CREDENTIALS
SCM_CREDS
SCM_CREDS2
LOCAL_CREDS
LOCAL_CREDS_PERSISTENT
SKF_AD_OFF
SKF_AD_PROTOCOL
SKF_AD_PKTTYPE
SKF_AD_IFINDEX
SKF_AD_NLATTR
SKF_AD_NLATTR_NEST
SKF_AD_MARK
SKF_AD_QUEUE
SKF_AD_HATYPE
SKF_AD_RXHASH
SKF_AD_CPU
SKF_AD_ALU_XOR_X
SKF_AD_VLAN_TAG
SKF_AD_VLAN_TAG_PRESENT
SKF_AD_PAY_OFFSET
SKF_AD_RANDOM
SKF_AD_VLAN_TPID
SKF_AD_MAX
AI_ADDRCONFIG
AI_ALL
AI_CANONIDN
AI_CANONNAME
AI_IDN
AI_NUMERICHOST
AI_NUMERICSERV
AI_PASSIVE
AI_V4MAPPED
FIL_ATTACH
FIL_DETACH
IPPROTO_IP
IPPROTO_IPV6
IPV6_HOPLIMIT
IPV6_MULTICAST_HOPS
IPV6_MULTICAST_IF
IPV6_MULTICAST_LOOP
IPV6_PKTINFO
IPV6_RECVHOPLIMIT
IPV6_RECVPKTINFO
IPV6_RECVTCLASS
IPV6_TCLASS
IPV6_UNICAST_HOPS
IPV6_V6ONLY
IP_MULTICAST_IF
IP_MULTICAST_LOOP
IP_MULTICAST_TTL
IP_PORTRANGE
IP_PORTRANGE_DEFAULT
IP_PORTRANGE_HIGH
IP_PORTRANGE_LOW
MCAST_BLOCK_SOURCE
MCAST_JOIN_GROUP
MCAST_JOIN_SOURCE_GROUP
MCAST_LEAVE_GROUP
MCAST_LEAVE_SOURCE_GROUP
MCAST_UNBLOCK_SOURCE
MSG_CMSG_CLOEXEC
MSG_CONFIRM
MSG_CTRUNC
MSG_DONTWAIT
MSG_ERRQUEUE
MSG_MORE
MSG_NOSIGNAL
MSG_TRUNC
MSG_WAITFORONE
SOL_LOCAL
SOMAXCONN
SO_BINDTODEVICE
SO_FAMILY
SO_LABEL
SO_LISTENQLEN
SO_LISTENQLIMIT
SO_PASSCRED
SO_PEERLABEL
SO_EXCLUSIVEADDRUSE
SO_EXCLBIND
SO_NOSIGPIPE
SO_LINGER_SEC
SO_BINDTOIFINDEX
SQLITE3_ASSOC
SQLITE3_NUM
SQLITE3_BOTH
SQLITE3_INTEGER
SQLITE3_FLOAT
SQLITE3_TEXT
SQLITE3_BLOB
SQLITE3_NULL
SQLITE3_OPEN_READONLY
SQLITE3_OPEN_READWRITE
SQLITE3_OPEN_CREATE
SQLITE3_DETERMINISTIC
TOKEN_PARSE
FORCE_GZIP
FORCE_DEFLATE
ZLIB_ENCODING_RAW
ZLIB_ENCODING_DEFLATE
ZLIB_ENCODING_GZIP
ZLIB_FILTERED
ZLIB_HUFFMAN_ONLY
ZLIB_FIXED
ZLIB_RLE
ZLIB_DEFAULT_STRATEGY
ZLIB_BLOCK
ZLIB_NO_FLUSH
ZLIB_PARTIAL_FLUSH
ZLIB_SYNC_FLUSH
ZLIB_FULL_FLUSH
ZLIB_FINISH
ZLIB_VERSION
ZLIB_VERNUM
ZLIB_OK
ZLIB_STREAM_END
ZLIB_NEED_DICT
ZLIB_ERRNO
ZLIB_STREAM_ERROR
ZLIB_DATA_ERROR
ZLIB_MEM_ERROR
ZLIB_BUF_ERROR
ZLIB_VERSION_ERROR
CURLALTSVC_H1
CURLALTSVC_H2
CURLALTSVC_H3
CURLALTSVC_READONLYFILE
CURLAUTH_ANY
CURLAUTH_ANYSAFE
CURLAUTH_AWS_SIGV4
CURLAUTH_BASIC
CURLAUTH_BEARER
CURLAUTH_DIGEST
CURLAUTH_DIGEST_IE
CURLAUTH_GSSAPI
CURLAUTH_GSSNEGOTIATE
CURLAUTH_NEGOTIATE
CURLAUTH_NONE
CURLAUTH_NTLM
CURLAUTH_NTLM_WB
CURLAUTH_ONLY
CURLFTPAUTH_DEFAULT
CURLFTPAUTH_SSL
CURLFTPAUTH_TLS
CURLFTPMETHOD_DEFAULT
CURLFTPMETHOD_MULTICWD
CURLFTPMETHOD_NOCWD
CURLFTPMETHOD_SINGLECWD
CURLFTPSSL_ALL
CURLFTPSSL_CCC_ACTIVE
CURLFTPSSL_CCC_NONE
CURLFTPSSL_CCC_PASSIVE
CURLFTPSSL_CONTROL
CURLFTPSSL_NONE
CURLFTPSSL_TRY
CURLFTP_CREATE_DIR
CURLFTP_CREATE_DIR_NONE
CURLFTP_CREATE_DIR_RETRY
CURLGSSAPI_DELEGATION_FLAG
CURLGSSAPI_DELEGATION_POLICY_FLAG
CURLHEADER_SEPARATE
CURLHEADER_UNIFIED
CURLHSTS_ENABLE
CURLHSTS_READONLYFILE
CURLKHMATCH_LAST
CURLKHMATCH_MISMATCH
CURLKHMATCH_MISSING
CURLKHMATCH_OK
CURLMIMEOPT_FORMESCAPE
CURLMSG_DONE
CURLPIPE_HTTP1
CURLPIPE_MULTIPLEX
CURLPIPE_NOTHING
CURLPROXY_HTTP
CURLPROXY_HTTPS
CURLPROXY_HTTP_1_0
CURLPROXY_SOCKS4
CURLPROXY_SOCKS4A
CURLPROXY_SOCKS5
CURLPROXY_SOCKS5_HOSTNAME
CURLPX_BAD_ADDRESS_TYPE
CURLPX_BAD_VERSION
CURLPX_CLOSED
CURLPX_GSSAPI
CURLPX_GSSAPI_PERMSG
CURLPX_GSSAPI_PROTECTION
CURLPX_IDENTD
CURLPX_IDENTD_DIFFER
CURLPX_LONG_HOSTNAME
CURLPX_LONG_PASSWD
CURLPX_LONG_USER
CURLPX_NO_AUTH
CURLPX_OK
CURLPX_RECV_ADDRESS
CURLPX_RECV_AUTH
CURLPX_RECV_CONNECT
CURLPX_RECV_REQACK
CURLPX_REPLY_ADDRESS_TYPE_NOT_SUPPORTED
CURLPX_REPLY_COMMAND_NOT_SUPPORTED
CURLPX_REPLY_CONNECTION_REFUSED
CURLPX_REPLY_GENERAL_SERVER_FAILURE
CURLPX_REPLY_HOST_UNREACHABLE
CURLPX_REPLY_NETWORK_UNREACHABLE
CURLPX_REPLY_NOT_ALLOWED
CURLPX_REPLY_TTL_EXPIRED
CURLPX_REPLY_UNASSIGNED
CURLPX_REQUEST_FAILED
CURLPX_RESOLVE_HOST
CURLPX_SEND_AUTH
CURLPX_SEND_CONNECT
CURLPX_SEND_REQUEST
CURLPX_UNKNOWN_FAIL
CURLPX_UNKNOWN_MODE
CURLPX_USER_REJECTED
CURLSSH_AUTH_AGENT
CURLSSH_AUTH_ANY
CURLSSH_AUTH_DEFAULT
CURLSSH_AUTH_GSSAPI
CURLSSH_AUTH_HOST
CURLSSH_AUTH_KEYBOARD
CURLSSH_AUTH_NONE
CURLSSH_AUTH_PASSWORD
CURLSSH_AUTH_PUBLICKEY
CURLSSLOPT_ALLOW_BEAST
CURLSSLOPT_AUTO_CLIENT_CERT
CURLSSLOPT_NATIVE_CA
CURLSSLOPT_NO_PARTIALCHAIN
CURLSSLOPT_NO_REVOKE
CURLSSLOPT_REVOKE_BEST_EFFORT
CURLUSESSL_ALL
CURLUSESSL_CONTROL
CURLUSESSL_NONE
CURLUSESSL_TRY
CURLVERSION_NOW
CURLWS_RAW_MODE
CURL_FNMATCHFUNC_FAIL
CURL_FNMATCHFUNC_MATCH
CURL_FNMATCHFUNC_NOMATCH
CURL_HTTP_VERSION_1_0
CURL_HTTP_VERSION_1_1
CURL_HTTP_VERSION_2
CURL_HTTP_VERSION_2TLS
CURL_HTTP_VERSION_2_0
CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE
CURL_HTTP_VERSION_3
CURL_HTTP_VERSION_3ONLY
CURL_HTTP_VERSION_NONE
CURL_IPRESOLVE_V4
CURL_IPRESOLVE_V6
CURL_IPRESOLVE_WHATEVER
CURL_MAX_READ_SIZE
CURL_NETRC_IGNORED
CURL_NETRC_OPTIONAL
CURL_NETRC_REQUIRED
CURL_PUSH_DENY
CURL_PUSH_OK
CURL_READFUNC_PAUSE
CURL_REDIR_POST_301
CURL_REDIR_POST_302
CURL_REDIR_POST_303
CURL_REDIR_POST_ALL
CURL_RTSPREQ_ANNOUNCE
CURL_RTSPREQ_DESCRIBE
CURL_RTSPREQ_GET_PARAMETER
CURL_RTSPREQ_OPTIONS
CURL_RTSPREQ_PAUSE
CURL_RTSPREQ_PLAY
CURL_RTSPREQ_RECEIVE
CURL_RTSPREQ_RECORD
CURL_RTSPREQ_SETUP
CURL_RTSPREQ_SET_PARAMETER
CURL_RTSPREQ_TEARDOWN
CURL_SSLVERSION_DEFAULT
CURL_SSLVERSION_MAX_DEFAULT
CURL_SSLVERSION_MAX_NONE
CURL_SSLVERSION_MAX_TLSv1_0
CURL_SSLVERSION_MAX_TLSv1_1
CURL_SSLVERSION_MAX_TLSv1_2
CURL_SSLVERSION_MAX_TLSv1_3
CURL_SSLVERSION_SSLv2
CURL_SSLVERSION_SSLv3
CURL_SSLVERSION_TLSv1
CURL_SSLVERSION_TLSv1_0
CURL_SSLVERSION_TLSv1_1
CURL_SSLVERSION_TLSv1_2
CURL_SSLVERSION_TLSv1_3
CURL_TIMECOND_IFMODSINCE
CURL_TIMECOND_IFUNMODSINCE
CURL_TIMECOND_LASTMOD
CURL_TIMECOND_NONE
CURL_TLSAUTH_SRP
CURL_VERSION_ALTSVC
CURL_VERSION_ASYNCHDNS
CURL_VERSION_BROTLI
CURL_VERSION_CONV
CURL_VERSION_CURLDEBUG
CURL_VERSION_DEBUG
CURL_VERSION_GSASL
CURL_VERSION_GSSAPI
CURL_VERSION_GSSNEGOTIATE
CURL_VERSION_HSTS
CURL_VERSION_HTTP2
CURL_VERSION_HTTP3
CURL_VERSION_HTTPS_PROXY
CURL_VERSION_IDN
CURL_VERSION_IPV6
CURL_VERSION_KERBEROS4
CURL_VERSION_KERBEROS5
CURL_VERSION_LARGEFILE
CURL_VERSION_LIBZ
CURL_VERSION_MULTI_SSL
CURL_VERSION_NTLM
CURL_VERSION_NTLM_WB
CURL_VERSION_PSL
CURL_VERSION_SPNEGO
CURL_VERSION_SSL
CURL_VERSION_SSPI
CURL_VERSION_TLSAUTH_SRP
CURL_VERSION_UNICODE
CURL_VERSION_UNIX_SOCKETS
CURL_VERSION_ZSTD
CURL_WRITEFUNC_PAUSE
CURL_PREREQFUNC_OK
CURL_PREREQFUNC_ABORT
XML_ELEMENT_NODE
XML_ATTRIBUTE_NODE
XML_TEXT_NODE
XML_CDATA_SECTION_NODE
XML_ENTITY_REF_NODE
XML_ENTITY_NODE
XML_PI_NODE
XML_COMMENT_NODE
XML_DOCUMENT_NODE
XML_DOCUMENT_TYPE_NODE
XML_DOCUMENT_FRAG_NODE
XML_NOTATION_NODE
XML_HTML_DOCUMENT_NODE
XML_DTD_NODE
XML_ELEMENT_DECL_NODE
XML_ATTRIBUTE_DECL_NODE
XML_ENTITY_DECL_NODE
XML_NAMESPACE_DECL_NODE
XML_ATTRIBUTE_CDATA
XML_ATTRIBUTE_ID
XML_ATTRIBUTE_IDREF
XML_ATTRIBUTE_IDREFS
XML_ATTRIBUTE_ENTITY
XML_ATTRIBUTE_NMTOKEN
XML_ATTRIBUTE_NMTOKENS
XML_ATTRIBUTE_ENUMERATION
XML_ATTRIBUTE_NOTATION
XML_LOCAL_NAMESPACE
Dom\HTML_NO_DEFAULT_NS
DOM_PHP_ERR
DOM_INDEX_SIZE_ERR
DOMSTRING_SIZE_ERR
DOM_HIERARCHY_REQUEST_ERR
DOM_WRONG_DOCUMENT_ERR
DOM_INVALID_CHARACTER_ERR
DOM_NO_DATA_ALLOWED_ERR
DOM_NO_MODIFICATION_ALLOWED_ERR
DOM_NOT_FOUND_ERR
DOM_NOT_SUPPORTED_ERR
DOM_INUSE_ATTRIBUTE_ERR
DOM_INVALID_STATE_ERR
DOM_SYNTAX_ERR
DOM_INVALID_MODIFICATION_ERR
DOM_NAMESPACE_ERR
DOM_INVALID_ACCESS_ERR
DOM_VALIDATION_ERR
LIBENCHANT_VERSION
ENCHANT_MYSPELL
ENCHANT_ISPELL
GMP_ROUND_ZERO
GMP_ROUND_PLUSINF
GMP_ROUND_MINUSINF
GMP_MSW_FIRST
GMP_LSW_FIRST
GMP_LITTLE_ENDIAN
GMP_BIG_ENDIAN
GMP_NATIVE_ENDIAN
GMP_VERSION
GMP_MPIR_VERSION
LDAP_DEREF_NEVER
LDAP_DEREF_SEARCHING
LDAP_DEREF_FINDING
LDAP_DEREF_ALWAYS
LDAP_OPT_DEREF
LDAP_OPT_SIZELIMIT
LDAP_OPT_TIMELIMIT
LDAP_OPT_NETWORK_TIMEOUT
LDAP_OPT_PROTOCOL_VERSION
LDAP_OPT_ERROR_NUMBER
LDAP_OPT_REFERRALS
LDAP_OPT_RESTART
LDAP_OPT_HOST_NAME
LDAP_OPT_ERROR_STRING
LDAP_OPT_DIAGNOSTIC_MESSAGE
LDAP_OPT_MATCHED_DN
LDAP_OPT_SERVER_CONTROLS
LDAP_OPT_CLIENT_CONTROLS
LDAP_OPT_DEBUG_LEVEL
LDAP_OPT_X_KEEPALIVE_IDLE
LDAP_OPT_X_KEEPALIVE_PROBES
LDAP_OPT_X_KEEPALIVE_INTERVAL
LDAP_OPT_X_TLS_CACERTDIR
LDAP_OPT_X_TLS_CACERTFILE
LDAP_OPT_X_TLS_CERTFILE
LDAP_OPT_X_TLS_CIPHER_SUITE
LDAP_OPT_X_TLS_CRLCHECK
LDAP_OPT_X_TLS_CRLFILE
LDAP_OPT_X_TLS_DHFILE
LDAP_OPT_X_TLS_KEYFILE
LDAP_OPT_X_TLS_PROTOCOL_MIN
LDAP_OPT_X_TLS_RANDOM_FILE
LDAP_OPT_X_TLS_REQUIRE_CERT
GSLC_SSL_NO_AUTH
GSLC_SSL_ONEWAY_AUTH
GSLC_SSL_TWOWAY_AUTH
LDAP_EXOP_START_TLS
LDAP_EXOP_MODIFY_PASSWD
LDAP_EXOP_REFRESH
LDAP_EXOP_WHO_AM_I
LDAP_EXOP_TURN
LDAP_CONTROL_MANAGEDSAIT
LDAP_CONTROL_PROXY_AUTHZ
LDAP_CONTROL_SUBENTRIES
LDAP_CONTROL_VALUESRETURNFILTER
LDAP_CONTROL_ASSERT
LDAP_CONTROL_PRE_READ
LDAP_CONTROL_POST_READ
LDAP_CONTROL_SORTREQUEST
LDAP_CONTROL_SORTRESPONSE
LDAP_CONTROL_PAGEDRESULTS
LDAP_CONTROL_AUTHZID_REQUEST
LDAP_CONTROL_AUTHZID_RESPONSE
LDAP_CONTROL_SYNC
LDAP_CONTROL_SYNC_STATE
LDAP_CONTROL_SYNC_DONE
LDAP_CONTROL_DONTUSECOPY
LDAP_CONTROL_PASSWORDPOLICYREQUEST
LDAP_CONTROL_PASSWORDPOLICYRESPONSE
LDAP_CONTROL_X_INCREMENTAL_VALUES
LDAP_CONTROL_X_DOMAIN_SCOPE
LDAP_CONTROL_X_PERMISSIVE_MODIFY
LDAP_CONTROL_X_SEARCH_OPTIONS
LDAP_CONTROL_X_TREE_DELETE
LDAP_CONTROL_X_EXTENDED_DN
LDAP_CONTROL_VLVREQUEST
LDAP_CONTROL_VLVRESPONSE
LDAP_ESCAPE_DN
LDAP_ESCAPE_FILTER
LDAP_MODIFY_BATCH_ATTRIB
LDAP_MODIFY_BATCH_MODTYPE
LDAP_MODIFY_BATCH_VALUES
LDAP_MODIFY_BATCH_ADD
LDAP_MODIFY_BATCH_REMOVE
LDAP_MODIFY_BATCH_REMOVE_ALL
LDAP_MODIFY_BATCH_REPLACE
LDAP_OPT_TIMEOUT
LDAP_OPT_X_SASL_AUTHCID
LDAP_OPT_X_SASL_AUTHZID
LDAP_OPT_X_SASL_MECH
LDAP_OPT_X_SASL_NOCANON
LDAP_OPT_X_SASL_REALM
LDAP_OPT_X_SASL_USERNAME
LDAP_OPT_X_TLS_ALLOW
LDAP_OPT_X_TLS_DEMAND
LDAP_OPT_X_TLS_HARD
LDAP_OPT_X_TLS_NEVER
LDAP_OPT_X_TLS_TRY
LDAP_OPT_X_TLS_CRL_ALL
LDAP_OPT_X_TLS_CRL_NONE
LDAP_OPT_X_TLS_CRL_PEER
LDAP_OPT_X_TLS_PACKAGE
LDAP_OPT_X_TLS_PROTOCOL_SSL2
LDAP_OPT_X_TLS_PROTOCOL_SSL3
LDAP_OPT_X_TLS_PROTOCOL_TLS1_0
LDAP_OPT_X_TLS_PROTOCOL_TLS1_1
LDAP_OPT_X_TLS_PROTOCOL_TLS1_2
LIBXML_BIGLINES
LIBXML_COMPACT
LIBXML_DTDATTR
LIBXML_DTDLOAD
LIBXML_DTDVALID
LIBXML_HTML_NOIMPLIED
LIBXML_HTML_NODEFDTD
LIBXML_LOADED_VERSION
LIBXML_NOBLANKS
LIBXML_NOCDATA
LIBXML_NOEMPTYTAG
LIBXML_NOENT
LIBXML_NOERROR
LIBXML_NONET
LIBXML_NOWARNING
LIBXML_NOXMLDECL
LIBXML_NO_XXE
LIBXML_NSCLEAN
LIBXML_PARSEHUGE
LIBXML_PEDANTIC
LIBXML_RECOVER
LIBXML_XINCLUDE
LIBXML_ERR_ERROR
LIBXML_ERR_FATAL
LIBXML_ERR_NONE
LIBXML_ERR_WARNING
LIBXML_VERSION
LIBXML_DOTTED_VERSION
LIBXML_SCHEMA_CREATE
MYSQLI_READ_DEFAULT_GROUP
MYSQLI_READ_DEFAULT_FILE
MYSQLI_OPT_CAN_HANDLE_EXPIRED_PASSWORDS
MYSQLI_OPT_LOAD_DATA_LOCAL_DIR
MYSQLI_OPT_CONNECT_TIMEOUT
MYSQLI_OPT_READ_TIMEOUT
MYSQLI_OPT_LOCAL_INFILE
MYSQLI_OPT_INT_AND_FLOAT_NATIVE
MYSQLI_OPT_NET_CMD_BUFFER_SIZE
MYSQLI_OPT_NET_READ_BUFFER_SIZE
MYSQLI_OPT_SSL_VERIFY_SERVER_CERT
MYSQLI_INIT_COMMAND
MYSQLI_CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS
MYSQLI_CLIENT_FOUND_ROWS
MYSQLI_CLIENT_SSL_VERIFY_SERVER_CERT
MYSQLI_CLIENT_SSL
MYSQLI_CLIENT_COMPRESS
MYSQLI_CLIENT_INTERACTIVE
MYSQLI_CLIENT_IGNORE_SPACE
MYSQLI_CLIENT_NO_SCHEMA
MYSQLI_CLIENT_MULTI_QUERIES
MYSQLI_STORE_RESULT
MYSQLI_STORE_RESULT_COPY_DATA
MYSQLI_USE_RESULT
MYSQLI_ASSOC
MYSQLI_NUM
MYSQLI_BOTH
MYSQLI_NOT_NULL_FLAG
MYSQLI_PRI_KEY_FLAG
MYSQLI_UNIQUE_KEY_FLAG
MYSQLI_MULTIPLE_KEY_FLAG
MYSQLI_BLOB_FLAG
MYSQLI_UNSIGNED_FLAG
MYSQLI_ZEROFILL_FLAG
MYSQLI_AUTO_INCREMENT_FLAG
MYSQLI_TIMESTAMP_FLAG
MYSQLI_SET_FLAG
MYSQLI_NUM_FLAG
MYSQLI_PART_KEY_FLAG
MYSQLI_GROUP_FLAG
MYSQLI_NO_DEFAULT_VALUE_FLAG
MYSQLI_TYPE_DECIMAL
MYSQLI_TYPE_NEWDECIMAL
MYSQLI_TYPE_BIT
MYSQLI_TYPE_TINY
MYSQLI_TYPE_SHORT
MYSQLI_TYPE_LONG
MYSQLI_TYPE_FLOAT
MYSQLI_TYPE_DOUBLE
MYSQLI_TYPE_NULL
MYSQLI_TYPE_TIMESTAMP
MYSQLI_TYPE_LONGLONG
MYSQLI_TYPE_INT24
MYSQLI_TYPE_DATE
MYSQLI_TYPE_TIME
MYSQLI_TYPE_DATETIME
MYSQLI_TYPE_YEAR
MYSQLI_TYPE_NEWDATE
MYSQLI_TYPE_INTERVAL
MYSQLI_TYPE_ENUM
MYSQLI_TYPE_SET
MYSQLI_TYPE_TINY_BLOB
MYSQLI_TYPE_MEDIUM_BLOB
MYSQLI_TYPE_LONG_BLOB
MYSQLI_TYPE_BLOB
MYSQLI_TYPE_VAR_STRING
MYSQLI_TYPE_STRING
MYSQLI_TYPE_CHAR
MYSQLI_TYPE_GEOMETRY
MYSQLI_TYPE_JSON
MYSQLI_TYPE_VECTOR
MYSQLI_NEED_DATA
MYSQLI_ENUM_FLAG
MYSQLI_BINARY_FLAG
MYSQLI_CURSOR_TYPE_FOR_UPDATE
MYSQLI_CURSOR_TYPE_NO_CURSOR
MYSQLI_CURSOR_TYPE_READ_ONLY
MYSQLI_CURSOR_TYPE_SCROLLABLE
MYSQLI_STMT_ATTR_CURSOR_TYPE
MYSQLI_STMT_ATTR_PREFETCH_ROWS
MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH
MYSQLI_SET_CHARSET_NAME
MYSQLI_REPORT_INDEX
MYSQLI_REPORT_ERROR
MYSQLI_REPORT_STRICT
MYSQLI_REPORT_ALL
MYSQLI_REPORT_OFF
MYSQLI_DEBUG_TRACE_ENABLED
MYSQLI_SERVER_PUBLIC_KEY
MYSQLI_REFRESH_GRANT
MYSQLI_REFRESH_LOG
MYSQLI_REFRESH_TABLES
MYSQLI_REFRESH_HOSTS
MYSQLI_REFRESH_REPLICA
MYSQLI_REFRESH_STATUS
MYSQLI_REFRESH_THREADS
MYSQLI_REFRESH_SLAVE
MYSQLI_REFRESH_MASTER
MYSQLI_REFRESH_BACKUP_LOG
MYSQLI_TRANS_COR_AND_CHAIN
MYSQLI_TRANS_COR_AND_NO_CHAIN
MYSQLI_TRANS_COR_RELEASE
MYSQLI_TRANS_COR_NO_RELEASE
MYSQLI_TRANS_START_READ_ONLY
MYSQLI_TRANS_START_READ_WRITE
MYSQLI_TRANS_START_WITH_CONSISTENT_SNAPSHOT
MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT
MYSQLI_IS_MARIADB
MYSQLI_ASYNC
MYSQLI_ON_UPDATE_NOW_FLAG
X509_PURPOSE_SSL_CLIENT
X509_PURPOSE_SSL_SERVER
X509_PURPOSE_NS_SSL_SERVER
X509_PURPOSE_SMIME_SIGN
X509_PURPOSE_SMIME_ENCRYPT
X509_PURPOSE_CRL_SIGN
X509_PURPOSE_ANY
OPENSSL_PKCS1_PADDING
OPENSSL_SSLV23_PADDING
OPENSSL_NO_PADDING
OPENSSL_PKCS1_OAEP_PADDING
OPENSSL_KEYTYPE_RSA
OPENSSL_KEYTYPE_DSA
OPENSSL_KEYTYPE_DH
OPENSSL_KEYTYPE_EC
OPENSSL_KEYTYPE_X25519
OPENSSL_KEYTYPE_ED25519
OPENSSL_KEYTYPE_X448
OPENSSL_KEYTYPE_ED448
OPENSSL_ALGO_DSS1
OPENSSL_ALGO_SHA1
OPENSSL_ALGO_SHA224
OPENSSL_ALGO_SHA256
OPENSSL_ALGO_SHA384
OPENSSL_ALGO_SHA512
OPENSSL_ALGO_RMD160
OPENSSL_ALGO_MD5
OPENSSL_ALGO_MD4
OPENSSL_ALGO_MD2
OPENSSL_DEFAULT_STREAM_CIPHERS
OPENSSL_CIPHER_RC2_40
OPENSSL_CIPHER_RC2_128
OPENSSL_CIPHER_RC2_64
OPENSSL_CIPHER_DES
OPENSSL_CIPHER_3DES
OPENSSL_CIPHER_AES_128_CBC
OPENSSL_CIPHER_AES_192_CBC
OPENSSL_CIPHER_AES_256_CBC
OPENSSL_VERSION_TEXT
OPENSSL_VERSION_NUMBER
OPENSSL_TLSEXT_SERVER_NAME
OPENSSL_RAW_DATA
OPENSSL_DONT_ZERO_PAD_KEY
OPENSSL_ZERO_PADDING
OPENSSL_ENCODING_SMIME
OPENSSL_ENCODING_DER
OPENSSL_ENCODING_PEM
PKCS7_TEXT
PKCS7_BINARY
PKCS7_NOINTERN
PKCS7_NOVERIFY
PKCS7_NOCHAIN
PKCS7_NOCERTS
PKCS7_NOATTR
PKCS7_DETACHED
PKCS7_NOSIGS
PKCS7_NOOLDMIMETYPE
OPENSSL_CMS_TEXT
OPENSSL_CMS_BINARY
OPENSSL_CMS_NOINTERN
OPENSSL_CMS_NOVERIFY
OPENSSL_CMS_NOCERTS
OPENSSL_CMS_NOATTR
OPENSSL_CMS_DETACHED
OPENSSL_CMS_NOSIGS
OPENSSL_CMS_OLDMIMETYPE
PDO::FB_ATTR_DATE_FORMAT
PDO::FB_ATTR_TIME_FORMAT
PDO::FB_ATTR_TIMESTAMP_FORMAT
PDO::MYSQL_ATTR_USE_BUFFERED_QUERY
PDO::MYSQL_ATTR_LOCAL_INFILE
PDO::MYSQL_ATTR_LOCAL_INFILE_DIRECTORY
PDO::MYSQL_ATTR_INIT_COMMAND
PDO::MYSQL_ATTR_READ_DEFAULT_FILE
PDO::MYSQL_ATTR_READ_DEFAULT_GROUP
PDO::MYSQL_ATTR_MAX_BUFFER_SIZE
PDO::MYSQL_ATTR_DIRECT_QUERY
PDO::MYSQL_ATTR_FOUND_ROWS
PDO::MYSQL_ATTR_IGNORE_SPACE
PDO::MYSQL_ATTR_COMPRESS
PDO::MYSQL_ATTR_SERVER_PUBLIC_KEY
PDO::MYSQL_ATTR_SSL_CA
PDO::MYSQL_ATTR_SSL_CAPATH
PDO::MYSQL_ATTR_SSL_CERT
PDO::MYSQL_ATTR_SSL_CIPHER
PDO::MYSQL_ATTR_SSL_KEY
PDO::MYSQL_ATTR_SSL_VERIFY_SERVER_CERT
PDO::MYSQL_ATTR_MULTI_STATEMENTS
PDO_ODBC_TYPE
PDO::ODBC_ATTR_USE_CURSOR_LIBRARY
PDO::ODBC_SQL_USE_IF_NEEDED
PDO::ODBC_SQL_USE_DRIVER
PDO::ODBC_SQL_USE_ODBC
PDO::ODBC_ATTR_ASSUME_UTF8
PDO::PGSQL_ATTR_DISABLE_PREPARES
PGSQL_LIBPQ_VERSION
PGSQL_LIBPQ_VERSION_STR
PGSQL_ASSOC
PGSQL_NUM
PGSQL_BOTH
PGSQL_CONNECT_FORCE_NEW
PGSQL_CONNECT_ASYNC
PGSQL_CONNECTION_AUTH_OK
PGSQL_CONNECTION_AWAITING_RESPONSE
PGSQL_CONNECTION_BAD
PGSQL_CONNECTION_MADE
PGSQL_CONNECTION_OK
PGSQL_CONNECTION_SETENV
PGSQL_CONNECTION_SSL_STARTUP
PGSQL_CONNECTION_STARTED
PGSQL_SEEK_SET
PGSQL_SEEK_CUR
PGSQL_SEEK_END
PGSQL_EMPTY_QUERY
PGSQL_COMMAND_OK
PGSQL_TUPLES_OK
PGSQL_TUPLES_CHUNK
PGSQL_COPY_OUT
PGSQL_COPY_IN
PGSQL_BAD_RESPONSE
PGSQL_NONFATAL_ERROR
PGSQL_FATAL_ERROR
PGSQL_TRANSACTION_IDLE
PGSQL_TRANSACTION_ACTIVE
PGSQL_TRANSACTION_INTRANS
PGSQL_TRANSACTION_INERROR
PGSQL_TRANSACTION_UNKNOWN
PGSQL_DIAG_SEVERITY
PGSQL_DIAG_SQLSTATE
PGSQL_DIAG_MESSAGE_PRIMARY
PGSQL_DIAG_MESSAGE_DETAIL
PGSQL_DIAG_MESSAGE_HINT
PGSQL_DIAG_STATEMENT_POSITION
PGSQL_DIAG_INTERNAL_POSITION
PGSQL_DIAG_INTERNAL_QUERY
PGSQL_DIAG_CONTEXT
PGSQL_DIAG_SOURCE_FILE
PGSQL_DIAG_SOURCE_LINE
PGSQL_DIAG_SOURCE_FUNCTION
PGSQL_DIAG_SCHEMA_NAME
PGSQL_DIAG_TABLE_NAME
PGSQL_DIAG_COLUMN_NAME
PGSQL_DIAG_DATATYPE_NAME
PGSQL_DIAG_CONSTRAINT_NAME
PGSQL_ERRORS_TERSE
PGSQL_ERRORS_DEFAULT
PGSQL_ERRORS_VERBOSE
PGSQL_ERRORS_SQLSTATE
PGSQL_NOTICE_LAST
PGSQL_NOTICE_ALL
PGSQL_NOTICE_CLEAR
PGSQL_STATUS_LONG
PGSQL_STATUS_STRING
PGSQL_CONV_IGNORE_DEFAULT
PGSQL_CONV_FORCE_NULL
PGSQL_CONV_IGNORE_NOT_NULL
PGSQL_DML_NO_CONV
PGSQL_DML_EXEC
PGSQL_DML_ASYNC
PGSQL_DML_STRING
PGSQL_DML_ESCAPE
PGSQL_POLLING_FAILED
PGSQL_POLLING_READING
PGSQL_POLLING_WRITING
PGSQL_POLLING_OK
PGSQL_POLLING_ACTIVE
PGSQL_DIAG_SEVERITY_NONLOCALIZED
PGSQL_SHOW_CONTEXT_NEVER
PGSQL_SHOW_CONTEXT_ERRORS
PGSQL_SHOW_CONTEXT_ALWAYS
PGSQL_TRACE_SUPPRESS_TIMESTAMPS
PGSQL_TRACE_REGRESS_MODE
READLINE_LIB
SNMP_OID_OUTPUT_SUFFIX
SNMP_OID_OUTPUT_MODULE
SNMP_OID_OUTPUT_FULL
SNMP_OID_OUTPUT_NUMERIC
SNMP_OID_OUTPUT_UCD
SNMP_OID_OUTPUT_NONE
SNMP_VALUE_LIBRARY
SNMP_VALUE_PLAIN
SNMP_VALUE_OBJECT
SNMP_BIT_STR
SNMP_OCTET_STR
SNMP_OPAQUE
SNMP_NULL
SNMP_OBJECT_ID
SNMP_IPADDRESS
SNMP_COUNTER
SNMP_UNSIGNED
SNMP_TIMETICKS
SNMP_UINTEGER
SNMP_INTEGER
SNMP_COUNTER64
SOAP_1_1
SOAP_1_2
SOAP_PERSISTENCE_SESSION
SOAP_PERSISTENCE_REQUEST
SOAP_FUNCTIONS_ALL
SOAP_ENCODED
SOAP_LITERAL
SOAP_RPC
SOAP_DOCUMENT
SOAP_ACTOR_NEXT
SOAP_ACTOR_NONE
SOAP_ACTOR_UNLIMATERECEIVER
SOAP_COMPRESSION_ACCEPT
SOAP_COMPRESSION_GZIP
SOAP_COMPRESSION_DEFLATE
SOAP_AUTHENTICATION_BASIC
SOAP_AUTHENTICATION_DIGEST
SOAP_SSL_METHOD_TLS
SOAP_SSL_METHOD_SSLv2
SOAP_SSL_METHOD_SSLv3
SOAP_SSL_METHOD_SSLv23
UNKNOWN_TYPE
XSD_STRING
XSD_BOOLEAN
XSD_DECIMAL
XSD_FLOAT
XSD_DOUBLE
XSD_DURATION
XSD_DATETIME
XSD_TIME
XSD_DATE
XSD_GYEARMONTH
XSD_GYEAR
XSD_GMONTHDAY
XSD_GDAY
XSD_GMONTH
XSD_HEXBINARY
XSD_BASE64BINARY
XSD_ANYURI
XSD_QNAME
XSD_NOTATION
XSD_NORMALIZEDSTRING
XSD_TOKEN
XSD_LANGUAGE
XSD_NMTOKEN
XSD_NAME
XSD_NCNAME
XSD_ID
XSD_IDREF
XSD_IDREFS
XSD_ENTITY
XSD_ENTITIES
XSD_INTEGER
XSD_NONPOSITIVEINTEGER
XSD_NEGATIVEINTEGER
XSD_LONG
XSD_INT
XSD_SHORT
XSD_BYTE
XSD_NONNEGATIVEINTEGER
XSD_UNSIGNEDLONG
XSD_UNSIGNEDINT
XSD_UNSIGNEDSHORT
XSD_UNSIGNEDBYTE
XSD_POSITIVEINTEGER
XSD_NMTOKENS
XSD_ANYTYPE
XSD_ANYXML
APACHE_MAP
SOAP_ENC_OBJECT
SOAP_ENC_ARRAY
XSD_1999_TIMEINSTANT
XSD_NAMESPACE
XSD_1999_NAMESPACE
SOAP_SINGLE_ELEMENT_ARRAYS
SOAP_WAIT_ONE_WAY_CALLS
SOAP_USE_XSI_ARRAY_TYPE
WSDL_CACHE_NONE
WSDL_CACHE_DISK
WSDL_CACHE_MEMORY
WSDL_CACHE_BOTH
SODIUM_LIBRARY_VERSION
SODIUM_LIBRARY_MAJOR_VERSION
SODIUM_LIBRARY_MINOR_VERSION
SODIUM_BASE64_VARIANT_ORIGINAL
SODIUM_BASE64_VARIANT_ORIGINAL_NO_PADDING
SODIUM_BASE64_VARIANT_URLSAFE
SODIUM_BASE64_VARIANT_URLSAFE_NO_PADDING
SODIUM_CRYPTO_AEAD_AEGIS128L_KEYBYTES
SODIUM_CRYPTO_AEAD_AEGIS128L_NSECBYTES
SODIUM_CRYPTO_AEAD_AEGIS128L_NPUBBYTES
SODIUM_CRYPTO_AEAD_AEGIS128L_ABYTES
SODIUM_CRYPTO_AEAD_AEGIS256_KEYBYTES
SODIUM_CRYPTO_AEAD_AEGIS256_NSECBYTES
SODIUM_CRYPTO_AEAD_AEGIS256_NPUBBYTES
SODIUM_CRYPTO_AEAD_AEGIS256_ABYTES
SODIUM_CRYPTO_AEAD_AES256GCM_KEYBYTES
SODIUM_CRYPTO_AEAD_AES256GCM_NSECBYTES
SODIUM_CRYPTO_AEAD_AES256GCM_NPUBBYTES
SODIUM_CRYPTO_AEAD_AES256GCM_ABYTES
SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES
SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_NSECBYTES
SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES
SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_ABYTES
SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_KEYBYTES
SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_NSECBYTES
SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES
SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_ABYTES
SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_ABYTES
SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES
SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES
SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NSECBYTES
SODIUM_CRYPTO_AUTH_BYTES
SODIUM_CRYPTO_AUTH_KEYBYTES
SODIUM_CRYPTO_BOX_SEALBYTES
SODIUM_CRYPTO_BOX_SECRETKEYBYTES
SODIUM_CRYPTO_BOX_PUBLICKEYBYTES
SODIUM_CRYPTO_BOX_KEYPAIRBYTES
SODIUM_CRYPTO_BOX_MACBYTES
SODIUM_CRYPTO_BOX_NONCEBYTES
SODIUM_CRYPTO_BOX_SEEDBYTES
SODIUM_CRYPTO_KDF_BYTES_MIN
SODIUM_CRYPTO_KDF_BYTES_MAX
SODIUM_CRYPTO_KDF_CONTEXTBYTES
SODIUM_CRYPTO_KDF_KEYBYTES
SODIUM_CRYPTO_KX_SEEDBYTES
SODIUM_CRYPTO_KX_SESSIONKEYBYTES
SODIUM_CRYPTO_KX_PUBLICKEYBYTES
SODIUM_CRYPTO_KX_SECRETKEYBYTES
SODIUM_CRYPTO_KX_KEYPAIRBYTES
SODIUM_CRYPTO_GENERICHASH_BYTES
SODIUM_CRYPTO_GENERICHASH_BYTES_MIN
SODIUM_CRYPTO_GENERICHASH_BYTES_MAX
SODIUM_CRYPTO_GENERICHASH_KEYBYTES
SODIUM_CRYPTO_GENERICHASH_KEYBYTES_MIN
SODIUM_CRYPTO_GENERICHASH_KEYBYTES_MAX
SODIUM_CRYPTO_PWHASH_ALG_ARGON2I13
SODIUM_CRYPTO_PWHASH_ALG_ARGON2ID13
SODIUM_CRYPTO_PWHASH_ALG_DEFAULT
SODIUM_CRYPTO_PWHASH_SALTBYTES
SODIUM_CRYPTO_PWHASH_STRPREFIX
SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE
SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE
SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE
SODIUM_CRYPTO_PWHASH_MEMLIMIT_MODERATE
SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE
SODIUM_CRYPTO_PWHASH_MEMLIMIT_SENSITIVE
SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_SALTBYTES
SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_STRPREFIX
SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_INTERACTIVE
SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_INTERACTIVE
SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_SENSITIVE
SODIUM_CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_SENSITIVE
SODIUM_CRYPTO_CORE_RISTRETTO255_BYTES
SODIUM_CRYPTO_CORE_RISTRETTO255_HASHBYTES
SODIUM_CRYPTO_CORE_RISTRETTO255_NONREDUCEDSCALARBYTES
SODIUM_CRYPTO_CORE_RISTRETTO255_SCALARBYTES
SODIUM_CRYPTO_SCALARMULT_BYTES
SODIUM_CRYPTO_SCALARMULT_SCALARBYTES
SODIUM_CRYPTO_SCALARMULT_RISTRETTO255_BYTES
SODIUM_CRYPTO_SCALARMULT_RISTRETTO255_SCALARBYTES
SODIUM_CRYPTO_SHORTHASH_BYTES
SODIUM_CRYPTO_SHORTHASH_KEYBYTES
SODIUM_CRYPTO_SECRETBOX_KEYBYTES
SODIUM_CRYPTO_SECRETBOX_MACBYTES
SODIUM_CRYPTO_SECRETBOX_NONCEBYTES
SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES
SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES
SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_KEYBYTES
SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_MESSAGEBYTES_MAX
SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_FINAL
SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE
SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PUSH
SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY
SODIUM_CRYPTO_SIGN_BYTES
SODIUM_CRYPTO_SIGN_SEEDBYTES
SODIUM_CRYPTO_SIGN_PUBLICKEYBYTES
SODIUM_CRYPTO_SIGN_SECRETKEYBYTES
SODIUM_CRYPTO_SIGN_KEYPAIRBYTES
SODIUM_CRYPTO_STREAM_NONCEBYTES
SODIUM_CRYPTO_STREAM_KEYBYTES
SODIUM_CRYPTO_STREAM_XCHACHA20_KEYBYTES
SODIUM_CRYPTO_STREAM_XCHACHA20_NONCEBYTES
TIDY_TAG_UNKNOWN
TIDY_TAG_A
TIDY_TAG_ABBR
TIDY_TAG_ACRONYM
TIDY_TAG_ADDRESS
TIDY_TAG_ALIGN
TIDY_TAG_APPLET
TIDY_TAG_AREA
TIDY_TAG_ARTICLE
TIDY_TAG_ASIDE
TIDY_TAG_AUDIO
TIDY_TAG_B
TIDY_TAG_BASE
TIDY_TAG_BASEFONT
TIDY_TAG_BDI
TIDY_TAG_BDO
TIDY_TAG_BGSOUND
TIDY_TAG_BIG
TIDY_TAG_BLINK
TIDY_TAG_BLOCKQUOTE
TIDY_TAG_BODY
TIDY_TAG_BR
TIDY_TAG_BUTTON
TIDY_TAG_CANVAS
TIDY_TAG_CAPTION
TIDY_TAG_CENTER
TIDY_TAG_CITE
TIDY_TAG_CODE
TIDY_TAG_COL
TIDY_TAG_COLGROUP
TIDY_TAG_COMMAND
TIDY_TAG_COMMENT
TIDY_TAG_DATALIST
TIDY_TAG_DD
TIDY_TAG_DEL
TIDY_TAG_DETAILS
TIDY_TAG_DFN
TIDY_TAG_DIALOG
TIDY_TAG_DIR
TIDY_TAG_DIV
TIDY_TAG_DL
TIDY_TAG_DT
TIDY_TAG_EM
TIDY_TAG_EMBED
TIDY_TAG_FIELDSET
TIDY_TAG_FIGCAPTION
TIDY_TAG_FIGURE
TIDY_TAG_FONT
TIDY_TAG_FOOTER
TIDY_TAG_FORM
TIDY_TAG_FRAME
TIDY_TAG_FRAMESET
TIDY_TAG_H1
TIDY_TAG_H2
TIDY_TAG_H3
TIDY_TAG_H4
TIDY_TAG_H5
TIDY_TAG_H6
TIDY_TAG_HEAD
TIDY_TAG_HEADER
TIDY_TAG_HGROUP
TIDY_TAG_HR
TIDY_TAG_HTML
TIDY_TAG_I
TIDY_TAG_IFRAME
TIDY_TAG_ILAYER
TIDY_TAG_IMG
TIDY_TAG_INPUT
TIDY_TAG_INS
TIDY_TAG_ISINDEX
TIDY_TAG_KBD
TIDY_TAG_KEYGEN
TIDY_TAG_LABEL
TIDY_TAG_LAYER
TIDY_TAG_LEGEND
TIDY_TAG_LI
TIDY_TAG_LINK
TIDY_TAG_LISTING
TIDY_TAG_MAIN
TIDY_TAG_MAP
TIDY_TAG_MARK
TIDY_TAG_MARQUEE
TIDY_TAG_MENU
TIDY_TAG_MENUITEM
TIDY_TAG_META
TIDY_TAG_METER
TIDY_TAG_MULTICOL
TIDY_TAG_NAV
TIDY_TAG_NOBR
TIDY_TAG_NOEMBED
TIDY_TAG_NOFRAMES
TIDY_TAG_NOLAYER
TIDY_TAG_NOSAVE
TIDY_TAG_NOSCRIPT
TIDY_TAG_OBJECT
TIDY_TAG_OL
TIDY_TAG_OPTGROUP
TIDY_TAG_OPTION
TIDY_TAG_OUTPUT
TIDY_TAG_P
TIDY_TAG_PARAM
TIDY_TAG_PLAINTEXT
TIDY_TAG_PRE
TIDY_TAG_PROGRESS
TIDY_TAG_Q
TIDY_TAG_RB
TIDY_TAG_RBC
TIDY_TAG_RP
TIDY_TAG_RT
TIDY_TAG_RTC
TIDY_TAG_RUBY
TIDY_TAG_S
TIDY_TAG_SAMP
TIDY_TAG_SCRIPT
TIDY_TAG_SECTION
TIDY_TAG_SELECT
TIDY_TAG_SERVER
TIDY_TAG_SERVLET
TIDY_TAG_SMALL
TIDY_TAG_SOURCE
TIDY_TAG_SPACER
TIDY_TAG_SPAN
TIDY_TAG_STRIKE
TIDY_TAG_STRONG
TIDY_TAG_STYLE
TIDY_TAG_SUB
TIDY_TAG_SUMMARY
TIDY_TAG_SUP
TIDY_TAG_TABLE
TIDY_TAG_TBODY
TIDY_TAG_TD
TIDY_TAG_TEMPLATE
TIDY_TAG_TEXTAREA
TIDY_TAG_TFOOT
TIDY_TAG_TH
TIDY_TAG_THEAD
TIDY_TAG_TIME
TIDY_TAG_TITLE
TIDY_TAG_TR
TIDY_TAG_TRACK
TIDY_TAG_TT
TIDY_TAG_U
TIDY_TAG_UL
TIDY_TAG_VAR
TIDY_TAG_VIDEO
TIDY_TAG_WBR
TIDY_TAG_XMP
TIDY_NODETYPE_ROOT
TIDY_NODETYPE_DOCTYPE
TIDY_NODETYPE_COMMENT
TIDY_NODETYPE_PROCINS
TIDY_NODETYPE_TEXT
TIDY_NODETYPE_START
TIDY_NODETYPE_END
TIDY_NODETYPE_STARTEND
TIDY_NODETYPE_CDATA
TIDY_NODETYPE_SECTION
TIDY_NODETYPE_ASP
TIDY_NODETYPE_JSTE
TIDY_NODETYPE_PHP
TIDY_NODETYPE_XMLDECL
ODBC_TYPE
ODBC_BINMODE_PASSTHRU
ODBC_BINMODE_RETURN
ODBC_BINMODE_CONVERT
SQL_ODBC_CURSORS
SQL_CUR_USE_DRIVER
SQL_CUR_USE_IF_NEEDED
SQL_CUR_USE_ODBC
SQL_CONCURRENCY
SQL_CONCUR_READ_ONLY
SQL_CONCUR_LOCK
SQL_CONCUR_ROWVER
SQL_CONCUR_VALUES
SQL_CURSOR_TYPE
SQL_CURSOR_FORWARD_ONLY
SQL_CURSOR_KEYSET_DRIVEN
SQL_CURSOR_DYNAMIC
SQL_CURSOR_STATIC
SQL_KEYSET_SIZE
SQL_CHAR
SQL_VARCHAR
SQL_LONGVARCHAR
SQL_WCHAR
SQL_WVARCHAR
SQL_WLONGVARCHAR
SQL_DECIMAL
SQL_NUMERIC
SQL_BIT
SQL_TINYINT
SQL_SMALLINT
SQL_INTEGER
SQL_BIGINT
SQL_REAL
SQL_FLOAT
SQL_DOUBLE
SQL_BINARY
SQL_VARBINARY
SQL_LONGVARBINARY
SQL_DATE
SQL_TIME
SQL_TIMESTAMP
SQL_TYPE_DATE
SQL_TYPE_TIME
SQL_TYPE_TIMESTAMP
SQL_BEST_ROWID
SQL_ROWVER
SQL_SCOPE_CURROW
SQL_SCOPE_TRANSACTION
SQL_SCOPE_SESSION
SQL_NO_NULLS
SQL_NULLABLE
SQL_INDEX_UNIQUE
SQL_INDEX_ALL
SQL_ENSURE
SQL_QUICK
SQL_FETCH_FIRST
SQL_FETCH_NEXT
XML_ERROR_NONE
XML_ERROR_NO_MEMORY
XML_ERROR_SYNTAX
XML_ERROR_NO_ELEMENTS
XML_ERROR_INVALID_TOKEN
XML_ERROR_UNCLOSED_TOKEN
XML_ERROR_PARTIAL_CHAR
XML_ERROR_TAG_MISMATCH
XML_ERROR_DUPLICATE_ATTRIBUTE
XML_ERROR_JUNK_AFTER_DOC_ELEMENT
XML_ERROR_PARAM_ENTITY_REF
XML_ERROR_UNDEFINED_ENTITY
XML_ERROR_RECURSIVE_ENTITY_REF
XML_ERROR_ASYNC_ENTITY
XML_ERROR_BAD_CHAR_REF
XML_ERROR_BINARY_ENTITY_REF
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF
XML_ERROR_MISPLACED_XML_PI
XML_ERROR_UNKNOWN_ENCODING
XML_ERROR_INCORRECT_ENCODING
XML_ERROR_UNCLOSED_CDATA_SECTION
XML_ERROR_EXTERNAL_ENTITY_HANDLING
XML_OPTION_CASE_FOLDING
XML_OPTION_PARSE_HUGE
XML_OPTION_TARGET_ENCODING
XML_OPTION_SKIP_TAGSTART
XML_OPTION_SKIP_WHITE
XML_SAX_IMPL
XSL_CLONE_AUTO
XSL_CLONE_NEVER
XSL_CLONE_ALWAYS
LIBXSLT_VERSION
LIBXSLT_DOTTED_VERSION
LIBEXSLT_VERSION
LIBEXSLT_DOTTED_VERSION
XSL_SECPREF_NONE
XSL_SECPREF_READ_FILE
XSL_SECPREF_WRITE_FILE
XSL_SECPREF_CREATE_DIRECTORY
XSL_SECPREF_READ_NETWORK
XSL_SECPREF_WRITE_NETWORK
XSL_SECPREF_DEFAULT
ZipArchive::CREATE
ZipArchive::OVERWRITE
ZipArchive::EXCL
ZipArchive::RDONLY
ZipArchive::CHECKCONS
ZipArchive::AFL_RDONLY
ZipArchive::AFL_IS_TORRENTZIP
ZipArchive::AFL_WANT_TORRENTZIP
ZipArchive::AFL_CREATE_OR_KEEP_FILE_FOR_EMPTY_ARCHIVE
ZipArchive::FL_NOCASE
ZipArchive::FL_NODIR
ZipArchive::FL_COMPRESSED
ZipArchive::FL_UNCHANGED
ZipArchive::FL_RECOMPRESS
ZipArchive::FL_ENCRYPTED
ZipArchive::FL_OVERWRITE
ZipArchive::FL_LOCAL
ZipArchive::FL_CENTRAL
ZipArchive::FL_ENC_GUESS
ZipArchive::FL_ENC_RAW
ZipArchive::FL_ENC_STRICT
ZipArchive::FL_ENC_UTF_8
ZipArchive::FL_ENC_CP437
ZipArchive::FL_OPEN_FILE_NOW
ZipArchive::CM_DEFAULT
ZipArchive::CM_STORE
ZipArchive::CM_SHRINK
ZipArchive::CM_REDUCE_1
ZipArchive::CM_REDUCE_2
ZipArchive::CM_REDUCE_3
ZipArchive::CM_REDUCE_4
ZipArchive::CM_IMPLODE
ZipArchive::CM_DEFLATE
ZipArchive::CM_DEFLATE64
ZipArchive::CM_PKWARE_IMPLODE
ZipArchive::CM_BZIP2
ZipArchive::CM_LZMA
ZipArchive::CM_LZMA2
ZipArchive::CM_ZSTD
ZipArchive::CM_XZ
ZipArchive::CM_TERSE
ZipArchive::CM_LZ77
ZipArchive::CM_WAVPACK
ZipArchive::CM_PPMD
ZipArchive::ER_OK
ZipArchive::ER_MULTIDISK
ZipArchive::ER_RENAME
ZipArchive::ER_CLOSE
ZipArchive::ER_SEEK
ZipArchive::ER_READ
ZipArchive::ER_WRITE
ZipArchive::ER_CRC
ZipArchive::ER_ZIPCLOSED
ZipArchive::ER_NOENT
ZipArchive::ER_EXISTS
ZipArchive::ER_OPEN
ZipArchive::ER_TMPOPEN
ZipArchive::ER_ZLIB
ZipArchive::ER_MEMORY
ZipArchive::ER_CHANGED
ZipArchive::ER_COMPNOTSUPP
ZipArchive::ER_EOF
ZipArchive::ER_INVAL
ZipArchive::ER_NOZIP
ZipArchive::ER_INTERNAL
ZipArchive::ER_INCONS
ZipArchive::ER_REMOVE
ZipArchive::ER_DELETED
ZipArchive::ER_ENCRNOTSUPP
ZipArchive::ER_RDONLY
ZipArchive::ER_NOPASSWD
ZipArchive::ER_WRONGPASSWD
ZipArchive::ER_OPNOTSUPP
ZipArchive::ER_INUSE
ZipArchive::ER_TELL
ZipArchive::ER_COMPRESSED_DATA
ZipArchive::ER_CANCELLED
ZipArchive::ER_DATA_LENGTH
ZipArchive::ER_NOT_ALLOWED
ZipArchive::ER_TRUNCATED_ZIP
ZipArchive::EM_NONE
ZipArchive::EM_TRAD_PKWARE
ZipArchive::EM_AES_128
ZipArchive::EM_AES_192
ZipArchive::EM_AES_256
ZipArchive::EM_UNKNOWN
ZipArchive::LENGTH_TO_END
ZipArchive::LENGTH_UNCHECKED
ZipArchive::LIBZIP_VERSION
ZipArchive::OPSYS_DOS
ZipArchive::OPSYS_AMIGA
ZipArchive::OPSYS_OPENVMS
ZipArchive::OPSYS_UNIX
ZipArchive::OPSYS_VM_CMS
ZipArchive::OPSYS_ATARI_ST
ZipArchive::OPSYS_OS_2
ZipArchive::OPSYS_MACINTOSH
ZipArchive::OPSYS_Z_SYSTEM
ZipArchive::OPSYS_CPM
ZipArchive::OPSYS_WINDOWS_NTFS
ZipArchive::OPSYS_MVS
ZipArchive::OPSYS_VSE
ZipArchive::OPSYS_ACORN_RISC
ZipArchive::OPSYS_VFAT
ZipArchive::OPSYS_ALTERNATE_MVS
ZipArchive::OPSYS_BEOS
ZipArchive::OPSYS_TANDEM
ZipArchive::OPSYS_OS_400
ZipArchive::OPSYS_OS_X
ZipArchive::OPSYS_DEFAULT
